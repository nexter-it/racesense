{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/racesense/racesense-frontend/src/pages/Race.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RaceSetup from './RaceSetup';\n// Mantieni RaceLive se lo usi già nel progetto (stile gestito internamente oppure in futuro lo porteremo su App.css)\nimport RaceLive from './RaceLive';\n\n// Importa App.css a livello globale se non è già caricato in index.js\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RacePage() {\n  _s();\n  const [raceConfig, setRaceConfig] = useState(null);\n  const [raceActive, setRaceActive] = useState(false);\n  const handleStartRace = config => {\n    console.log('[Race] Configurazione ricevuta:', config);\n    setRaceConfig(config);\n    setRaceActive(true);\n  };\n  const handleStopRace = () => {\n    setRaceActive(false);\n    setRaceConfig(null);\n  };\n  if (!raceActive || !raceConfig) {\n    // Schermata di setup in stile App.css\n    return /*#__PURE__*/_jsxDEV(RaceSetup, {\n      onStartRace: handleStartRace\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Vista live (lasciata com’è; se vuoi, la portiamo allo stesso stile in un secondo step)\n  return /*#__PURE__*/_jsxDEV(RaceLive, {\n    raceConfig: raceConfig,\n    onStopRace: handleStopRace\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n}\n_s(RacePage, \"hxnBKaddODh/41EIaVIlJ0Z87Hc=\");\n_c = RacePage;\nvar _c;\n$RefreshReg$(_c, \"RacePage\");","map":{"version":3,"names":["React","useState","RaceSetup","RaceLive","jsxDEV","_jsxDEV","RacePage","_s","raceConfig","setRaceConfig","raceActive","setRaceActive","handleStartRace","config","console","log","handleStopRace","onStartRace","fileName","_jsxFileName","lineNumber","columnNumber","onStopRace","_c","$RefreshReg$"],"sources":["/home/ubuntu/racesense/racesense-frontend/src/pages/Race.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport RaceSetup from './RaceSetup';\n// Mantieni RaceLive se lo usi già nel progetto (stile gestito internamente oppure in futuro lo porteremo su App.css)\nimport RaceLive from './RaceLive';\n\n// Importa App.css a livello globale se non è già caricato in index.js\nimport '../App.css';\n\nexport default function RacePage() {\n  const [raceConfig, setRaceConfig] = useState(null);\n  const [raceActive, setRaceActive] = useState(false);\n\n  const handleStartRace = (config) => {\n    console.log('[Race] Configurazione ricevuta:', config);\n    setRaceConfig(config);\n    setRaceActive(true);\n  };\n\n  const handleStopRace = () => {\n    setRaceActive(false);\n    setRaceConfig(null);\n  };\n\n  if (!raceActive || !raceConfig) {\n    // Schermata di setup in stile App.css\n    return <RaceSetup onStartRace={handleStartRace} />;\n  }\n\n  // Vista live (lasciata com’è; se vuoi, la portiamo allo stesso stile in un secondo step)\n  return <RaceLive raceConfig={raceConfig} onStopRace={handleStopRace} />;\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC;AACA,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AACA,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,eAAe,GAAIC,MAAM,IAAK;IAClCC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,MAAM,CAAC;IACtDJ,aAAa,CAACI,MAAM,CAAC;IACrBF,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMK,cAAc,GAAGA,CAAA,KAAM;IAC3BL,aAAa,CAAC,KAAK,CAAC;IACpBF,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,IAAI,CAACC,UAAU,IAAI,CAACF,UAAU,EAAE;IAC9B;IACA,oBAAOH,OAAA,CAACH,SAAS;MAACe,WAAW,EAAEL;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpD;;EAEA;EACA,oBAAOhB,OAAA,CAACF,QAAQ;IAACK,UAAU,EAAEA,UAAW;IAACc,UAAU,EAAEN;EAAe;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzE;AAACd,EAAA,CAtBuBD,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}