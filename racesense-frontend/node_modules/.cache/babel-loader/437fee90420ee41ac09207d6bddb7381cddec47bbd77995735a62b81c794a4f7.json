{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/racesense/racesense-frontend/src/pages/Race.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport RaceSetup from './RaceSetup';\nimport RaceLive from './RaceLive';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nexport default function RacePage() {\n  _s();\n  const [raceConfig, setRaceConfig] = useState(null); // config locale dopo avvio\n  const [viewServerRace, setViewServerRace] = useState(false);\n  const [serverHasRace, setServerHasRace] = useState(false);\n  const [checking, setChecking] = useState(true);\n\n  // verifica se esiste una gara in corso lato server\n  useEffect(() => {\n    let alive = true;\n    fetch(`${API_BASE}/api/race/state`).then(r => r.json()).then(j => {\n      if (!alive) return;\n      setServerHasRace(!!j.active);\n    }).catch(() => {}).finally(() => {\n      if (alive) setChecking(false);\n    });\n    return () => {\n      alive = false;\n    };\n  }, []);\n\n  // Se ho una config locale (appena avviata da questo client) → vado live\n  if (raceConfig) return /*#__PURE__*/_jsxDEV(RaceLive, {\n    raceConfig: raceConfig,\n    onStopRace: () => setRaceConfig(null)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 26\n  }, this);\n\n  // se ho scelto di vedere la gara server-side → RaceLive senza config locale\n  if (viewServerRace) return /*#__PURE__*/_jsxDEV(RaceLive, {\n    raceConfig: null,\n    onStopRace: () => setViewServerRace(false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 30\n  }, this);\n\n  // altrimenti mostro RaceSetup; se c’è già una gara lato server mostro un banner\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!checking && serverHasRace && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pilot-form\",\n      style: {\n        margin: '16px 20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        style: {\n          color: 'var(--brand)'\n        },\n        children: \"GARA IN CORSO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"muted\",\n        style: {\n          marginTop: 6\n        },\n        children: \"Esiste gi\\xE0 una gara attiva su questo server. Vuoi visualizzarla?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 8,\n          marginTop: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-primary\",\n          onClick: () => setViewServerRace(true),\n          children: \"Vedi la gara\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RaceSetup, {\n      onStartRace: cfg => setRaceConfig(cfg)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(RacePage, \"x6bENM6Djbu+tfeR37wuSu6MJdE=\");\n_c = RacePage;\nvar _c;\n$RefreshReg$(_c, \"RacePage\");","map":{"version":3,"names":["React","useEffect","useState","RaceSetup","RaceLive","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","process","env","REACT_APP_API_BASE","window","location","hostname","RacePage","_s","raceConfig","setRaceConfig","viewServerRace","setViewServerRace","serverHasRace","setServerHasRace","checking","setChecking","alive","fetch","then","r","json","j","active","catch","finally","onStopRace","fileName","_jsxFileName","lineNumber","columnNumber","children","className","style","margin","color","marginTop","display","gap","onClick","onStartRace","cfg","_c","$RefreshReg$"],"sources":["/home/ubuntu/racesense/racesense-frontend/src/pages/Race.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport RaceSetup from './RaceSetup';\nimport RaceLive from './RaceLive';\n\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\n\nexport default function RacePage() {\n  const [raceConfig, setRaceConfig] = useState(null);   // config locale dopo avvio\n  const [viewServerRace, setViewServerRace] = useState(false);\n  const [serverHasRace, setServerHasRace] = useState(false);\n  const [checking, setChecking] = useState(true);\n\n  // verifica se esiste una gara in corso lato server\n  useEffect(() => {\n    let alive = true;\n    fetch(`${API_BASE}/api/race/state`)\n      .then(r => r.json())\n      .then(j => { if (!alive) return; setServerHasRace(!!j.active); })\n      .catch(() => { })\n      .finally(() => { if (alive) setChecking(false); });\n    return () => { alive = false; };\n  }, []);\n\n  // Se ho una config locale (appena avviata da questo client) → vado live\n  if (raceConfig) return <RaceLive raceConfig={raceConfig} onStopRace={() => setRaceConfig(null)} />;\n\n  // se ho scelto di vedere la gara server-side → RaceLive senza config locale\n  if (viewServerRace) return <RaceLive raceConfig={null} onStopRace={() => setViewServerRace(false)} />;\n\n  // altrimenti mostro RaceSetup; se c’è già una gara lato server mostro un banner\n  return (\n    <>\n      {(!checking && serverHasRace) && (\n        <div className=\"pilot-form\" style={{ margin: '16px 20px' }}>\n          <strong style={{ color: 'var(--brand)' }}>GARA IN CORSO</strong>\n          <p className=\"muted\" style={{ marginTop: 6 }}>\n            Esiste già una gara attiva su questo server. Vuoi visualizzarla?\n          </p>\n          <div style={{ display: 'flex', gap: 8, marginTop: 8 }}>\n            <button className=\"btn-primary\" onClick={() => setViewServerRace(true)}>Vedi la gara</button>\n          </div>\n        </div>\n      )}\n      <RaceSetup\n        onStartRace={(cfg) => setRaceConfig(cfg)}\n      />\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}