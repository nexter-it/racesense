{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/racesense/racesense-frontend/src/pages/RaceLive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './Race.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n// Utility: calcola distanza Haversine (m)\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n// Trova il settore piÃ¹ vicino\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity;\n  let closestIdx = 0;\n  sectors.forEach((s, i) => {\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) {\n      minDist = d;\n      closestIdx = i;\n    }\n  });\n  return closestIdx;\n}\nexport default function RaceLive({\n  raceConfig,\n  onStopRace\n}) {\n  _s();\n  var _circuitData$stats, _circuitData$stats$le, _circuitData$sectors;\n  const {\n    circuitData,\n    totalLaps,\n    assignments,\n    pilots\n  } = raceConfig;\n  const [driversState, setDriversState] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeBattles, setActiveBattles] = useState([]);\n  const canvasRef = useRef(null);\n  const wsRef = useRef(null);\n  const animFrameRef = useRef(null);\n\n  // ========== WebSocket GPS ==========\n  useEffect(() => {\n    const ws = new WebSocket(WS_URL);\n    wsRef.current = ws;\n    ws.onopen = () => console.log('[RaceLive] WebSocket connesso');\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.raw) {\n          const parts = data.raw.split('/');\n          if (parts.length >= 7) {\n            const mac = parts[0];\n\n            // Ignora device non assegnati\n            if (!assignments[mac]) return;\n            const gps = {\n              mac,\n              lat: parseFloat(parts[1]),\n              lon: parseFloat(parts[2]),\n              speed: parseFloat(parts[5]),\n              ts: parts[6]\n            };\n            handleGPSUpdate(gps);\n          }\n        }\n      } catch (e) {\n        console.error('[WS] Parse error:', e);\n      }\n    };\n    ws.onerror = err => console.error('[WS] Errore:', err);\n    ws.onclose = () => console.log('[WS] Chiuso');\n    return () => {\n      if (ws.readyState === WebSocket.OPEN) ws.close();\n    };\n  }, [assignments]);\n\n  // ========== Gestione GPS Update ==========\n  const handleGPSUpdate = useCallback(gps => {\n    if (!(circuitData !== null && circuitData !== void 0 && circuitData.sectors)) return;\n    const {\n      mac,\n      lat,\n      lon,\n      speed\n    } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n\n    // Trova pilota assegnato\n    const pilotId = assignments[mac];\n    const pilot = pilots.find(p => p.id === pilotId);\n    if (!pilot) return;\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        name: `${pilot.name} ${pilot.surname}`,\n        team: pilot.team,\n        color: pilot.color || `hsl(${Math.random() * 360}, 75%, 55%)`,\n        lat,\n        lon,\n        speed: 0,\n        sectorIdx,\n        lapCount: 0,\n        lastLapTime: null,\n        bestLapTime: null,\n        lastSectorIdx: sectorIdx,\n        lapStartTime: Date.now(),\n        trail: []\n      };\n\n      // Rilevamento completamento giro\n      let newLapCount = existing.lapCount;\n      let newLapTime = existing.lastLapTime;\n      let newBestLap = existing.bestLapTime;\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        const lapDuration = (Date.now() - existing.lapStartTime) / 1000;\n        if (lapDuration > 5) {\n          newLapCount = existing.lapCount + 1;\n          newLapTime = lapDuration;\n          if (!newBestLap || lapDuration < newBestLap) {\n            newBestLap = lapDuration;\n          }\n          console.log(`[LAP] ${existing.name} completato giro ${newLapCount} in ${lapDuration.toFixed(2)}s`);\n        }\n      }\n      const newTrail = [...existing.trail, {\n        lat,\n        lon\n      }].slice(-20);\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat,\n          lon,\n          speed,\n          sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount: newLapCount,\n          lastLapTime: newLapTime,\n          bestLapTime: newBestLap,\n          lapStartTime: newLapCount > existing.lapCount ? Date.now() : existing.lapStartTime,\n          trail: newTrail,\n          updatedAt: Date.now()\n        }\n      };\n    });\n  }, [circuitData, assignments, pilots]);\n\n  // ========== Aggiorna classifica e battaglie ==========\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n    setLeaderboard(sorted);\n\n    // Battaglie\n    const battles = [];\n    for (let i = 0; i < sorted.length - 1; i++) {\n      const driver1 = sorted[i];\n      const driver2 = sorted[i + 1];\n      if (driver1.lapCount === driver2.lapCount) {\n        const dist = haversine(driver1.lat, driver1.lon, driver2.lat, driver2.lon);\n        if (dist < 20) {\n          battles.push({\n            leader: driver1,\n            chaser: driver2,\n            distance: dist,\n            position: i + 1\n          });\n        }\n      }\n    }\n    setActiveBattles(battles);\n  }, [driversState]);\n\n  // ========== Rendering Canvas ==========\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const resize = () => {\n      const rect = canvas.parentElement.getBoundingClientRect();\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      canvas.style.width = `${rect.width}px`;\n      canvas.style.height = `${rect.height}px`;\n      ctx.scale(dpr, dpr);\n    };\n    resize();\n    window.addEventListener('resize', resize);\n\n    // Calcola bounds pista\n    const lats = circuitData.sectors.map(s => s.lat);\n    const lons = circuitData.sectors.map(s => s.lon);\n    const minLat = Math.min(...lats);\n    const maxLat = Math.max(...lats);\n    const minLon = Math.min(...lons);\n    const maxLon = Math.max(...lons);\n    const padding = 50;\n    const project = (lat, lon) => {\n      const rect = canvas.getBoundingClientRect();\n      const w = rect.width - padding * 2;\n      const h = rect.height - padding * 2;\n      const x = (lon - minLon) / (maxLon - minLon) * w + padding;\n      const y = h - (lat - minLat) / (maxLat - minLat) * h + padding;\n      return {\n        x,\n        y\n      };\n    };\n    const draw = () => {\n      const rect = canvas.getBoundingClientRect();\n      ctx.clearRect(0, 0, rect.width, rect.height);\n\n      // Sfondo\n      ctx.fillStyle = '#0a0e1a';\n      ctx.fillRect(0, 0, rect.width, rect.height);\n\n      // Tracciato\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n      ctx.lineWidth = 30;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n\n      // Linea centrale\n      ctx.strokeStyle = 'rgba(255, 215, 0, 0.5)';\n      ctx.lineWidth = 2;\n      ctx.setLineDash([10, 10]);\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n      ctx.setLineDash([]);\n\n      // Finish line\n      if (circuitData.sectors.length > 1) {\n        const s0 = project(circuitData.sectors[0].lat, circuitData.sectors[0].lon);\n        const s1 = project(circuitData.sectors[1].lat, circuitData.sectors[1].lon);\n        const angle = Math.atan2(s1.y - s0.y, s1.x - s0.x);\n        const perpAngle = angle + Math.PI / 2;\n        const flagWidth = 30;\n        ctx.save();\n        ctx.translate(s0.x, s0.y);\n        ctx.rotate(perpAngle);\n\n        // Bandiera a scacchi\n        const cols = 6;\n        const rows = 4;\n        const cellW = flagWidth / cols;\n        const cellH = flagWidth / rows;\n        for (let r = 0; r < rows; r++) {\n          for (let c = 0; c < cols; c++) {\n            ctx.fillStyle = (r + c) % 2 === 0 ? '#fff' : '#000';\n            ctx.fillRect(c * cellW - flagWidth / 2, r * cellH - flagWidth / 2, cellW, cellH);\n          }\n        }\n        ctx.restore();\n      }\n\n      // Piloti\n      const sortedDrivers = Object.values(driversState).sort((a, b) => {\n        if (a.lapCount !== b.lapCount) return a.lapCount - b.lapCount;\n        return a.sectorIdx - b.sectorIdx;\n      });\n      sortedDrivers.forEach((driver, idx) => {\n        const pos = project(driver.lat, driver.lon);\n\n        // Trail\n        if (driver.trail && driver.trail.length > 1) {\n          ctx.strokeStyle = driver.color + '40';\n          ctx.lineWidth = 4;\n          ctx.beginPath();\n          driver.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti === 0 ? ctx.moveTo(tp.x, tp.y) : ctx.lineTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n        }\n\n        // Driver dot\n        const isLeader = idx === sortedDrivers.length - 1;\n        const radius = isLeader ? 7 : 6;\n        ctx.fillStyle = driver.color;\n        ctx.beginPath();\n        ctx.arc(pos.x, pos.y, radius, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // Nome\n        ctx.fillStyle = '#fff';\n        ctx.font = 'bold 12px Roboto Mono';\n        ctx.textAlign = 'center';\n        ctx.fillText(driver.name.split(' ')[0], pos.x, pos.y - 15);\n      });\n      animFrameRef.current = requestAnimationFrame(draw);\n    };\n    draw();\n    return () => {\n      window.removeEventListener('resize', resize);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData, driversState]);\n\n  // Formatta tempo\n  const formatLapTime = seconds => {\n    if (!seconds) return '--:--.---';\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(3);\n    return `${mins}:${secs.padStart(6, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"race-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"race-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"race-logo\",\n          children: \"\\uD83C\\uDFC1 RACESENSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"race-title\",\n          children: \"LIVE RACE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circuit-badge\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"circuit-icon\",\n            children: \"\\uD83D\\uDEE3\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"circuit-name\",\n            children: circuitData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"laps-badge\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"laps-icon\",\n            children: \"\\uD83C\\uDFC1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"laps-text\",\n            children: [totalLaps, \" GIRI\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"race-live\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"track-canvas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-overlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"live-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"live-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this), \"LIVE\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), circuitData && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-icon\",\n                  children: \"\\uD83D\\uDCCF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-text\",\n                  children: [(_circuitData$stats = circuitData.stats) === null || _circuitData$stats === void 0 ? void 0 : (_circuitData$stats$le = _circuitData$stats.lengthMeters) === null || _circuitData$stats$le === void 0 ? void 0 : _circuitData$stats$le.toFixed(0), \"m\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-icon\",\n                  children: \"\\uD83D\\uDCCD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-text\",\n                  children: [((_circuitData$sectors = circuitData.sectors) === null || _circuitData$sectors === void 0 ? void 0 : _circuitData$sectors.length) || 0, \" sectors\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"leaderboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leaderboard-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83C\\uDFC6 CLASSIFICA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"leaderboard-subtitle\",\n              children: [leaderboard.length, \" Piloti\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leaderboard-list\",\n            children: leaderboard.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-drivers\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u23F3 In attesa di dati GPS...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this) : leaderboard.map((driver, pos) => {\n              const battle = activeBattles.find(b => b.leader.mac === driver.mac);\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `leaderboard-item ${pos === 0 ? 'leader' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"position\",\n                    children: pos + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"driver-color\",\n                    style: {\n                      background: driver.color\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"driver-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"driver-name\",\n                      children: [driver.name, pos === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"leader-badge\",\n                        children: \"\\uD83D\\uDC51\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 413,\n                        columnNumber: 43\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"driver-stats\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"lap-count\",\n                        children: [\"Giro \", driver.lapCount, \"/\", totalLaps]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 416,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"sector\",\n                        children: [\"S\", driver.sectorIdx]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 417,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"driver-times\",\n                    children: [pos === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"gap leader-gap\",\n                      children: \"LEADER\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 29\n                    }, this) : (() => {\n                      const leader = leaderboard[0];\n                      let gapDisplay = '';\n                      if (driver.lapCount < leader.lapCount) {\n                        const lapDiff = leader.lapCount - driver.lapCount;\n                        gapDisplay = `+${lapDiff} ${lapDiff === 1 ? 'LAP' : 'LAPS'}`;\n                      } else {\n                        const sectorDiff = leader.sectorIdx - driver.sectorIdx;\n                        if (sectorDiff > 0) {\n                          const estimatedGap = (sectorDiff / 10).toFixed(1);\n                          gapDisplay = `+${estimatedGap}s`;\n                        } else {\n                          gapDisplay = '+0.0s';\n                        }\n                      }\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"gap\",\n                        children: gapDisplay\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 36\n                      }, this);\n                    })(), driver.bestLapTime && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"best-lap\",\n                      children: [\"\\u23F1\\uFE0F \", formatLapTime(driver.bestLapTime)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 23\n                }, this), battle && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"battle-inline\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"battle-line\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"battle-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"battle-icon\",\n                      children: \"\\u2694\\uFE0F\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"battle-gap\",\n                      children: [battle.distance.toFixed(1), \"m\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 457,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"battle-speed\",\n                      children: battle.chaser.speed - battle.leader.speed > 0 ? 'â' : 'â'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"battle-line\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 25\n                }, this)]\n              }, driver.mac, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"stop-race-btn\",\n          onClick: onStopRace,\n          children: \"\\u23F9\\uFE0F Termina Gara\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 5\n  }, this);\n}\n_s(RaceLive, \"352nwb5QUe0mJ+kYvZMckvsyO4w=\");\n_c = RaceLive;\nvar _c;\n$RefreshReg$(_c, \"RaceLive\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","WS_URL","process","env","REACT_APP_WS_URL","window","location","hostname","haversine","lat1","lon1","lat2","lon2","R","toRad","d","Math","PI","dLat","dLon","a","sin","cos","atan2","sqrt","findClosestSector","lat","lon","sectors","minDist","Infinity","closestIdx","forEach","s","i","RaceLive","raceConfig","onStopRace","_s","_circuitData$stats","_circuitData$stats$le","_circuitData$sectors","circuitData","totalLaps","assignments","pilots","driversState","setDriversState","leaderboard","setLeaderboard","activeBattles","setActiveBattles","canvasRef","wsRef","animFrameRef","ws","WebSocket","current","onopen","console","log","onmessage","event","data","JSON","parse","raw","parts","split","length","mac","gps","parseFloat","speed","ts","handleGPSUpdate","e","error","onerror","err","onclose","readyState","OPEN","close","sectorIdx","totalSectors","pilotId","pilot","find","p","id","prev","existing","name","surname","team","color","random","lapCount","lastLapTime","bestLapTime","lastSectorIdx","lapStartTime","Date","now","trail","newLapCount","newLapTime","newBestLap","lapDuration","toFixed","newTrail","slice","updatedAt","sorted","Object","values","sort","b","battles","driver1","driver2","dist","push","leader","chaser","distance","position","canvas","ctx","getContext","dpr","devicePixelRatio","resize","rect","parentElement","getBoundingClientRect","width","height","style","scale","addEventListener","lats","map","lons","minLat","min","maxLat","max","minLon","maxLon","padding","project","w","h","x","y","draw","clearRect","fillStyle","fillRect","strokeStyle","lineWidth","lineCap","lineJoin","beginPath","moveTo","lineTo","closePath","stroke","setLineDash","s0","s1","angle","perpAngle","flagWidth","save","translate","rotate","cols","rows","cellW","cellH","r","c","restore","sortedDrivers","driver","idx","pos","t","ti","tp","isLeader","radius","arc","fill","font","textAlign","fillText","requestAnimationFrame","removeEventListener","cancelAnimationFrame","formatLapTime","seconds","mins","floor","secs","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","stats","lengthMeters","battle","Fragment","background","gapDisplay","lapDiff","sectorDiff","estimatedGap","onClick","_c","$RefreshReg$"],"sources":["/home/ubuntu/racesense/racesense-frontend/src/pages/RaceLive.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './Race.css';\n\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n// Utility: calcola distanza Haversine (m)\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 + \n            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n// Trova il settore piÃ¹ vicino\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity;\n  let closestIdx = 0;\n  sectors.forEach((s, i) => {\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) {\n      minDist = d;\n      closestIdx = i;\n    }\n  });\n  return closestIdx;\n}\n\nexport default function RaceLive({ raceConfig, onStopRace }) {\n  const { circuitData, totalLaps, assignments, pilots } = raceConfig;\n  \n  const [driversState, setDriversState] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeBattles, setActiveBattles] = useState([]);\n  \n  const canvasRef = useRef(null);\n  const wsRef = useRef(null);\n  const animFrameRef = useRef(null);\n\n  // ========== WebSocket GPS ==========\n  useEffect(() => {\n    const ws = new WebSocket(WS_URL);\n    wsRef.current = ws;\n\n    ws.onopen = () => console.log('[RaceLive] WebSocket connesso');\n\n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.raw) {\n          const parts = data.raw.split('/');\n          if (parts.length >= 7) {\n            const mac = parts[0];\n            \n            // Ignora device non assegnati\n            if (!assignments[mac]) return;\n\n            const gps = {\n              mac,\n              lat: parseFloat(parts[1]),\n              lon: parseFloat(parts[2]),\n              speed: parseFloat(parts[5]),\n              ts: parts[6]\n            };\n            \n            handleGPSUpdate(gps);\n          }\n        }\n      } catch (e) {\n        console.error('[WS] Parse error:', e);\n      }\n    };\n\n    ws.onerror = (err) => console.error('[WS] Errore:', err);\n    ws.onclose = () => console.log('[WS] Chiuso');\n\n    return () => {\n      if (ws.readyState === WebSocket.OPEN) ws.close();\n    };\n  }, [assignments]);\n\n  // ========== Gestione GPS Update ==========\n  const handleGPSUpdate = useCallback((gps) => {\n    if (!circuitData?.sectors) return;\n\n    const { mac, lat, lon, speed } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n    \n    // Trova pilota assegnato\n    const pilotId = assignments[mac];\n    const pilot = pilots.find(p => p.id === pilotId);\n    if (!pilot) return;\n\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        name: `${pilot.name} ${pilot.surname}`,\n        team: pilot.team,\n        color: pilot.color || `hsl(${Math.random() * 360}, 75%, 55%)`,\n        lat,\n        lon,\n        speed: 0,\n        sectorIdx,\n        lapCount: 0,\n        lastLapTime: null,\n        bestLapTime: null,\n        lastSectorIdx: sectorIdx,\n        lapStartTime: Date.now(),\n        trail: [],\n      };\n\n      // Rilevamento completamento giro\n      let newLapCount = existing.lapCount;\n      let newLapTime = existing.lastLapTime;\n      let newBestLap = existing.bestLapTime;\n\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        const lapDuration = (Date.now() - existing.lapStartTime) / 1000;\n        if (lapDuration > 5) {\n          newLapCount = existing.lapCount + 1;\n          newLapTime = lapDuration;\n          if (!newBestLap || lapDuration < newBestLap) {\n            newBestLap = lapDuration;\n          }\n          console.log(`[LAP] ${existing.name} completato giro ${newLapCount} in ${lapDuration.toFixed(2)}s`);\n        }\n      }\n\n      const newTrail = [...existing.trail, { lat, lon }].slice(-20);\n\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat,\n          lon,\n          speed,\n          sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount: newLapCount,\n          lastLapTime: newLapTime,\n          bestLapTime: newBestLap,\n          lapStartTime: newLapCount > existing.lapCount ? Date.now() : existing.lapStartTime,\n          trail: newTrail,\n          updatedAt: Date.now(),\n        }\n      };\n    });\n  }, [circuitData, assignments, pilots]);\n\n  // ========== Aggiorna classifica e battaglie ==========\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n    setLeaderboard(sorted);\n    \n    // Battaglie\n    const battles = [];\n    for (let i = 0; i < sorted.length - 1; i++) {\n      const driver1 = sorted[i];\n      const driver2 = sorted[i + 1];\n      \n      if (driver1.lapCount === driver2.lapCount) {\n        const dist = haversine(driver1.lat, driver1.lon, driver2.lat, driver2.lon);\n        if (dist < 20) {\n          battles.push({\n            leader: driver1,\n            chaser: driver2,\n            distance: dist,\n            position: i + 1\n          });\n        }\n      }\n    }\n    setActiveBattles(battles);\n  }, [driversState]);\n\n  // ========== Rendering Canvas ==========\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n\n    const resize = () => {\n      const rect = canvas.parentElement.getBoundingClientRect();\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      canvas.style.width = `${rect.width}px`;\n      canvas.style.height = `${rect.height}px`;\n      ctx.scale(dpr, dpr);\n    };\n    resize();\n    window.addEventListener('resize', resize);\n\n    // Calcola bounds pista\n    const lats = circuitData.sectors.map(s => s.lat);\n    const lons = circuitData.sectors.map(s => s.lon);\n    const minLat = Math.min(...lats);\n    const maxLat = Math.max(...lats);\n    const minLon = Math.min(...lons);\n    const maxLon = Math.max(...lons);\n    const padding = 50;\n\n    const project = (lat, lon) => {\n      const rect = canvas.getBoundingClientRect();\n      const w = rect.width - padding * 2;\n      const h = rect.height - padding * 2;\n      const x = ((lon - minLon) / (maxLon - minLon)) * w + padding;\n      const y = h - ((lat - minLat) / (maxLat - minLat)) * h + padding;\n      return { x, y };\n    };\n\n    const draw = () => {\n      const rect = canvas.getBoundingClientRect();\n      ctx.clearRect(0, 0, rect.width, rect.height);\n\n      // Sfondo\n      ctx.fillStyle = '#0a0e1a';\n      ctx.fillRect(0, 0, rect.width, rect.height);\n\n      // Tracciato\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n      ctx.lineWidth = 30;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n\n      // Linea centrale\n      ctx.strokeStyle = 'rgba(255, 215, 0, 0.5)';\n      ctx.lineWidth = 2;\n      ctx.setLineDash([10, 10]);\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n      ctx.setLineDash([]);\n\n      // Finish line\n      if (circuitData.sectors.length > 1) {\n        const s0 = project(circuitData.sectors[0].lat, circuitData.sectors[0].lon);\n        const s1 = project(circuitData.sectors[1].lat, circuitData.sectors[1].lon);\n        const angle = Math.atan2(s1.y - s0.y, s1.x - s0.x);\n        const perpAngle = angle + Math.PI / 2;\n        const flagWidth = 30;\n        \n        ctx.save();\n        ctx.translate(s0.x, s0.y);\n        ctx.rotate(perpAngle);\n        \n        // Bandiera a scacchi\n        const cols = 6;\n        const rows = 4;\n        const cellW = flagWidth / cols;\n        const cellH = flagWidth / rows;\n        \n        for (let r = 0; r < rows; r++) {\n          for (let c = 0; c < cols; c++) {\n            ctx.fillStyle = (r + c) % 2 === 0 ? '#fff' : '#000';\n            ctx.fillRect(c * cellW - flagWidth / 2, r * cellH - flagWidth / 2, cellW, cellH);\n          }\n        }\n        ctx.restore();\n      }\n\n      // Piloti\n      const sortedDrivers = Object.values(driversState).sort((a, b) => {\n        if (a.lapCount !== b.lapCount) return a.lapCount - b.lapCount;\n        return a.sectorIdx - b.sectorIdx;\n      });\n\n      sortedDrivers.forEach((driver, idx) => {\n        const pos = project(driver.lat, driver.lon);\n\n        // Trail\n        if (driver.trail && driver.trail.length > 1) {\n          ctx.strokeStyle = driver.color + '40';\n          ctx.lineWidth = 4;\n          ctx.beginPath();\n          driver.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti === 0 ? ctx.moveTo(tp.x, tp.y) : ctx.lineTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n        }\n\n        // Driver dot\n        const isLeader = idx === sortedDrivers.length - 1;\n        const radius = isLeader ? 7 : 6;\n        \n        ctx.fillStyle = driver.color;\n        ctx.beginPath();\n        ctx.arc(pos.x, pos.y, radius, 0, Math.PI * 2);\n        ctx.fill();\n        \n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // Nome\n        ctx.fillStyle = '#fff';\n        ctx.font = 'bold 12px Roboto Mono';\n        ctx.textAlign = 'center';\n        ctx.fillText(driver.name.split(' ')[0], pos.x, pos.y - 15);\n      });\n\n      animFrameRef.current = requestAnimationFrame(draw);\n    };\n\n    draw();\n\n    return () => {\n      window.removeEventListener('resize', resize);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData, driversState]);\n\n  // Formatta tempo\n  const formatLapTime = (seconds) => {\n    if (!seconds) return '--:--.---';\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(3);\n    return `${mins}:${secs.padStart(6, '0')}`;\n  };\n\n  return (\n    <div className=\"race-page\">\n      <header className=\"race-header\">\n        <div className=\"race-header-left\">\n          <div className=\"race-logo\">ð RACESENSE</div>\n          <div className=\"race-title\">LIVE RACE</div>\n        </div>\n        <div className=\"race-header-right\">\n          <div className=\"circuit-badge\">\n            <span className=\"circuit-icon\">ð£ï¸</span>\n            <span className=\"circuit-name\">{circuitData.name}</span>\n          </div>\n          <div className=\"laps-badge\">\n            <span className=\"laps-icon\">ð</span>\n            <span className=\"laps-text\">{totalLaps} GIRI</span>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"race-live\">\n        <div className=\"race-main\">\n          <div className=\"track-container\">\n            <canvas ref={canvasRef} className=\"track-canvas\" />\n            \n            <div className=\"track-overlay\">\n              <div className=\"live-indicator\">\n                <span className=\"live-dot\"></span>\n                LIVE\n              </div>\n              \n              {circuitData && (\n                <div className=\"track-info\">\n                  <div className=\"track-stat\">\n                    <span className=\"stat-icon\">ð</span>\n                    <span className=\"stat-text\">{circuitData.stats?.lengthMeters?.toFixed(0)}m</span>\n                  </div>\n                  <div className=\"track-stat\">\n                    <span className=\"stat-icon\">ð</span>\n                    <span className=\"stat-text\">{circuitData.sectors?.length || 0} sectors</span>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <aside className=\"leaderboard\">\n            <div className=\"leaderboard-header\">\n              <h3>ð CLASSIFICA</h3>\n              <div className=\"leaderboard-subtitle\">\n                {leaderboard.length} Piloti\n              </div>\n            </div>\n            \n            <div className=\"leaderboard-list\">\n              {leaderboard.length === 0 ? (\n                <div className=\"no-drivers\">\n                  <p>â³ In attesa di dati GPS...</p>\n                </div>\n              ) : (\n                leaderboard.map((driver, pos) => {\n                  const battle = activeBattles.find(b => b.leader.mac === driver.mac);\n                  \n                  return (\n                    <React.Fragment key={driver.mac}>\n                      <div className={`leaderboard-item ${pos === 0 ? 'leader' : ''}`}>\n                        <div className=\"position\">{pos + 1}</div>\n                        \n                        <div className=\"driver-color\" style={{ background: driver.color }}></div>\n                        \n                        <div className=\"driver-info\">\n                          <div className=\"driver-name\">\n                            {driver.name}\n                            {pos === 0 && <span className=\"leader-badge\">ð</span>}\n                          </div>\n                          <div className=\"driver-stats\">\n                            <span className=\"lap-count\">Giro {driver.lapCount}/{totalLaps}</span>\n                            <span className=\"sector\">S{driver.sectorIdx}</span>\n                          </div>\n                        </div>\n                        \n                        <div className=\"driver-times\">\n                          {pos === 0 ? (\n                            <div className=\"gap leader-gap\">LEADER</div>\n                          ) : (() => {\n                            const leader = leaderboard[0];\n                            let gapDisplay = '';\n                            \n                            if (driver.lapCount < leader.lapCount) {\n                              const lapDiff = leader.lapCount - driver.lapCount;\n                              gapDisplay = `+${lapDiff} ${lapDiff === 1 ? 'LAP' : 'LAPS'}`;\n                            } else {\n                              const sectorDiff = leader.sectorIdx - driver.sectorIdx;\n                              if (sectorDiff > 0) {\n                                const estimatedGap = (sectorDiff / 10).toFixed(1);\n                                gapDisplay = `+${estimatedGap}s`;\n                              } else {\n                                gapDisplay = '+0.0s';\n                              }\n                            }\n                            \n                            return <div className=\"gap\">{gapDisplay}</div>;\n                          })()}\n                          \n                          {driver.bestLapTime && (\n                            <div className=\"best-lap\">\n                              â±ï¸ {formatLapTime(driver.bestLapTime)}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      \n                      {battle && (\n                        <div className=\"battle-inline\">\n                          <div className=\"battle-line\"></div>\n                          <div className=\"battle-info\">\n                            <span className=\"battle-icon\">âï¸</span>\n                            <span className=\"battle-gap\">{battle.distance.toFixed(1)}m</span>\n                            <span className=\"battle-speed\">\n                              {(battle.chaser.speed - battle.leader.speed) > 0 ? 'â' : 'â'}\n                            </span>\n                          </div>\n                          <div className=\"battle-line\"></div>\n                        </div>\n                      )}\n                    </React.Fragment>\n                  );\n                })\n              )}\n            </div>\n          </aside>\n        </div>\n\n        <div className=\"race-controls\">\n          <button className=\"stop-race-btn\" onClick={onStopRace}>\n            â¹ï¸ Termina Gara\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}