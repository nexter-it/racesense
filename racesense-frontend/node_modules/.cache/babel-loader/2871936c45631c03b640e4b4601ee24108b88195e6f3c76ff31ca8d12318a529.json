{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/racesense/racesense-frontend/src/pages/RaceLive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n/* ---------------- Utils ---------------- */\n\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity,\n    closestIdx = 0;\n  for (let i = 0; i < sectors.length; i++) {\n    const s = sectors[i];\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) {\n      minDist = d;\n      closestIdx = i;\n    }\n  }\n  return closestIdx;\n}\nfunction surnameTag(pilot) {\n  const last = ((pilot === null || pilot === void 0 ? void 0 : pilot.surname) || '').trim().toUpperCase();\n  return last.slice(0, 4) || 'PIL';\n}\n\n/* ---------------- Component ---------------- */\n\nexport default function RaceLive({\n  raceConfig,\n  onStopRace\n}) {\n  _s();\n  var _circuitData$stats, _circuitData$params2;\n  const {\n    circuitData,\n    totalLaps,\n    assignments,\n    pilots\n  } = raceConfig;\n  const [driversState, setDriversState] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeBattles, setActiveBattles] = useState([]);\n  const [overtakingPairs, setOvertakingPairs] = useState([]);\n\n  // refs per canvas/dati\n  const canvasRef = useRef(null);\n  const animFrameRef = useRef(null);\n  const driversRef = useRef({}); // *** usa questo nel draw loop ***\n  const zoomRef = useRef(1);\n  const panRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const isDraggingRef = useRef(false);\n  const lastMouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const lastPositionsRef = useRef({});\n\n  // mantieni ref aggiornato senza triggerare re-render del canvas effect\n  useEffect(() => {\n    driversRef.current = driversState;\n  }, [driversState]);\n\n  /* ========== WebSocket GPS ========== */\n  useEffect(() => {\n    const ws = new WebSocket(WS_URL);\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.mac && data.lat && data.lon) {\n          const mac = String(data.mac);\n          if (!assignments[mac]) return;\n          handleGPSUpdate({\n            mac,\n            lat: Number(data.lat),\n            lon: Number(data.lon),\n            speed: Number(data.speedKmh || 0),\n            ts: data.ts || Date.now()\n          });\n        }\n      } catch {}\n    };\n    ws.onerror = e => console.error('[RaceLive] WS error', e);\n    return () => {\n      try {\n        ws.close();\n      } catch {}\n    };\n  }, [assignments]); // eslint-disable-line\n\n  /* ========== Colore Team (fallback) ========== */\n  const getTeamColor = useCallback((pilot, allPilots) => {\n    if (pilot.color) return pilot.color;\n    const teamPilots = allPilots.filter(p => p.team === pilot.team);\n    const pilotIndex = teamPilots.findIndex(p => p.id === pilot.id);\n    const teamHash = (pilot.team || 'TEAM').split('').reduce((acc, ch) => acc + ch.charCodeAt(0), 0);\n    const hue = teamHash * 137.508 % 360;\n    if (teamPilots.length > 1) {\n      const l = 50 + pilotIndex * 8;\n      const s = 75 - pilotIndex * 5;\n      return `hsl(${hue}, ${s}%, ${l}%)`;\n    }\n    return `hsl(${hue}, 75%, 55%)`;\n  }, []);\n\n  /* ========== GPS → Stato pilota ========== */\n  const handleGPSUpdate = useCallback(gps => {\n    if (!(circuitData !== null && circuitData !== void 0 && circuitData.sectors)) return;\n    const {\n      mac,\n      lat,\n      lon,\n      speed\n    } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n    const pilotId = assignments[mac];\n    const pilot = pilots.find(p => String(p.id) === String(pilotId));\n    if (!pilot) return;\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        pilotId,\n        pilot,\n        tag: surnameTag(pilot),\n        fullName: `${pilot.name || ''} ${pilot.surname || ''}`.trim(),\n        team: pilot.team,\n        color: getTeamColor(pilot, pilots),\n        photoTeamUrl: pilot.photoTeamUrl,\n        lat,\n        lon,\n        speed: 0,\n        sectorIdx,\n        lastSectorIdx: sectorIdx,\n        lapCount: 0,\n        lapStartTime: Date.now(),\n        lastLapTime: null,\n        bestLapTime: null,\n        pit: false,\n        out: false,\n        trail: []\n      };\n\n      // giro completato\n      let lapCount = existing.lapCount;\n      let lastLapTime = existing.lastLapTime;\n      let bestLapTime = existing.bestLapTime;\n      let lapStartTime = existing.lapStartTime;\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        const lapSec = (Date.now() - existing.lapStartTime) / 1000;\n        if (lapSec > 5) {\n          lapCount = existing.lapCount + 1;\n          lastLapTime = lapSec;\n          bestLapTime = !bestLapTime || lapSec < bestLapTime ? lapSec : bestLapTime;\n          lapStartTime = Date.now();\n        }\n      }\n      const trailLength = speed > 30 ? 40 : speed > 15 ? 25 : 15;\n      const trail = [...existing.trail, {\n        lat,\n        lon\n      }].slice(-trailLength);\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat,\n          lon,\n          speed,\n          sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount,\n          lastLapTime,\n          bestLapTime,\n          lapStartTime,\n          trail,\n          updatedAt: Date.now()\n        }\n      };\n    });\n  }, [circuitData, assignments, pilots, getTeamColor]);\n\n  /* ========== Classifica / Sorpassi / Duelli ========== */\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n    const newOvertakes = [];\n    const currentPos = {};\n    sorted.forEach((d, i) => {\n      currentPos[d.mac] = i;\n      const lastPos = lastPositionsRef.current[d.mac];\n      if (lastPos !== undefined && i < lastPos) {\n        const overtaken = sorted[i + 1];\n        if (overtaken && lastPositionsRef.current[overtaken.mac] === i) {\n          newOvertakes.push({\n            overtaker: d.mac,\n            overtaken: overtaken.mac,\n            timestamp: Date.now()\n          });\n        }\n      }\n    });\n    if (newOvertakes.length) {\n      setOvertakingPairs(prev => {\n        const now = Date.now();\n        const keep = prev.filter(p => now - p.timestamp < 1600);\n        return [...keep, ...newOvertakes];\n      });\n      setTimeout(() => {\n        lastPositionsRef.current = currentPos;\n      }, 1600);\n    } else {\n      const now = Date.now();\n      setOvertakingPairs(prev => prev.filter(p => now - p.timestamp < 1600));\n      if (overtakingPairs.length === 0) lastPositionsRef.current = currentPos;\n    }\n    const battles = [];\n    for (let i = 0; i < sorted.length - 1; i++) {\n      const a = sorted[i],\n        b = sorted[i + 1];\n      if (a.lapCount !== b.lapCount) continue;\n      const dist = haversine(a.lat, a.lon, b.lat, b.lon);\n      const was = activeBattles.some(x => x.leader.mac === a.mac && x.chaser.mac === b.mac || x.leader.mac === b.mac && x.chaser.mac === a.mac);\n      if (dist < 30 || was && dist < 35) {\n        battles.push({\n          leader: a,\n          chaser: b,\n          distance: dist,\n          position: i + 1\n        });\n      }\n    }\n    setActiveBattles(battles);\n    setLeaderboard(sorted);\n  }, [driversState]); // eslint-disable-line\n\n  const globalBestLap = useMemo(() => {\n    let best = null;\n    Object.values(driversState).forEach(d => {\n      if (d.bestLapTime && (best === null || d.bestLapTime < best)) best = d.bestLapTime;\n    });\n    return best;\n  }, [driversState]);\n  const topBattle = useMemo(() => {\n    if (!activeBattles.length) return null;\n    return activeBattles.slice().sort((a, b) => a.distance - b.distance)[0];\n  }, [activeBattles]);\n\n  /* ========== Canvas: inizializza UNA SOLA VOLTA per circuito ========== */\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const ensureSize = () => {\n      // misura il CONTENITORE, non il canvas (evita feedback loop)\n      const container = canvas.parentElement;\n      const w = container.clientWidth || 600;\n      const h = container.clientHeight || 520; // track-card ha height fissata via CSS\n      if (canvas.width !== Math.floor(w * dpr) || canvas.height !== Math.floor(h * dpr)) {\n        canvas.width = Math.floor(w * dpr);\n        canvas.height = Math.floor(h * dpr);\n        // IMPORTANTISSIMO: non tocco style.width/height, sono gestiti dal CSS (100%)\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n      }\n    };\n    const onResize = () => ensureSize();\n    ensureSize();\n    window.addEventListener('resize', onResize);\n    const wheel = e => {\n      e.preventDefault();\n      zoomRef.current = Math.max(0.5, Math.min(5, zoomRef.current * (e.deltaY > 0 ? 0.9 : 1.1)));\n    };\n    const mousedown = e => {\n      isDraggingRef.current = true;\n      lastMouseRef.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      canvas.style.cursor = 'grabbing';\n    };\n    const mousemove = e => {\n      if (!isDraggingRef.current) return;\n      const dx = e.clientX - lastMouseRef.current.x;\n      const dy = e.clientY - lastMouseRef.current.y;\n      panRef.current.x += dx;\n      panRef.current.y += dy;\n      lastMouseRef.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n    };\n    const mouseup = () => {\n      isDraggingRef.current = false;\n      canvas.style.cursor = 'grab';\n    };\n    canvas.addEventListener('wheel', wheel, {\n      passive: false\n    });\n    canvas.addEventListener('mousedown', mousedown);\n    canvas.addEventListener('mousemove', mousemove);\n    canvas.addEventListener('mouseup', mouseup);\n    canvas.addEventListener('mouseleave', mouseup);\n    canvas.style.cursor = 'grab';\n\n    // precompute projection params\n    const lats = circuitData.sectors.map(s => s.lat);\n    const lons = circuitData.sectors.map(s => s.lon);\n    const minLat = Math.min(...lats),\n      maxLat = Math.max(...lats);\n    const minLon = Math.min(...lons),\n      maxLon = Math.max(...lons);\n    const centerLat = (minLat + maxLat) / 2;\n    const centerLon = (minLon + maxLon) / 2;\n    const R = 6371000;\n    const centerLatRad = centerLat * Math.PI / 180;\n    const dxList = lons.map(l => (l - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad));\n    const dyList = lats.map(l => (l - centerLat) * Math.PI / 180 * R);\n    const maxDx = Math.max(...dxList.map(Math.abs));\n    const maxDy = Math.max(...dyList.map(Math.abs));\n    const padding = 40;\n    const project = (lat, lon) => {\n      // usa dimensioni logiche del canvas (CSS size = container, ma qui usiamo backing store)\n      const w = canvas.width / dpr;\n      const h = canvas.height / dpr;\n      const maxRange = Math.max(maxDx, maxDy) * 1.1;\n      const scale = Math.min(w - padding * 2, h - padding * 2) / (maxRange * 2) * zoomRef.current;\n      const dx = (lon - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad);\n      const dy = (lat - centerLat) * Math.PI / 180 * R;\n      const x = w / 2 + dx * scale + panRef.current.x;\n      const y = h / 2 - dy * scale + panRef.current.y;\n      return {\n        x,\n        y,\n        scale\n      };\n    };\n    const draw = () => {\n      var _circuitData$params$w, _circuitData$params, _pts$;\n      ensureSize(); // ridimensiona SOLO se il container cambia\n\n      const w = canvas.width / dpr;\n      const h = canvas.height / dpr;\n      ctx.clearRect(0, 0, w, h);\n      ctx.fillStyle = '#0a0a0a';\n      ctx.fillRect(0, 0, w, h);\n      const widthMeters = (_circuitData$params$w = (_circuitData$params = circuitData.params) === null || _circuitData$params === void 0 ? void 0 : _circuitData$params.widthMeters) !== null && _circuitData$params$w !== void 0 ? _circuitData$params$w : 6;\n      const pts = circuitData.sectors.map(s => project(s.lat, s.lon));\n      const scale = ((_pts$ = pts[0]) === null || _pts$ === void 0 ? void 0 : _pts$.scale) || 1;\n      const trackPx = Math.max(6, widthMeters * scale);\n\n      // bordo soft\n      ctx.strokeStyle = 'rgba(255,255,255,0.10)';\n      ctx.lineWidth = trackPx + 4;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      pts.forEach((p, i) => i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y));\n      ctx.closePath();\n      ctx.stroke();\n\n      // asfalto\n      ctx.strokeStyle = 'rgba(80, 84, 90, 0.95)';\n      ctx.lineWidth = trackPx;\n      ctx.beginPath();\n      pts.forEach((p, i) => i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y));\n      ctx.closePath();\n      ctx.stroke();\n\n      // start\n      if (pts.length > 1) {\n        const s0 = pts[0],\n          s1 = pts[1];\n        const ang = Math.atan2(s1.y - s0.y, s1.x - s0.x);\n        ctx.save();\n        ctx.translate(s0.x, s0.y);\n        ctx.rotate(ang);\n        ctx.strokeStyle = '#ffffff';\n        ctx.lineWidth = Math.max(2, trackPx * 0.12);\n        ctx.beginPath();\n        ctx.moveTo(0, -trackPx * 0.5);\n        ctx.lineTo(0, trackPx * 0.5);\n        ctx.stroke();\n        ctx.restore();\n      }\n\n      // piloti con dati dal ref (nessun re-init dell'effetto)\n      const sorted = Object.values(driversRef.current).sort((a, b) => {\n        if (a.lapCount !== b.lapCount) return a.lapCount - b.lapCount;\n        return a.sectorIdx - b.sectorIdx;\n      });\n      sorted.forEach((d, i) => {\n        var _d$trail;\n        const p = project(d.lat, d.lon);\n        if (((_d$trail = d.trail) === null || _d$trail === void 0 ? void 0 : _d$trail.length) > 1) {\n          ctx.strokeStyle = d.color;\n          ctx.globalAlpha = 0.6;\n          ctx.lineWidth = Math.max(2, trackPx * 0.12);\n          ctx.beginPath();\n          d.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti ? ctx.lineTo(tp.x, tp.y) : ctx.moveTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n          ctx.globalAlpha = 1;\n        }\n        const isLeader = i === sorted.length - 1;\n        const r = Math.max(5, trackPx * 0.18) + (isLeader ? 1 : 0);\n        ctx.shadowColor = 'rgba(0,0,0,0.5)';\n        ctx.shadowBlur = 4;\n        ctx.fillStyle = d.color;\n        ctx.beginPath();\n        ctx.arc(p.x, p.y, r, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.shadowBlur = 0;\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n        ctx.fillStyle = '#fff';\n        ctx.font = 'bold 10px Roboto, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.fillText(d.tag, p.x, p.y - (r + 8));\n      });\n      animFrameRef.current = requestAnimationFrame(draw);\n    };\n    draw();\n    return () => {\n      window.removeEventListener('resize', onResize);\n      canvas.removeEventListener('wheel', wheel);\n      canvas.removeEventListener('mousedown', mousedown);\n      canvas.removeEventListener('mousemove', mousemove);\n      canvas.removeEventListener('mouseup', mouseup);\n      canvas.removeEventListener('mouseleave', mouseup);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData]); // *** SOLO al cambio circuito ***\n\n  /* ---------- UI helpers ---------- */\n\n  const gapToLeader = (driver, leader) => {\n    if (!leader || !driver) return '';\n    if (driver.lapCount < leader.lapCount) return `+${leader.lapCount - driver.lapCount}L`;\n    const sectorDiff = leader.sectorIdx - driver.sectorIdx;\n    const est = Math.max(0, sectorDiff / 10);\n    return `+${est.toFixed(2)}`;\n  };\n  const formatLap = s => {\n    if (!s) return '—';\n    const m = Math.floor(s / 60);\n    const sec = (s % 60).toFixed(3);\n    return `${m}:${sec.padStart(6, '0')}`;\n  };\n\n  /* ---------- Render ---------- */\n\n  // const topBattle = useMemo(() => {\n  //   if (!activeBattles.length) return null;\n  //   return activeBattles.slice().sort((a, b) => a.distance - b.distance)[0];\n  // }, [activeBattles]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main small-top\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rs-live-topbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rs-live-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: \"LIVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: [totalLaps, \" giri\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rs-live-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: (circuitData === null || circuitData === void 0 ? void 0 : circuitData.name) || 'Circuito'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), (circuitData === null || circuitData === void 0 ? void 0 : (_circuitData$stats = circuitData.stats) === null || _circuitData$stats === void 0 ? void 0 : _circuitData$stats.lengthMeters) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: [circuitData.stats.lengthMeters.toFixed(0), \" m\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 48\n        }, this), (circuitData === null || circuitData === void 0 ? void 0 : (_circuitData$params2 = circuitData.params) === null || _circuitData$params2 === void 0 ? void 0 : _circuitData$params2.widthMeters) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: [circuitData.params.widthMeters, \" m larghezza\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rs-live-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-card\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"track-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lb-title\",\n            children: \"CLASSIFICA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lb-sub\",\n            children: [leaderboard.length, \" piloti\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), topBattle && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-battle-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"battle-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"battle-line-left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"battle-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"battle-label\",\n                children: \"DUELLO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"battle-gap\",\n                children: [topBattle.distance.toFixed(1), \" m\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"battle-line-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-list\",\n          children: leaderboard.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-drivers\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Nessun dato GPS ancora disponibile\\u2026\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"muted\",\n              children: \"Appena arrivano i pacchetti la classifica si popola\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this) : leaderboard.map((d, idx) => {\n            const leader = leaderboard[0];\n            const isLeader = idx === 0;\n            const fastest = d.bestLapTime && globalBestLap && d.bestLapTime === globalBestLap;\n            const isOvertaking = overtakingPairs.find(p => p.overtaker === d.mac);\n            const isBeingOvertaken = overtakingPairs.find(p => p.overtaken === d.mac);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `lb-row ${isLeader ? 'lb-leader' : ''} ${isOvertaking ? 'overtaking' : ''} ${isBeingOvertaken ? 'being-overtaken' : ''}`,\n              title: d.fullName,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-pos\",\n                children: idx + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-team\",\n                children: d.photoTeamUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${API_BASE}${d.photoTeamUrl}`,\n                  alt: d.team,\n                  className: \"lb-team-logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"lb-team-color\",\n                  style: {\n                    background: d.color\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-name\",\n                children: d.tag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-gap\",\n                children: isLeader ? 'LEADER' : gapToLeader(d, leader)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-icons\",\n                children: [fastest && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lb-icon purple\",\n                  title: `Best lap ${formatLap(d.bestLapTime)}`,\n                  children: \"\\u23F1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 35\n                }, this), d.pit && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lb-icon\",\n                  title: \"Pit\",\n                  children: \"\\uD83C\\uDD7F\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 33\n                }, this), d.out && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lb-icon\",\n                  title: \"Out\",\n                  children: \"\\u26D4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-lap\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"muted\",\n                  children: \"Lap\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 45\n                }, this), \"\\xA0\", d.lapCount, \"/\", totalLaps]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this)]\n            }, d.mac, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"race-controls\",\n      style: {\n        justifyContent: 'center',\n        marginTop: 12\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-danger\",\n        onClick: onStopRace,\n        children: \"Termina gara\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 5\n  }, this);\n}\n_s(RaceLive, \"kYI+VO+PVeXFwAPkTthZELleMSk=\");\n_c = RaceLive;\nvar _c;\n$RefreshReg$(_c, \"RaceLive\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","window","location","hostname","WS_URL","REACT_APP_WS_URL","haversine","lat1","lon1","lat2","lon2","R","toRad","d","Math","PI","dLat","dLon","a","sin","cos","atan2","sqrt","findClosestSector","lat","lon","sectors","minDist","Infinity","closestIdx","i","length","s","surnameTag","pilot","last","surname","trim","toUpperCase","slice","RaceLive","raceConfig","onStopRace","_s","_circuitData$stats","_circuitData$params2","circuitData","totalLaps","assignments","pilots","driversState","setDriversState","leaderboard","setLeaderboard","activeBattles","setActiveBattles","overtakingPairs","setOvertakingPairs","canvasRef","animFrameRef","driversRef","zoomRef","panRef","x","y","isDraggingRef","lastMouseRef","lastPositionsRef","current","ws","WebSocket","onmessage","event","data","JSON","parse","mac","String","handleGPSUpdate","Number","speed","speedKmh","ts","Date","now","onerror","e","console","error","close","getTeamColor","allPilots","color","teamPilots","filter","p","team","pilotIndex","findIndex","id","teamHash","split","reduce","acc","ch","charCodeAt","hue","l","gps","sectorIdx","totalSectors","pilotId","find","prev","existing","tag","fullName","name","photoTeamUrl","lastSectorIdx","lapCount","lapStartTime","lastLapTime","bestLapTime","pit","out","trail","lapSec","trailLength","updatedAt","sorted","Object","values","sort","b","newOvertakes","currentPos","forEach","lastPos","undefined","overtaken","push","overtaker","timestamp","keep","setTimeout","battles","dist","was","some","leader","chaser","distance","position","globalBestLap","best","topBattle","canvas","ctx","getContext","dpr","devicePixelRatio","ensureSize","container","parentElement","w","clientWidth","h","clientHeight","width","floor","height","setTransform","onResize","addEventListener","wheel","preventDefault","max","min","deltaY","mousedown","clientX","clientY","style","cursor","mousemove","dx","dy","mouseup","passive","lats","map","lons","minLat","maxLat","minLon","maxLon","centerLat","centerLon","centerLatRad","dxList","dyList","maxDx","abs","maxDy","padding","project","maxRange","scale","draw","_circuitData$params$w","_circuitData$params","_pts$","clearRect","fillStyle","fillRect","widthMeters","params","pts","trackPx","strokeStyle","lineWidth","lineCap","lineJoin","beginPath","lineTo","moveTo","closePath","stroke","s0","s1","ang","save","translate","rotate","restore","_d$trail","globalAlpha","t","ti","tp","isLeader","r","shadowColor","shadowBlur","arc","fill","font","textAlign","fillText","requestAnimationFrame","removeEventListener","cancelAnimationFrame","gapToLeader","driver","sectorDiff","est","toFixed","formatLap","m","sec","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","stats","lengthMeters","ref","idx","fastest","isOvertaking","isBeingOvertaken","title","src","alt","background","justifyContent","marginTop","onClick","_c","$RefreshReg$"],"sources":["/home/ubuntu/racesense/racesense-frontend/src/pages/RaceLive.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport '../App.css';\n\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n/* ---------------- Utils ---------------- */\n\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 +\n            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity, closestIdx = 0;\n  for (let i = 0; i < sectors.length; i++) {\n    const s = sectors[i];\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) { minDist = d; closestIdx = i; }\n  }\n  return closestIdx;\n}\nfunction surnameTag(pilot) {\n  const last = (pilot?.surname || '').trim().toUpperCase();\n  return last.slice(0, 4) || 'PIL';\n}\n\n/* ---------------- Component ---------------- */\n\nexport default function RaceLive({ raceConfig, onStopRace }) {\n  const { circuitData, totalLaps, assignments, pilots } = raceConfig;\n\n  const [driversState, setDriversState] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeBattles, setActiveBattles] = useState([]);\n  const [overtakingPairs, setOvertakingPairs] = useState([]);\n\n  // refs per canvas/dati\n  const canvasRef = useRef(null);\n  const animFrameRef = useRef(null);\n  const driversRef = useRef({});      // *** usa questo nel draw loop ***\n  const zoomRef = useRef(1);\n  const panRef = useRef({ x: 0, y: 0 });\n  const isDraggingRef = useRef(false);\n  const lastMouseRef = useRef({ x: 0, y: 0 });\n  const lastPositionsRef = useRef({});\n\n  // mantieni ref aggiornato senza triggerare re-render del canvas effect\n  useEffect(() => { driversRef.current = driversState; }, [driversState]);\n\n  /* ========== WebSocket GPS ========== */\n  useEffect(() => {\n    const ws = new WebSocket(WS_URL);\n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.mac && data.lat && data.lon) {\n          const mac = String(data.mac);\n          if (!assignments[mac]) return;\n          handleGPSUpdate({\n            mac,\n            lat: Number(data.lat),\n            lon: Number(data.lon),\n            speed: Number(data.speedKmh || 0),\n            ts: data.ts || Date.now(),\n          });\n        }\n      } catch {}\n    };\n    ws.onerror = (e) => console.error('[RaceLive] WS error', e);\n    return () => { try { ws.close(); } catch {} };\n  }, [assignments]); // eslint-disable-line\n\n  /* ========== Colore Team (fallback) ========== */\n  const getTeamColor = useCallback((pilot, allPilots) => {\n    if (pilot.color) return pilot.color;\n    const teamPilots = allPilots.filter(p => p.team === pilot.team);\n    const pilotIndex = teamPilots.findIndex(p => p.id === pilot.id);\n    const teamHash = (pilot.team || 'TEAM').split('').reduce((acc, ch) => acc + ch.charCodeAt(0), 0);\n    const hue = (teamHash * 137.508) % 360;\n    if (teamPilots.length > 1) {\n      const l = 50 + (pilotIndex * 8);\n      const s = 75 - (pilotIndex * 5);\n      return `hsl(${hue}, ${s}%, ${l}%)`;\n    }\n    return `hsl(${hue}, 75%, 55%)`;\n  }, []);\n\n  /* ========== GPS → Stato pilota ========== */\n  const handleGPSUpdate = useCallback((gps) => {\n    if (!circuitData?.sectors) return;\n\n    const { mac, lat, lon, speed } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n\n    const pilotId = assignments[mac];\n    const pilot = pilots.find(p => String(p.id) === String(pilotId));\n    if (!pilot) return;\n\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        pilotId,\n        pilot,\n        tag: surnameTag(pilot),\n        fullName: `${pilot.name || ''} ${pilot.surname || ''}`.trim(),\n        team: pilot.team,\n        color: getTeamColor(pilot, pilots),\n        photoTeamUrl: pilot.photoTeamUrl,\n        lat, lon, speed: 0,\n        sectorIdx,\n        lastSectorIdx: sectorIdx,\n        lapCount: 0,\n        lapStartTime: Date.now(),\n        lastLapTime: null,\n        bestLapTime: null,\n        pit: false,\n        out: false,\n        trail: []\n      };\n\n      // giro completato\n      let lapCount = existing.lapCount;\n      let lastLapTime = existing.lastLapTime;\n      let bestLapTime = existing.bestLapTime;\n      let lapStartTime = existing.lapStartTime;\n\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        const lapSec = (Date.now() - existing.lapStartTime) / 1000;\n        if (lapSec > 5) {\n          lapCount = existing.lapCount + 1;\n          lastLapTime = lapSec;\n          bestLapTime = !bestLapTime || lapSec < bestLapTime ? lapSec : bestLapTime;\n          lapStartTime = Date.now();\n        }\n      }\n\n      const trailLength = speed > 30 ? 40 : speed > 15 ? 25 : 15;\n      const trail = [...existing.trail, { lat, lon }].slice(-trailLength);\n\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat, lon, speed, sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount, lastLapTime, bestLapTime, lapStartTime,\n          trail,\n          updatedAt: Date.now()\n        }\n      };\n    });\n  }, [circuitData, assignments, pilots, getTeamColor]);\n\n  /* ========== Classifica / Sorpassi / Duelli ========== */\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n\n    const newOvertakes = [];\n    const currentPos = {};\n    sorted.forEach((d, i) => {\n      currentPos[d.mac] = i;\n      const lastPos = lastPositionsRef.current[d.mac];\n      if (lastPos !== undefined && i < lastPos) {\n        const overtaken = sorted[i + 1];\n        if (overtaken && lastPositionsRef.current[overtaken.mac] === i) {\n          newOvertakes.push({ overtaker: d.mac, overtaken: overtaken.mac, timestamp: Date.now() });\n        }\n      }\n    });\n    if (newOvertakes.length) {\n      setOvertakingPairs(prev => {\n        const now = Date.now();\n        const keep = prev.filter(p => now - p.timestamp < 1600);\n        return [...keep, ...newOvertakes];\n      });\n      setTimeout(() => { lastPositionsRef.current = currentPos; }, 1600);\n    } else {\n      const now = Date.now();\n      setOvertakingPairs(prev => prev.filter(p => now - p.timestamp < 1600));\n      if (overtakingPairs.length === 0) lastPositionsRef.current = currentPos;\n    }\n\n    const battles = [];\n    for (let i = 0; i < sorted.length - 1; i++) {\n      const a = sorted[i], b = sorted[i + 1];\n      if (a.lapCount !== b.lapCount) continue;\n      const dist = haversine(a.lat, a.lon, b.lat, b.lon);\n      const was = activeBattles.some(x =>\n        (x.leader.mac === a.mac && x.chaser.mac === b.mac) ||\n        (x.leader.mac === b.mac && x.chaser.mac === a.mac)\n      );\n      if (dist < 30 || (was && dist < 35)) {\n        battles.push({ leader: a, chaser: b, distance: dist, position: i + 1 });\n      }\n    }\n    setActiveBattles(battles);\n    setLeaderboard(sorted);\n  }, [driversState]); // eslint-disable-line\n\n  const globalBestLap = useMemo(() => {\n    let best = null;\n    Object.values(driversState).forEach(d => {\n      if (d.bestLapTime && (best === null || d.bestLapTime < best)) best = d.bestLapTime;\n    });\n    return best;\n  }, [driversState]);\n\n  const topBattle = useMemo(() => {\n    if (!activeBattles.length) return null;\n    return activeBattles.slice().sort((a, b) => a.distance - b.distance)[0];\n  }, [activeBattles]);\n\n  /* ========== Canvas: inizializza UNA SOLA VOLTA per circuito ========== */\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n\n    const ensureSize = () => {\n      // misura il CONTENITORE, non il canvas (evita feedback loop)\n      const container = canvas.parentElement;\n      const w = container.clientWidth || 600;\n      const h = container.clientHeight || 520; // track-card ha height fissata via CSS\n      if (canvas.width !== Math.floor(w * dpr) || canvas.height !== Math.floor(h * dpr)) {\n        canvas.width = Math.floor(w * dpr);\n        canvas.height = Math.floor(h * dpr);\n        // IMPORTANTISSIMO: non tocco style.width/height, sono gestiti dal CSS (100%)\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n      }\n    };\n\n    const onResize = () => ensureSize();\n    ensureSize();\n    window.addEventListener('resize', onResize);\n\n    const wheel = (e) => { e.preventDefault(); zoomRef.current = Math.max(0.5, Math.min(5, zoomRef.current * (e.deltaY > 0 ? 0.9 : 1.1))); };\n    const mousedown = (e) => { isDraggingRef.current = true; lastMouseRef.current = { x: e.clientX, y: e.clientY }; canvas.style.cursor = 'grabbing'; };\n    const mousemove = (e) => {\n      if (!isDraggingRef.current) return;\n      const dx = e.clientX - lastMouseRef.current.x;\n      const dy = e.clientY - lastMouseRef.current.y;\n      panRef.current.x += dx; panRef.current.y += dy;\n      lastMouseRef.current = { x: e.clientX, y: e.clientY };\n    };\n    const mouseup = () => { isDraggingRef.current = false; canvas.style.cursor = 'grab'; };\n\n    canvas.addEventListener('wheel', wheel, { passive: false });\n    canvas.addEventListener('mousedown', mousedown);\n    canvas.addEventListener('mousemove', mousemove);\n    canvas.addEventListener('mouseup', mouseup);\n    canvas.addEventListener('mouseleave', mouseup);\n    canvas.style.cursor = 'grab';\n\n    // precompute projection params\n    const lats = circuitData.sectors.map(s => s.lat);\n    const lons = circuitData.sectors.map(s => s.lon);\n    const minLat = Math.min(...lats), maxLat = Math.max(...lats);\n    const minLon = Math.min(...lons), maxLon = Math.max(...lons);\n    const centerLat = (minLat + maxLat) / 2;\n    const centerLon = (minLon + maxLon) / 2;\n    const R = 6371000;\n    const centerLatRad = centerLat * Math.PI / 180;\n    const dxList = lons.map(l => (l - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad));\n    const dyList = lats.map(l => (l - centerLat) * Math.PI / 180 * R);\n    const maxDx = Math.max(...dxList.map(Math.abs));\n    const maxDy = Math.max(...dyList.map(Math.abs));\n    const padding = 40;\n\n    const project = (lat, lon) => {\n      // usa dimensioni logiche del canvas (CSS size = container, ma qui usiamo backing store)\n      const w = canvas.width / dpr;\n      const h = canvas.height / dpr;\n      const maxRange = Math.max(maxDx, maxDy) * 1.1;\n      const scale = Math.min(w - padding * 2, h - padding * 2) / (maxRange * 2) * zoomRef.current;\n      const dx = (lon - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad);\n      const dy = (lat - centerLat) * Math.PI / 180 * R;\n      const x = w / 2 + dx * scale + panRef.current.x;\n      const y = h / 2 - dy * scale + panRef.current.y;\n      return { x, y, scale };\n    };\n\n    const draw = () => {\n      ensureSize(); // ridimensiona SOLO se il container cambia\n\n      const w = canvas.width / dpr;\n      const h = canvas.height / dpr;\n      ctx.clearRect(0, 0, w, h);\n      ctx.fillStyle = '#0a0a0a';\n      ctx.fillRect(0, 0, w, h);\n\n      const widthMeters = circuitData.params?.widthMeters ?? 6;\n      const pts = circuitData.sectors.map(s => project(s.lat, s.lon));\n      const scale = pts[0]?.scale || 1;\n      const trackPx = Math.max(6, widthMeters * scale);\n\n      // bordo soft\n      ctx.strokeStyle = 'rgba(255,255,255,0.10)';\n      ctx.lineWidth = trackPx + 4;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      pts.forEach((p, i) => i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y));\n      ctx.closePath(); ctx.stroke();\n\n      // asfalto\n      ctx.strokeStyle = 'rgba(80, 84, 90, 0.95)';\n      ctx.lineWidth = trackPx;\n      ctx.beginPath();\n      pts.forEach((p, i) => i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y));\n      ctx.closePath(); ctx.stroke();\n\n      // start\n      if (pts.length > 1) {\n        const s0 = pts[0], s1 = pts[1];\n        const ang = Math.atan2(s1.y - s0.y, s1.x - s0.x);\n        ctx.save(); ctx.translate(s0.x, s0.y); ctx.rotate(ang);\n        ctx.strokeStyle = '#ffffff';\n        ctx.lineWidth = Math.max(2, trackPx * 0.12);\n        ctx.beginPath(); ctx.moveTo(0, -trackPx * 0.5); ctx.lineTo(0, trackPx * 0.5); ctx.stroke();\n        ctx.restore();\n      }\n\n      // piloti con dati dal ref (nessun re-init dell'effetto)\n      const sorted = Object.values(driversRef.current).sort((a, b) => {\n        if (a.lapCount !== b.lapCount) return a.lapCount - b.lapCount;\n        return a.sectorIdx - b.sectorIdx;\n      });\n\n      sorted.forEach((d, i) => {\n        const p = project(d.lat, d.lon);\n\n        if (d.trail?.length > 1) {\n          ctx.strokeStyle = d.color;\n          ctx.globalAlpha = 0.6;\n          ctx.lineWidth = Math.max(2, trackPx * 0.12);\n          ctx.beginPath();\n          d.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti ? ctx.lineTo(tp.x, tp.y) : ctx.moveTo(tp.x, tp.y);\n          });\n          ctx.stroke(); ctx.globalAlpha = 1;\n        }\n\n        const isLeader = i === sorted.length - 1;\n        const r = Math.max(5, trackPx * 0.18) + (isLeader ? 1 : 0);\n        ctx.shadowColor = 'rgba(0,0,0,0.5)'; ctx.shadowBlur = 4;\n        ctx.fillStyle = d.color; ctx.beginPath(); ctx.arc(p.x, p.y, r, 0, Math.PI * 2); ctx.fill();\n        ctx.shadowBlur = 0; ctx.strokeStyle = '#fff'; ctx.lineWidth = 2; ctx.stroke();\n\n        ctx.fillStyle = '#fff'; ctx.font = 'bold 10px Roboto, sans-serif'; ctx.textAlign = 'center';\n        ctx.fillText(d.tag, p.x, p.y - (r + 8));\n      });\n\n      animFrameRef.current = requestAnimationFrame(draw);\n    };\n\n    draw();\n\n    return () => {\n      window.removeEventListener('resize', onResize);\n      canvas.removeEventListener('wheel', wheel);\n      canvas.removeEventListener('mousedown', mousedown);\n      canvas.removeEventListener('mousemove', mousemove);\n      canvas.removeEventListener('mouseup', mouseup);\n      canvas.removeEventListener('mouseleave', mouseup);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData]); // *** SOLO al cambio circuito ***\n\n  /* ---------- UI helpers ---------- */\n\n  const gapToLeader = (driver, leader) => {\n    if (!leader || !driver) return '';\n    if (driver.lapCount < leader.lapCount) return `+${leader.lapCount - driver.lapCount}L`;\n    const sectorDiff = leader.sectorIdx - driver.sectorIdx;\n    const est = Math.max(0, sectorDiff / 10);\n    return `+${est.toFixed(2)}`;\n  };\n  const formatLap = (s) => {\n    if (!s) return '—';\n    const m = Math.floor(s / 60);\n    const sec = (s % 60).toFixed(3);\n    return `${m}:${sec.padStart(6, '0')}`;\n  };\n\n  /* ---------- Render ---------- */\n\n  // const topBattle = useMemo(() => {\n  //   if (!activeBattles.length) return null;\n  //   return activeBattles.slice().sort((a, b) => a.distance - b.distance)[0];\n  // }, [activeBattles]);\n\n  return (\n    <div className=\"main small-top\">\n      <div className=\"rs-live-topbar\">\n        <div className=\"rs-live-left\">\n          <span className=\"chip readonly\">LIVE</span>\n          <span className=\"chip readonly\">{totalLaps} giri</span>\n        </div>\n        <div className=\"rs-live-right\">\n          <span className=\"chip readonly\">{circuitData?.name || 'Circuito'}</span>\n          {circuitData?.stats?.lengthMeters && <span className=\"chip readonly\">{circuitData.stats.lengthMeters.toFixed(0)} m</span>}\n          {circuitData?.params?.widthMeters && <span className=\"chip readonly\">{circuitData.params.widthMeters} m larghezza</span>}\n        </div>\n      </div>\n\n      <div className=\"rs-live-grid\">\n        <div className=\"track-card\">\n          <canvas ref={canvasRef} className=\"track-canvas\" />\n        </div>\n\n        <div className=\"leaderboard-card\">\n          <div className=\"lb-header\">\n            <div className=\"lb-title\">CLASSIFICA</div>\n            <div className=\"lb-sub\">{leaderboard.length} piloti</div>\n          </div>\n\n          {topBattle && (\n            <div className=\"lb-battle-overlay\">\n              <div className=\"battle-indicator\">\n                <div className=\"battle-line-left\"></div>\n                <div className=\"battle-content\">\n                  <div className=\"battle-label\">DUELLO</div>\n                  <div className=\"battle-gap\">{topBattle.distance.toFixed(1)} m</div>\n                </div>\n                <div className=\"battle-line-right\"></div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"lb-list\">\n            {leaderboard.length === 0 ? (\n              <div className=\"no-drivers\">\n                <p>Nessun dato GPS ancora disponibile…</p>\n                <small className=\"muted\">Appena arrivano i pacchetti la classifica si popola</small>\n              </div>\n            ) : (\n              leaderboard.map((d, idx) => {\n                const leader = leaderboard[0];\n                const isLeader = idx === 0;\n                const fastest = d.bestLapTime && globalBestLap && d.bestLapTime === globalBestLap;\n                const isOvertaking = overtakingPairs.find(p => p.overtaker === d.mac);\n                const isBeingOvertaken = overtakingPairs.find(p => p.overtaken === d.mac);\n\n                return (\n                  <div\n                    key={d.mac}\n                    className={`lb-row ${isLeader ? 'lb-leader' : ''} ${isOvertaking ? 'overtaking' : ''} ${isBeingOvertaken ? 'being-overtaken' : ''}`}\n                    title={d.fullName}\n                  >\n                    <div className=\"lb-pos\">{idx + 1}</div>\n\n                    <div className=\"lb-team\">\n                      {d.photoTeamUrl ? (\n                        <img src={`${API_BASE}${d.photoTeamUrl}`} alt={d.team} className=\"lb-team-logo\" />\n                      ) : (\n                        <div className=\"lb-team-color\" style={{ background: d.color }} />\n                      )}\n                    </div>\n\n                    <div className=\"lb-name\">{d.tag}</div>\n\n                    <div className=\"lb-gap\">{isLeader ? 'LEADER' : gapToLeader(d, leader)}</div>\n\n                    <div className=\"lb-icons\">\n                      {fastest && <span className=\"lb-icon purple\" title={`Best lap ${formatLap(d.bestLapTime)}`}>⏱</span>}\n                      {d.pit && <span className=\"lb-icon\" title=\"Pit\">🅿️</span>}\n                      {d.out && <span className=\"lb-icon\" title=\"Out\">⛔</span>}\n                    </div>\n\n                    <div className=\"lb-lap\"><span className=\"muted\">Lap</span>&nbsp;{d.lapCount}/{totalLaps}</div>\n                  </div>\n                );\n              })\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"race-controls\" style={{ justifyContent: 'center', marginTop: 12 }}>\n        <button className=\"btn-danger\" onClick={onStopRace}>Termina gara</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}