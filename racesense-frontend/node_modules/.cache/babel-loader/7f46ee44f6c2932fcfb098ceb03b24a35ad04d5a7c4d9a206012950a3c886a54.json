{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/racesense/racesense-frontend/src/pages/RaceLive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './Race.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n// Utility: calcola distanza Haversine (m)\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n// Trova il settore più vicino\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity;\n  let closestIdx = 0;\n  sectors.forEach((s, i) => {\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) {\n      minDist = d;\n      closestIdx = i;\n    }\n  });\n  return closestIdx;\n}\nexport default function RaceLive({\n  raceConfig,\n  onStopRace\n}) {\n  _s();\n  var _circuitData$stats, _circuitData$stats$le;\n  const {\n    circuitData,\n    totalLaps,\n    assignments,\n    pilots\n  } = raceConfig;\n  const [driversState, setDriversState] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeBattles, setActiveBattles] = useState([]);\n  const [recentOvertakes, setRecentOvertakes] = useState([]); // { driver1Mac, driver2Mac, timestamp }\n\n  const canvasRef = useRef(null);\n  const wsRef = useRef(null);\n  const animFrameRef = useRef(null);\n  const zoomRef = useRef(1);\n  const panRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const isDraggingRef = useRef(false);\n  const lastMouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const previousPositionsRef = useRef({}); // Memorizza posizioni precedenti\n\n  // ========== WebSocket GPS ==========\n  useEffect(() => {\n    const ws = new WebSocket(WS_URL);\n    wsRef.current = ws;\n    ws.onopen = () => console.log('[RaceLive] WebSocket connesso');\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n\n        // Formato: il backend invia { mac, lat, lon, speedKmh, ... }\n        if (data.mac && data.lat && data.lon) {\n          const mac = data.mac;\n\n          // Ignora device non assegnati\n          if (!assignments[mac]) return;\n          const gps = {\n            mac,\n            lat: data.lat,\n            lon: data.lon,\n            speed: data.speedKmh || 0,\n            ts: data.ts\n          };\n          handleGPSUpdate(gps);\n        }\n      } catch (e) {\n        console.error('[WS] Parse error:', e);\n      }\n    };\n    ws.onerror = err => console.error('[WS] Errore:', err);\n    ws.onclose = () => console.log('[WS] Chiuso');\n    return () => {\n      if (ws.readyState === WebSocket.OPEN) ws.close();\n    };\n  }, [assignments]);\n\n  // ========== Generazione colore team stile F1 ==========\n  const getTeamColor = useCallback((pilot, allPilots) => {\n    if (pilot.color) return pilot.color;\n\n    // Trova tutti i piloti dello stesso team\n    const teamPilots = allPilots.filter(p => p.team === pilot.team);\n    const pilotIndex = teamPilots.findIndex(p => p.id === pilot.id);\n\n    // Genera un colore base per il team (basato sul nome team)\n    const teamHash = pilot.team.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n    const baseHue = teamHash * 137.508 % 360; // Golden angle per distribuzione uniforme\n\n    // Se c'è più di un pilota nel team, varia leggermente luminosità e saturazione\n    if (teamPilots.length > 1) {\n      const lightness = 50 + pilotIndex * 10; // Varia luminosità: 50%, 60%, 70%...\n      const saturation = 75 - pilotIndex * 5; // Varia saturazione: 75%, 70%, 65%...\n      return `hsl(${baseHue}, ${saturation}%, ${lightness}%)`;\n    }\n\n    // Colore base team\n    return `hsl(${baseHue}, 75%, 55%)`;\n  }, []);\n\n  // ========== Gestione GPS Update ==========\n  const handleGPSUpdate = useCallback(gps => {\n    if (!(circuitData !== null && circuitData !== void 0 && circuitData.sectors)) return;\n    const {\n      mac,\n      lat,\n      lon,\n      speed\n    } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n\n    // Trova pilota assegnato\n    const pilotId = assignments[mac];\n    const pilot = pilots.find(p => p.id === pilotId);\n    if (!pilot) return;\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        name: `${pilot.name} ${pilot.surname}`,\n        team: pilot.team,\n        color: getTeamColor(pilot, pilots),\n        photoTeamUrl: pilot.photoTeamUrl,\n        photoDriverUrl: pilot.photoDriverUrl,\n        lat,\n        lon,\n        speed: 0,\n        sectorIdx,\n        lapCount: 0,\n        lastLapTime: null,\n        bestLapTime: null,\n        lastSectorIdx: sectorIdx,\n        lapStartTime: Date.now(),\n        trail: []\n      };\n\n      // Rilevamento completamento giro\n      let newLapCount = existing.lapCount;\n      let newLapTime = existing.lastLapTime;\n      let newBestLap = existing.bestLapTime;\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        const lapDuration = (Date.now() - existing.lapStartTime) / 1000;\n        if (lapDuration > 5) {\n          newLapCount = existing.lapCount + 1;\n          newLapTime = lapDuration;\n          if (!newBestLap || lapDuration < newBestLap) {\n            newBestLap = lapDuration;\n          }\n          console.log(`[LAP] ${existing.name} completato giro ${newLapCount} in ${lapDuration.toFixed(2)}s`);\n        }\n      }\n\n      // Trail dinamico basato sulla velocità\n      // Velocità alta (>30 km/h) = scia lunga (40 punti)\n      // Velocità media (15-30 km/h) = scia media (25 punti)\n      // Velocità bassa (<15 km/h) = scia corta (15 punti)\n      const trailLength = speed > 30 ? 40 : speed > 15 ? 25 : 15;\n      const newTrail = [...existing.trail, {\n        lat,\n        lon\n      }].slice(-trailLength);\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat,\n          lon,\n          speed,\n          sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount: newLapCount,\n          lastLapTime: newLapTime,\n          bestLapTime: newBestLap,\n          lapStartTime: newLapCount > existing.lapCount ? Date.now() : existing.lapStartTime,\n          trail: newTrail,\n          updatedAt: Date.now()\n        }\n      };\n    });\n  }, [circuitData, assignments, pilots, getTeamColor]);\n\n  // ========== Aggiorna classifica e battaglie con rilevamento sorpassi ==========\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n\n    // Rileva sorpassi confrontando con posizioni precedenti\n    const currentPositions = {};\n    sorted.forEach((driver, idx) => {\n      currentPositions[driver.mac] = idx;\n    });\n\n    // Trova sorpassi\n    const newOvertakes = [];\n    Object.keys(currentPositions).forEach(mac => {\n      const currentPos = currentPositions[mac];\n      const previousPos = previousPositionsRef.current[mac];\n\n      // Se la posizione è migliorata (numero più basso = posizione migliore)\n      if (previousPos !== undefined && currentPos < previousPos) {\n        var _sorted;\n        // Trova chi è stato sorpassato\n        const overtakenDriverMac = (_sorted = sorted[currentPos + 1]) === null || _sorted === void 0 ? void 0 : _sorted.mac;\n        if (overtakenDriverMac) {\n          newOvertakes.push({\n            overtaker: mac,\n            overtaken: overtakenDriverMac,\n            timestamp: Date.now()\n          });\n        }\n      }\n    });\n\n    // Aggiorna sorpassi recenti (mantieni solo ultimi 5 secondi)\n    if (newOvertakes.length > 0) {\n      setRecentOvertakes(prev => {\n        const now = Date.now();\n        const filtered = prev.filter(o => now - o.timestamp < 5000);\n        return [...filtered, ...newOvertakes];\n      });\n    } else {\n      // Rimuovi sorpassi vecchi\n      setRecentOvertakes(prev => {\n        const now = Date.now();\n        return prev.filter(o => now - o.timestamp < 5000);\n      });\n    }\n\n    // Salva posizioni correnti per prossimo confronto\n    previousPositionsRef.current = currentPositions;\n    setLeaderboard(sorted);\n\n    // Battaglie con hysteresis per evitare sfarfallio\n    const battles = [];\n    for (let i = 0; i < sorted.length - 1; i++) {\n      const driver1 = sorted[i];\n      const driver2 = sorted[i + 1];\n      if (driver1.lapCount === driver2.lapCount) {\n        const dist = haversine(driver1.lat, driver1.lon, driver2.lat, driver2.lon);\n        // Hysteresis: entra a 30m, esce a 35m\n        const wasInBattle = activeBattles.find(b => b.leader.mac === driver1.mac && b.chaser.mac === driver2.mac || b.leader.mac === driver2.mac && b.chaser.mac === driver1.mac);\n        if (dist < 30 || wasInBattle && dist < 35) {\n          battles.push({\n            leader: driver1,\n            chaser: driver2,\n            distance: dist,\n            position: i + 1\n          });\n        }\n      }\n    }\n    setActiveBattles(battles);\n  }, [driversState]);\n\n  // ========== Rendering Canvas ==========\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const resize = () => {\n      const rect = canvas.parentElement.getBoundingClientRect();\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      canvas.style.width = `${rect.width}px`;\n      canvas.style.height = `${rect.height}px`;\n      ctx.scale(dpr, dpr);\n    };\n    resize();\n    window.addEventListener('resize', resize);\n\n    // Gestione zoom con rotella\n    const handleWheel = e => {\n      e.preventDefault();\n      const delta = e.deltaY > 0 ? 0.9 : 1.1;\n      zoomRef.current = Math.max(0.5, Math.min(5, zoomRef.current * delta));\n    };\n    canvas.addEventListener('wheel', handleWheel, {\n      passive: false\n    });\n\n    // Gestione panning con mouse\n    const handleMouseDown = e => {\n      isDraggingRef.current = true;\n      lastMouseRef.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      canvas.style.cursor = 'grabbing';\n    };\n    const handleMouseMove = e => {\n      if (!isDraggingRef.current) return;\n      const dx = e.clientX - lastMouseRef.current.x;\n      const dy = e.clientY - lastMouseRef.current.y;\n      panRef.current.x += dx;\n      panRef.current.y += dy;\n      lastMouseRef.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n    };\n    const handleMouseUp = () => {\n      isDraggingRef.current = false;\n      canvas.style.cursor = 'grab';\n    };\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mouseleave', handleMouseUp);\n    canvas.style.cursor = 'grab';\n\n    // Calcola bounds pista\n    const lats = circuitData.sectors.map(s => s.lat);\n    const lons = circuitData.sectors.map(s => s.lon);\n    const minLat = Math.min(...lats);\n    const maxLat = Math.max(...lats);\n    const minLon = Math.min(...lons);\n    const maxLon = Math.max(...lons);\n\n    // Centro del tracciato\n    const centerLat = (minLat + maxLat) / 2;\n    const centerLon = (minLon + maxLon) / 2;\n    const padding = 60;\n\n    // Proiezione ortografica perfettamente piatta (vista dall'alto)\n    const project = (lat, lon) => {\n      const rect = canvas.getBoundingClientRect();\n      const w = rect.width - padding * 2;\n      const h = rect.height - padding * 2;\n\n      // Converte lat/lon in metri dal centro usando proiezione equirettangolare corretta\n      const R = 6371000; // raggio terra in metri\n      const latRad = lat * Math.PI / 180;\n      const centerLatRad = centerLat * Math.PI / 180;\n\n      // Distanza in metri dal centro\n      const dx = (lon - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad);\n      const dy = (lat - centerLat) * Math.PI / 180 * R;\n\n      // Trova range massimo per scalare uniformemente\n      const allDx = lons.map(l => (l - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad));\n      const allDy = lats.map(l => (l - centerLat) * Math.PI / 180 * R);\n      const maxDx = Math.max(...allDx.map(Math.abs));\n      const maxDy = Math.max(...allDy.map(Math.abs));\n      const maxRange = Math.max(maxDx, maxDy) * 1.1; // 10% margin\n\n      // Scala mantenendo aspect ratio con zoom\n      const scale = Math.min(w, h) / (maxRange * 2) * zoomRef.current;\n      const x = rect.width / 2 + dx * scale + panRef.current.x;\n      const y = rect.height / 2 - dy * scale + panRef.current.y; // inverte Y (canvas ha origine in alto)\n\n      return {\n        x,\n        y\n      };\n    };\n    const draw = () => {\n      const rect = canvas.getBoundingClientRect();\n      ctx.clearRect(0, 0, rect.width, rect.height);\n\n      // Sfondo pulito\n      ctx.fillStyle = '#0f1419';\n      ctx.fillRect(0, 0, rect.width, rect.height);\n\n      // Tracciato - stile F1 minimale\n      ctx.strokeStyle = 'rgba(60, 65, 75, 0.8)';\n      ctx.lineWidth = 20;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n\n      // Bordo esterno tracciato\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.15)';\n      ctx.lineWidth = 22;\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n\n      // Bordo interno tracciato\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.1)';\n      ctx.lineWidth = 18;\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n\n      // Finish line - stile F1 TV professionale\n      if (circuitData.sectors.length > 1) {\n        const s0 = project(circuitData.sectors[0].lat, circuitData.sectors[0].lon);\n        const s1 = project(circuitData.sectors[1].lat, circuitData.sectors[1].lon);\n        const angle = Math.atan2(s1.y - s0.y, s1.x - s0.x);\n        ctx.save();\n        ctx.translate(s0.x, s0.y);\n        ctx.rotate(angle);\n\n        // Linea finish pulita e visibile - stile F1 TV (largo quanto la pista)\n        const trackWidth = 20; // larghezza pista\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 4;\n        ctx.beginPath();\n        ctx.moveTo(0, -trackWidth / 2);\n        ctx.lineTo(0, trackWidth / 2);\n        ctx.stroke();\n\n        // Secondo accento rosso per traguardo (come nelle grafiche F1)\n        ctx.strokeStyle = '#e10600';\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.moveTo(-2, -trackWidth / 2);\n        ctx.lineTo(-2, trackWidth / 2);\n        ctx.stroke();\n        ctx.restore();\n      }\n\n      // Piloti\n      const sortedDrivers = Object.values(driversState).sort((a, b) => {\n        if (a.lapCount !== b.lapCount) return a.lapCount - b.lapCount;\n        return a.sectorIdx - b.sectorIdx;\n      });\n      sortedDrivers.forEach((driver, idx) => {\n        const pos = project(driver.lat, driver.lon);\n\n        // Trail - più visibile e pulito\n        if (driver.trail && driver.trail.length > 1) {\n          ctx.strokeStyle = driver.color;\n          ctx.lineWidth = 3.5;\n          ctx.lineCap = 'round';\n          ctx.lineJoin = 'round';\n          ctx.globalAlpha = 0.65;\n          ctx.beginPath();\n          driver.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti === 0 ? ctx.moveTo(tp.x, tp.y) : ctx.lineTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n          ctx.globalAlpha = 1;\n        }\n\n        // Driver marker - più visibile e professionale\n        const isLeader = idx === sortedDrivers.length - 1;\n        const radius = isLeader ? 8 : 7;\n\n        // Ombra leggera per profondità\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.4)';\n        ctx.shadowBlur = 4;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 1;\n\n        // Marker colorato\n        ctx.fillStyle = driver.color;\n        ctx.beginPath();\n        ctx.arc(pos.x, pos.y, radius, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.shadowBlur = 0;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n\n        // Bordo bianco per contrasto\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // Nome minimal - solo cognome\n        const nameParts = driver.name.split(' ');\n        const lastName = nameParts[nameParts.length - 1];\n        ctx.fillStyle = '#fff';\n        ctx.font = 'bold 10px Roboto, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.9)';\n        ctx.shadowBlur = 3;\n        ctx.fillText(lastName.toUpperCase(), pos.x, pos.y - 12);\n        ctx.shadowBlur = 0;\n      });\n      animFrameRef.current = requestAnimationFrame(draw);\n    };\n    draw();\n    return () => {\n      window.removeEventListener('resize', resize);\n      canvas.removeEventListener('wheel', handleWheel);\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mouseleave', handleMouseUp);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData, driversState]);\n\n  // Formatta tempo\n  const formatLapTime = seconds => {\n    if (!seconds) return '--:--.---';\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(3);\n    return `${mins}:${secs.padStart(6, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"race-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"race-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"race-logo\",\n          children: \"RACESENSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"race-title\",\n          children: \"GARA IN DIRETTA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circuit-badge\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"circuit-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"circuit-name\",\n            children: circuitData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"laps-badge\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"laps-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"laps-text\",\n            children: [totalLaps, \" GIRI\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"race-live\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"track-canvas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-overlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"live-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"live-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 17\n              }, this), \"LIVE\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 15\n            }, this), circuitData && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-info\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-icon\",\n                  children: \"LUNGHEZZA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-text\",\n                  children: [(_circuitData$stats = circuitData.stats) === null || _circuitData$stats === void 0 ? void 0 : (_circuitData$stats$le = _circuitData$stats.lengthMeters) === null || _circuitData$stats$le === void 0 ? void 0 : _circuitData$stats$le.toFixed(0), \"m\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"leaderboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leaderboard-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"CLASSIFICA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"leaderboard-subtitle\",\n              children: [leaderboard.length, \" Piloti\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leaderboard-list\",\n            children: leaderboard.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-drivers\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"In attesa di dati GPS...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this) : leaderboard.map((driver, pos) => {\n              const battle = activeBattles.find(b => b.leader.mac === driver.mac);\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `leaderboard-item ${pos === 0 ? 'leader' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"position\",\n                    children: pos + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"driver-color\",\n                    style: {\n                      background: driver.color\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 593,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"driver-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"driver-name\",\n                      children: driver.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 596,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"driver-stats\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"lap-count\",\n                        children: [\"Lap \", driver.lapCount, \"/\", totalLaps]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 600,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 25\n                  }, this), driver.photoTeamUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `${API_BASE}${driver.photoTeamUrl}`,\n                    alt: driver.team,\n                    className: \"team-logo-small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"driver-times\",\n                    children: [pos === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"gap leader-gap\",\n                      children: \"LEADER\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 614,\n                      columnNumber: 29\n                    }, this) : (() => {\n                      const leader = leaderboard[0];\n                      let gapDisplay = '';\n                      if (driver.lapCount < leader.lapCount) {\n                        const lapDiff = leader.lapCount - driver.lapCount;\n                        gapDisplay = `+${lapDiff} ${lapDiff === 1 ? 'LAP' : 'LAPS'}`;\n                      } else {\n                        const sectorDiff = leader.sectorIdx - driver.sectorIdx;\n                        if (sectorDiff > 0) {\n                          const estimatedGap = (sectorDiff / 10).toFixed(1);\n                          gapDisplay = `+${estimatedGap}s`;\n                        } else {\n                          gapDisplay = '+0.0s';\n                        }\n                      }\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"gap\",\n                        children: gapDisplay\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 632,\n                        columnNumber: 36\n                      }, this);\n                    })(), driver.bestLapTime && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"best-lap\",\n                      children: formatLapTime(driver.bestLapTime)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 636,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 23\n                }, this), battle && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"battle-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"battle-line-left\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 645,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"battle-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"battle-label\",\n                      children: \"DUELLO\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 647,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"battle-gap\",\n                      children: [battle.distance.toFixed(1), \"m\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 648,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 646,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"battle-line-right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 25\n                }, this)]\n              }, driver.mac, true, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"stop-race-btn\",\n          onClick: onStopRace,\n          children: \"TERMINA GARA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 531,\n    columnNumber: 5\n  }, this);\n}\n_s(RaceLive, \"5CtlLH5S2J75nQPj/svJLgCl3Sk=\");\n_c = RaceLive;\nvar _c;\n$RefreshReg$(_c, \"RaceLive\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","window","location","hostname","WS_URL","REACT_APP_WS_URL","haversine","lat1","lon1","lat2","lon2","R","toRad","d","Math","PI","dLat","dLon","a","sin","cos","atan2","sqrt","findClosestSector","lat","lon","sectors","minDist","Infinity","closestIdx","forEach","s","i","RaceLive","raceConfig","onStopRace","_s","_circuitData$stats","_circuitData$stats$le","circuitData","totalLaps","assignments","pilots","driversState","setDriversState","leaderboard","setLeaderboard","activeBattles","setActiveBattles","recentOvertakes","setRecentOvertakes","canvasRef","wsRef","animFrameRef","zoomRef","panRef","x","y","isDraggingRef","lastMouseRef","previousPositionsRef","ws","WebSocket","current","onopen","console","log","onmessage","event","data","JSON","parse","mac","gps","speed","speedKmh","ts","handleGPSUpdate","e","error","onerror","err","onclose","readyState","OPEN","close","getTeamColor","pilot","allPilots","color","teamPilots","filter","p","team","pilotIndex","findIndex","id","teamHash","split","reduce","acc","char","charCodeAt","baseHue","length","lightness","saturation","sectorIdx","totalSectors","pilotId","find","prev","existing","name","surname","photoTeamUrl","photoDriverUrl","lapCount","lastLapTime","bestLapTime","lastSectorIdx","lapStartTime","Date","now","trail","newLapCount","newLapTime","newBestLap","lapDuration","toFixed","trailLength","newTrail","slice","updatedAt","sorted","Object","values","sort","b","currentPositions","driver","idx","newOvertakes","keys","currentPos","previousPos","undefined","_sorted","overtakenDriverMac","push","overtaker","overtaken","timestamp","filtered","o","battles","driver1","driver2","dist","wasInBattle","leader","chaser","distance","position","canvas","ctx","getContext","dpr","devicePixelRatio","resize","rect","parentElement","getBoundingClientRect","width","height","style","scale","addEventListener","handleWheel","preventDefault","delta","deltaY","max","min","passive","handleMouseDown","clientX","clientY","cursor","handleMouseMove","dx","dy","handleMouseUp","lats","map","lons","minLat","maxLat","minLon","maxLon","centerLat","centerLon","padding","project","w","h","latRad","centerLatRad","allDx","l","allDy","maxDx","abs","maxDy","maxRange","draw","clearRect","fillStyle","fillRect","strokeStyle","lineWidth","lineCap","lineJoin","beginPath","moveTo","lineTo","closePath","stroke","s0","s1","angle","save","translate","rotate","trackWidth","restore","sortedDrivers","pos","globalAlpha","t","ti","tp","isLeader","radius","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","arc","fill","nameParts","lastName","font","textAlign","fillText","toUpperCase","requestAnimationFrame","removeEventListener","cancelAnimationFrame","formatLapTime","seconds","mins","floor","secs","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","stats","lengthMeters","battle","Fragment","background","src","alt","gapDisplay","lapDiff","sectorDiff","estimatedGap","onClick","_c","$RefreshReg$"],"sources":["/home/ubuntu/racesense/racesense-frontend/src/pages/RaceLive.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './Race.css';\n\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n// Utility: calcola distanza Haversine (m)\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 + \n            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n// Trova il settore più vicino\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity;\n  let closestIdx = 0;\n  sectors.forEach((s, i) => {\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) {\n      minDist = d;\n      closestIdx = i;\n    }\n  });\n  return closestIdx;\n}\n\nexport default function RaceLive({ raceConfig, onStopRace }) {\n  const { circuitData, totalLaps, assignments, pilots } = raceConfig;\n  \n  const [driversState, setDriversState] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeBattles, setActiveBattles] = useState([]);\n  const [recentOvertakes, setRecentOvertakes] = useState([]); // { driver1Mac, driver2Mac, timestamp }\n  \n  const canvasRef = useRef(null);\n  const wsRef = useRef(null);\n  const animFrameRef = useRef(null);\n  const zoomRef = useRef(1);\n  const panRef = useRef({ x: 0, y: 0 });\n  const isDraggingRef = useRef(false);\n  const lastMouseRef = useRef({ x: 0, y: 0 });\n  const previousPositionsRef = useRef({}); // Memorizza posizioni precedenti\n\n  // ========== WebSocket GPS ==========\n  useEffect(() => {\n    const ws = new WebSocket(WS_URL);\n    wsRef.current = ws;\n\n    ws.onopen = () => console.log('[RaceLive] WebSocket connesso');\n\n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        \n        // Formato: il backend invia { mac, lat, lon, speedKmh, ... }\n        if (data.mac && data.lat && data.lon) {\n          const mac = data.mac;\n          \n          // Ignora device non assegnati\n          if (!assignments[mac]) return;\n\n          const gps = {\n            mac,\n            lat: data.lat,\n            lon: data.lon,\n            speed: data.speedKmh || 0,\n            ts: data.ts\n          };\n          \n          handleGPSUpdate(gps);\n        }\n      } catch (e) {\n        console.error('[WS] Parse error:', e);\n      }\n    };\n\n    ws.onerror = (err) => console.error('[WS] Errore:', err);\n    ws.onclose = () => console.log('[WS] Chiuso');\n\n    return () => {\n      if (ws.readyState === WebSocket.OPEN) ws.close();\n    };\n  }, [assignments]);\n\n  // ========== Generazione colore team stile F1 ==========\n  const getTeamColor = useCallback((pilot, allPilots) => {\n    if (pilot.color) return pilot.color;\n    \n    // Trova tutti i piloti dello stesso team\n    const teamPilots = allPilots.filter(p => p.team === pilot.team);\n    const pilotIndex = teamPilots.findIndex(p => p.id === pilot.id);\n    \n    // Genera un colore base per il team (basato sul nome team)\n    const teamHash = pilot.team.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n    const baseHue = (teamHash * 137.508) % 360; // Golden angle per distribuzione uniforme\n    \n    // Se c'è più di un pilota nel team, varia leggermente luminosità e saturazione\n    if (teamPilots.length > 1) {\n      const lightness = 50 + (pilotIndex * 10); // Varia luminosità: 50%, 60%, 70%...\n      const saturation = 75 - (pilotIndex * 5); // Varia saturazione: 75%, 70%, 65%...\n      return `hsl(${baseHue}, ${saturation}%, ${lightness}%)`;\n    }\n    \n    // Colore base team\n    return `hsl(${baseHue}, 75%, 55%)`;\n  }, []);\n\n  // ========== Gestione GPS Update ==========\n  const handleGPSUpdate = useCallback((gps) => {\n    if (!circuitData?.sectors) return;\n\n    const { mac, lat, lon, speed } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n    \n    // Trova pilota assegnato\n    const pilotId = assignments[mac];\n    const pilot = pilots.find(p => p.id === pilotId);\n    if (!pilot) return;\n\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        name: `${pilot.name} ${pilot.surname}`,\n        team: pilot.team,\n        color: getTeamColor(pilot, pilots),\n        photoTeamUrl: pilot.photoTeamUrl,\n        photoDriverUrl: pilot.photoDriverUrl,\n        lat,\n        lon,\n        speed: 0,\n        sectorIdx,\n        lapCount: 0,\n        lastLapTime: null,\n        bestLapTime: null,\n        lastSectorIdx: sectorIdx,\n        lapStartTime: Date.now(),\n        trail: [],\n      };\n\n      // Rilevamento completamento giro\n      let newLapCount = existing.lapCount;\n      let newLapTime = existing.lastLapTime;\n      let newBestLap = existing.bestLapTime;\n\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        const lapDuration = (Date.now() - existing.lapStartTime) / 1000;\n        if (lapDuration > 5) {\n          newLapCount = existing.lapCount + 1;\n          newLapTime = lapDuration;\n          if (!newBestLap || lapDuration < newBestLap) {\n            newBestLap = lapDuration;\n          }\n          console.log(`[LAP] ${existing.name} completato giro ${newLapCount} in ${lapDuration.toFixed(2)}s`);\n        }\n      }\n\n      // Trail dinamico basato sulla velocità\n      // Velocità alta (>30 km/h) = scia lunga (40 punti)\n      // Velocità media (15-30 km/h) = scia media (25 punti)\n      // Velocità bassa (<15 km/h) = scia corta (15 punti)\n      const trailLength = speed > 30 ? 40 : speed > 15 ? 25 : 15;\n      const newTrail = [...existing.trail, { lat, lon }].slice(-trailLength);\n\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat,\n          lon,\n          speed,\n          sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount: newLapCount,\n          lastLapTime: newLapTime,\n          bestLapTime: newBestLap,\n          lapStartTime: newLapCount > existing.lapCount ? Date.now() : existing.lapStartTime,\n          trail: newTrail,\n          updatedAt: Date.now(),\n        }\n      };\n    });\n  }, [circuitData, assignments, pilots, getTeamColor]);\n\n  // ========== Aggiorna classifica e battaglie con rilevamento sorpassi ==========\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n    \n    // Rileva sorpassi confrontando con posizioni precedenti\n    const currentPositions = {};\n    sorted.forEach((driver, idx) => {\n      currentPositions[driver.mac] = idx;\n    });\n    \n    // Trova sorpassi\n    const newOvertakes = [];\n    Object.keys(currentPositions).forEach(mac => {\n      const currentPos = currentPositions[mac];\n      const previousPos = previousPositionsRef.current[mac];\n      \n      // Se la posizione è migliorata (numero più basso = posizione migliore)\n      if (previousPos !== undefined && currentPos < previousPos) {\n        // Trova chi è stato sorpassato\n        const overtakenDriverMac = sorted[currentPos + 1]?.mac;\n        if (overtakenDriverMac) {\n          newOvertakes.push({\n            overtaker: mac,\n            overtaken: overtakenDriverMac,\n            timestamp: Date.now()\n          });\n        }\n      }\n    });\n    \n    // Aggiorna sorpassi recenti (mantieni solo ultimi 5 secondi)\n    if (newOvertakes.length > 0) {\n      setRecentOvertakes(prev => {\n        const now = Date.now();\n        const filtered = prev.filter(o => now - o.timestamp < 5000);\n        return [...filtered, ...newOvertakes];\n      });\n    } else {\n      // Rimuovi sorpassi vecchi\n      setRecentOvertakes(prev => {\n        const now = Date.now();\n        return prev.filter(o => now - o.timestamp < 5000);\n      });\n    }\n    \n    // Salva posizioni correnti per prossimo confronto\n    previousPositionsRef.current = currentPositions;\n    \n    setLeaderboard(sorted);\n    \n    // Battaglie con hysteresis per evitare sfarfallio\n    const battles = [];\n    for (let i = 0; i < sorted.length - 1; i++) {\n      const driver1 = sorted[i];\n      const driver2 = sorted[i + 1];\n      \n      if (driver1.lapCount === driver2.lapCount) {\n        const dist = haversine(driver1.lat, driver1.lon, driver2.lat, driver2.lon);\n        // Hysteresis: entra a 30m, esce a 35m\n        const wasInBattle = activeBattles.find(\n          b => (b.leader.mac === driver1.mac && b.chaser.mac === driver2.mac) ||\n               (b.leader.mac === driver2.mac && b.chaser.mac === driver1.mac)\n        );\n        \n        if (dist < 30 || (wasInBattle && dist < 35)) {\n          battles.push({\n            leader: driver1,\n            chaser: driver2,\n            distance: dist,\n            position: i + 1\n          });\n        }\n      }\n    }\n    setActiveBattles(battles);\n  }, [driversState]);\n\n  // ========== Rendering Canvas ==========\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n\n    const resize = () => {\n      const rect = canvas.parentElement.getBoundingClientRect();\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      canvas.style.width = `${rect.width}px`;\n      canvas.style.height = `${rect.height}px`;\n      ctx.scale(dpr, dpr);\n    };\n    resize();\n    window.addEventListener('resize', resize);\n\n    // Gestione zoom con rotella\n    const handleWheel = (e) => {\n      e.preventDefault();\n      const delta = e.deltaY > 0 ? 0.9 : 1.1;\n      zoomRef.current = Math.max(0.5, Math.min(5, zoomRef.current * delta));\n    };\n    canvas.addEventListener('wheel', handleWheel, { passive: false });\n\n    // Gestione panning con mouse\n    const handleMouseDown = (e) => {\n      isDraggingRef.current = true;\n      lastMouseRef.current = { x: e.clientX, y: e.clientY };\n      canvas.style.cursor = 'grabbing';\n    };\n\n    const handleMouseMove = (e) => {\n      if (!isDraggingRef.current) return;\n      \n      const dx = e.clientX - lastMouseRef.current.x;\n      const dy = e.clientY - lastMouseRef.current.y;\n      \n      panRef.current.x += dx;\n      panRef.current.y += dy;\n      \n      lastMouseRef.current = { x: e.clientX, y: e.clientY };\n    };\n\n    const handleMouseUp = () => {\n      isDraggingRef.current = false;\n      canvas.style.cursor = 'grab';\n    };\n\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mouseleave', handleMouseUp);\n    canvas.style.cursor = 'grab';\n\n    // Calcola bounds pista\n    const lats = circuitData.sectors.map(s => s.lat);\n    const lons = circuitData.sectors.map(s => s.lon);\n    const minLat = Math.min(...lats);\n    const maxLat = Math.max(...lats);\n    const minLon = Math.min(...lons);\n    const maxLon = Math.max(...lons);\n    \n    // Centro del tracciato\n    const centerLat = (minLat + maxLat) / 2;\n    const centerLon = (minLon + maxLon) / 2;\n    \n    const padding = 60;\n\n    // Proiezione ortografica perfettamente piatta (vista dall'alto)\n    const project = (lat, lon) => {\n      const rect = canvas.getBoundingClientRect();\n      const w = rect.width - padding * 2;\n      const h = rect.height - padding * 2;\n      \n      // Converte lat/lon in metri dal centro usando proiezione equirettangolare corretta\n      const R = 6371000; // raggio terra in metri\n      const latRad = lat * Math.PI / 180;\n      const centerLatRad = centerLat * Math.PI / 180;\n      \n      // Distanza in metri dal centro\n      const dx = (lon - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad);\n      const dy = (lat - centerLat) * Math.PI / 180 * R;\n      \n      // Trova range massimo per scalare uniformemente\n      const allDx = lons.map(l => (l - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad));\n      const allDy = lats.map(l => (l - centerLat) * Math.PI / 180 * R);\n      const maxDx = Math.max(...allDx.map(Math.abs));\n      const maxDy = Math.max(...allDy.map(Math.abs));\n      const maxRange = Math.max(maxDx, maxDy) * 1.1; // 10% margin\n      \n      // Scala mantenendo aspect ratio con zoom\n      const scale = Math.min(w, h) / (maxRange * 2) * zoomRef.current;\n      const x = rect.width / 2 + dx * scale + panRef.current.x;\n      const y = rect.height / 2 - dy * scale + panRef.current.y; // inverte Y (canvas ha origine in alto)\n      \n      return { x, y };\n    };\n\n    const draw = () => {\n      const rect = canvas.getBoundingClientRect();\n      ctx.clearRect(0, 0, rect.width, rect.height);\n\n      // Sfondo pulito\n      ctx.fillStyle = '#0f1419';\n      ctx.fillRect(0, 0, rect.width, rect.height);\n\n      // Tracciato - stile F1 minimale\n      ctx.strokeStyle = 'rgba(60, 65, 75, 0.8)';\n      ctx.lineWidth = 20;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n\n      // Bordo esterno tracciato\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.15)';\n      ctx.lineWidth = 22;\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n\n      // Bordo interno tracciato\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.1)';\n      ctx.lineWidth = 18;\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n\n      // Finish line - stile F1 TV professionale\n      if (circuitData.sectors.length > 1) {\n        const s0 = project(circuitData.sectors[0].lat, circuitData.sectors[0].lon);\n        const s1 = project(circuitData.sectors[1].lat, circuitData.sectors[1].lon);\n        const angle = Math.atan2(s1.y - s0.y, s1.x - s0.x);\n        \n        ctx.save();\n        ctx.translate(s0.x, s0.y);\n        ctx.rotate(angle);\n        \n        // Linea finish pulita e visibile - stile F1 TV (largo quanto la pista)\n        const trackWidth = 20; // larghezza pista\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 4;\n        ctx.beginPath();\n        ctx.moveTo(0, -trackWidth/2);\n        ctx.lineTo(0, trackWidth/2);\n        ctx.stroke();\n        \n        // Secondo accento rosso per traguardo (come nelle grafiche F1)\n        ctx.strokeStyle = '#e10600';\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.moveTo(-2, -trackWidth/2);\n        ctx.lineTo(-2, trackWidth/2);\n        ctx.stroke();\n        \n        ctx.restore();\n      }\n\n      // Piloti\n      const sortedDrivers = Object.values(driversState).sort((a, b) => {\n        if (a.lapCount !== b.lapCount) return a.lapCount - b.lapCount;\n        return a.sectorIdx - b.sectorIdx;\n      });\n\n      sortedDrivers.forEach((driver, idx) => {\n        const pos = project(driver.lat, driver.lon);\n\n        // Trail - più visibile e pulito\n        if (driver.trail && driver.trail.length > 1) {\n          ctx.strokeStyle = driver.color;\n          ctx.lineWidth = 3.5;\n          ctx.lineCap = 'round';\n          ctx.lineJoin = 'round';\n          ctx.globalAlpha = 0.65;\n          ctx.beginPath();\n          driver.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti === 0 ? ctx.moveTo(tp.x, tp.y) : ctx.lineTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n          ctx.globalAlpha = 1;\n        }\n\n        // Driver marker - più visibile e professionale\n        const isLeader = idx === sortedDrivers.length - 1;\n        const radius = isLeader ? 8 : 7;\n        \n        // Ombra leggera per profondità\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.4)';\n        ctx.shadowBlur = 4;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 1;\n        \n        // Marker colorato\n        ctx.fillStyle = driver.color;\n        ctx.beginPath();\n        ctx.arc(pos.x, pos.y, radius, 0, Math.PI * 2);\n        ctx.fill();\n        \n        ctx.shadowBlur = 0;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n        \n        // Bordo bianco per contrasto\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // Nome minimal - solo cognome\n        const nameParts = driver.name.split(' ');\n        const lastName = nameParts[nameParts.length - 1];\n        ctx.fillStyle = '#fff';\n        ctx.font = 'bold 10px Roboto, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.9)';\n        ctx.shadowBlur = 3;\n        ctx.fillText(lastName.toUpperCase(), pos.x, pos.y - 12);\n        ctx.shadowBlur = 0;\n      });\n\n      animFrameRef.current = requestAnimationFrame(draw);\n    };\n\n    draw();\n\n    return () => {\n      window.removeEventListener('resize', resize);\n      canvas.removeEventListener('wheel', handleWheel);\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mouseleave', handleMouseUp);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData, driversState]);\n\n  // Formatta tempo\n  const formatLapTime = (seconds) => {\n    if (!seconds) return '--:--.---';\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(3);\n    return `${mins}:${secs.padStart(6, '0')}`;\n  };\n\n  return (\n    <div className=\"race-page\">\n      <header className=\"race-header\">\n        <div className=\"race-header-left\">\n          <div className=\"race-logo\">RACESENSE</div>\n          <div className=\"race-title\">GARA IN DIRETTA</div>\n        </div>\n        <div className=\"race-header-right\">\n          <div className=\"circuit-badge\">\n            <span className=\"circuit-icon\"></span>\n            <span className=\"circuit-name\">{circuitData.name}</span>\n          </div>\n          <div className=\"laps-badge\">\n            <span className=\"laps-icon\"></span>\n            <span className=\"laps-text\">{totalLaps} GIRI</span>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"race-live\">\n        <div className=\"race-main\">\n          <div className=\"track-container\">\n            <canvas ref={canvasRef} className=\"track-canvas\" />\n            \n            <div className=\"track-overlay\">\n              <div className=\"live-indicator\">\n                <span className=\"live-dot\"></span>\n                LIVE\n              </div>\n              \n              {circuitData && (\n                <div className=\"track-info\">\n                  <div className=\"track-stat\">\n                    <span className=\"stat-icon\">LUNGHEZZA</span>\n                    <span className=\"stat-text\">{circuitData.stats?.lengthMeters?.toFixed(0)}m</span>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <aside className=\"leaderboard\">\n            <div className=\"leaderboard-header\">\n              <h3>CLASSIFICA</h3>\n              <div className=\"leaderboard-subtitle\">\n                {leaderboard.length} Piloti\n              </div>\n            </div>\n            \n            <div className=\"leaderboard-list\">\n              {leaderboard.length === 0 ? (\n                <div className=\"no-drivers\">\n                  <p>In attesa di dati GPS...</p>\n                </div>\n              ) : (\n                leaderboard.map((driver, pos) => {\n                  const battle = activeBattles.find(b => b.leader.mac === driver.mac);\n                  \n                  return (\n                    <React.Fragment key={driver.mac}>\n                      <div className={`leaderboard-item ${pos === 0 ? 'leader' : ''}`}>\n                        <div className=\"position\">{pos + 1}</div>\n                        \n                        <div className=\"driver-color\" style={{ background: driver.color }}></div>\n                        \n                        <div className=\"driver-info\">\n                          <div className=\"driver-name\">\n                            {driver.name}\n                          </div>\n                          <div className=\"driver-stats\">\n                            <span className=\"lap-count\">Lap {driver.lapCount}/{totalLaps}</span>\n                          </div>\n                        </div>\n                        \n                        {driver.photoTeamUrl && (\n                          <img \n                            src={`${API_BASE}${driver.photoTeamUrl}`}\n                            alt={driver.team}\n                            className=\"team-logo-small\"\n                          />\n                        )}\n                        \n                        <div className=\"driver-times\">\n                          {pos === 0 ? (\n                            <div className=\"gap leader-gap\">LEADER</div>\n                          ) : (() => {\n                            const leader = leaderboard[0];\n                            let gapDisplay = '';\n                            \n                            if (driver.lapCount < leader.lapCount) {\n                              const lapDiff = leader.lapCount - driver.lapCount;\n                              gapDisplay = `+${lapDiff} ${lapDiff === 1 ? 'LAP' : 'LAPS'}`;\n                            } else {\n                              const sectorDiff = leader.sectorIdx - driver.sectorIdx;\n                              if (sectorDiff > 0) {\n                                const estimatedGap = (sectorDiff / 10).toFixed(1);\n                                gapDisplay = `+${estimatedGap}s`;\n                              } else {\n                                gapDisplay = '+0.0s';\n                              }\n                            }\n                            \n                            return <div className=\"gap\">{gapDisplay}</div>;\n                          })()}\n                          \n                          {driver.bestLapTime && (\n                            <div className=\"best-lap\">\n                              {formatLapTime(driver.bestLapTime)}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      \n                      {battle && (\n                        <div className=\"battle-indicator\">\n                          <div className=\"battle-line-left\"></div>\n                          <div className=\"battle-content\">\n                            <div className=\"battle-label\">DUELLO</div>\n                            <div className=\"battle-gap\">{battle.distance.toFixed(1)}m</div>\n                          </div>\n                          <div className=\"battle-line-right\"></div>\n                        </div>\n                      )}\n                    </React.Fragment>\n                  );\n                })\n              )}\n            </div>\n          </aside>\n        </div>\n\n        <div className=\"race-controls\">\n          <button className=\"stop-race-btn\" onClick={onStopRace}>\n            TERMINA GARA\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}