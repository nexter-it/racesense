{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/racesense/racesense-frontend/src/pages/RaceLive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n// Haversine (metri)\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n// Settore più vicino\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity;\n  let closestIdx = 0;\n  for (let i = 0; i < sectors.length; i++) {\n    const s = sectors[i];\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) {\n      minDist = d;\n      closestIdx = i;\n    }\n  }\n  return closestIdx;\n}\n\n// Sigla stile F1: \"G. RUSSELL\"\nfunction f1Name(pilot) {\n  const first = (pilot.name || '').trim();\n  const last = (pilot.surname || '').trim().toUpperCase();\n  const initial = first ? `${first[0].toUpperCase()}. ` : '';\n  return `${initial}${last}`;\n}\nexport default function RaceLive({\n  raceConfig,\n  onStopRace\n}) {\n  _s();\n  var _circuitData$stats, _circuitData$params2;\n  const {\n    circuitData,\n    totalLaps,\n    assignments,\n    pilots\n  } = raceConfig;\n  const [driversState, setDriversState] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeBattles, setActiveBattles] = useState([]);\n  const [overtakingPairs, setOvertakingPairs] = useState([]);\n  const canvasRef = useRef(null);\n  const wsRef = useRef(null);\n  const animFrameRef = useRef(null);\n\n  // viewport\n  const zoomRef = useRef(1);\n  const panRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const isDraggingRef = useRef(false);\n  const lastMouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const lastPositionsRef = useRef({}); // per sorpassi\n\n  // ===== WebSocket =====\n  useEffect(() => {\n    const ws = new WebSocket(WS_URL);\n    wsRef.current = ws;\n    ws.onopen = () => console.log('[RaceLive] WS connesso');\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.mac && data.lat && data.lon) {\n          const mac = String(data.mac);\n          if (!assignments[mac]) return; // ignora device non assegnati\n\n          const gps = {\n            mac,\n            lat: Number(data.lat),\n            lon: Number(data.lon),\n            speed: Number(data.speedKmh || 0),\n            ts: data.ts || Date.now()\n          };\n          handleGPSUpdate(gps);\n        }\n      } catch (e) {\n        console.error('[RaceLive] Parse WS:', e);\n      }\n    };\n    ws.onerror = err => console.error('[RaceLive] WS error', err);\n    ws.onclose = () => console.log('[RaceLive] WS chiuso');\n    return () => {\n      try {\n        ws.close();\n      } catch {}\n    };\n  }, [assignments]);\n\n  // ===== Colore team (fallback se pilot.color manca) =====\n  const getTeamColor = useCallback((pilot, allPilots) => {\n    if (pilot.color) return pilot.color;\n    const teamPilots = allPilots.filter(p => p.team === pilot.team);\n    const pilotIndex = teamPilots.findIndex(p => p.id === pilot.id);\n    const teamHash = (pilot.team || 'TEAM').split('').reduce((acc, ch) => acc + ch.charCodeAt(0), 0);\n    const hue = teamHash * 137.508 % 360;\n    if (teamPilots.length > 1) {\n      const l = 50 + pilotIndex * 8;\n      const s = 75 - pilotIndex * 5;\n      return `hsl(${hue}, ${s}%, ${l}%)`;\n    }\n    return `hsl(${hue}, 75%, 55%)`;\n  }, []);\n\n  // ===== Update GPS → stato pilota =====\n  const handleGPSUpdate = useCallback(gps => {\n    if (!(circuitData !== null && circuitData !== void 0 && circuitData.sectors)) return;\n    const {\n      mac,\n      lat,\n      lon,\n      speed\n    } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n    const pilotId = assignments[mac];\n    const pilot = pilots.find(p => String(p.id) === String(pilotId));\n    if (!pilot) return;\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        pilotId,\n        pilot,\n        name: f1Name(pilot),\n        team: pilot.team,\n        color: getTeamColor(pilot, pilots),\n        photoTeamUrl: pilot.photoTeamUrl,\n        photoDriverUrl: pilot.photoDriverUrl,\n        lat,\n        lon,\n        speed: 0,\n        sectorIdx,\n        lapCount: 0,\n        lastSectorIdx: sectorIdx,\n        lapStartTime: Date.now(),\n        lastLapTime: null,\n        bestLapTime: null,\n        pit: false,\n        out: false,\n        trail: []\n      };\n\n      // completamento giro (wrap settori)\n      let lapCount = existing.lapCount;\n      let lastLapTime = existing.lastLapTime;\n      let bestLapTime = existing.bestLapTime;\n      let lapStartTime = existing.lapStartTime;\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        const lapSec = (Date.now() - existing.lapStartTime) / 1000;\n        if (lapSec > 5) {\n          lapCount = existing.lapCount + 1;\n          lastLapTime = lapSec;\n          bestLapTime = !bestLapTime || lapSec < bestLapTime ? lapSec : bestLapTime;\n          lapStartTime = Date.now();\n        }\n      }\n\n      // trail dinamico\n      const trailLength = speed > 30 ? 40 : speed > 15 ? 25 : 15;\n      const trail = [...existing.trail, {\n        lat,\n        lon\n      }].slice(-trailLength);\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat,\n          lon,\n          speed,\n          sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount,\n          lastLapTime,\n          bestLapTime,\n          lapStartTime,\n          trail,\n          updatedAt: Date.now()\n        }\n      };\n    });\n  }, [circuitData, assignments, pilots, getTeamColor]);\n\n  // ===== Classifica, sorpassi, duelli =====\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n\n    // sorpassi\n    const newOvertakes = [];\n    const currentPos = {};\n    sorted.forEach((d, i) => {\n      currentPos[d.mac] = i;\n      const lastPos = lastPositionsRef.current[d.mac];\n      if (lastPos !== undefined && i < lastPos) {\n        const overtaken = sorted[i + 1];\n        if (overtaken && lastPositionsRef.current[overtaken.mac] === i) {\n          newOvertakes.push({\n            overtaker: d.mac,\n            overtaken: overtaken.mac,\n            timestamp: Date.now()\n          });\n        }\n      }\n    });\n    if (newOvertakes.length) {\n      setOvertakingPairs(prev => {\n        const now = Date.now();\n        const keep = prev.filter(p => now - p.timestamp < 1800);\n        return [...keep, ...newOvertakes];\n      });\n      setTimeout(() => {\n        lastPositionsRef.current = currentPos;\n      }, 1800);\n    } else {\n      const now = Date.now();\n      setOvertakingPairs(prev => prev.filter(p => now - p.timestamp < 1800));\n      if (overtakingPairs.length === 0) lastPositionsRef.current = currentPos;\n    }\n\n    // duelli (entro 30m, hysteresis 35m)\n    const battles = [];\n    for (let i = 0; i < sorted.length - 1; i++) {\n      const a = sorted[i],\n        b = sorted[i + 1];\n      if (a.lapCount !== b.lapCount) continue;\n      const dist = haversine(a.lat, a.lon, b.lat, b.lon);\n      const prev = activeBattles.find(x => x.leader.mac === a.mac && x.chaser.mac === b.mac || x.leader.mac === b.mac && x.chaser.mac === a.mac);\n      const was = !!prev;\n      if (dist < 30 || was && dist < 35) {\n        battles.push({\n          leader: a,\n          chaser: b,\n          distance: dist,\n          position: i + 1\n        });\n      }\n    }\n    setActiveBattles(battles);\n    setLeaderboard(sorted);\n  }, [driversState]); // eslint-disable-line\n\n  // ===== Best lap globale (per icona viola) =====\n  const globalBestLap = useMemo(() => {\n    let best = null;\n    Object.values(driversState).forEach(d => {\n      if (d.bestLapTime && (best === null || d.bestLapTime < best)) best = d.bestLapTime;\n    });\n    return best;\n  }, [driversState]);\n\n  // ===== Canvas: tracciato minimal + larghezza reale =====\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const resize = () => {\n      const rect = canvas.parentElement.getBoundingClientRect();\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      canvas.style.width = `${rect.width}px`;\n      canvas.style.height = `${rect.height}px`;\n      ctx.setTransform(dpr, 0, 0, dpr, 0, 0); // reset + scale per DPR\n    };\n    resize();\n    window.addEventListener('resize', resize);\n\n    // zoom/pan\n    const wheel = e => {\n      e.preventDefault();\n      const delta = e.deltaY > 0 ? 0.9 : 1.1;\n      zoomRef.current = Math.max(0.5, Math.min(5, zoomRef.current * delta));\n    };\n    const mousedown = e => {\n      isDraggingRef.current = true;\n      lastMouseRef.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      canvas.style.cursor = 'grabbing';\n    };\n    const mousemove = e => {\n      if (!isDraggingRef.current) return;\n      const dx = e.clientX - lastMouseRef.current.x;\n      const dy = e.clientY - lastMouseRef.current.y;\n      panRef.current.x += dx;\n      panRef.current.y += dy;\n      lastMouseRef.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n    };\n    const mouseup = () => {\n      isDraggingRef.current = false;\n      canvas.style.cursor = 'grab';\n    };\n    canvas.addEventListener('wheel', wheel, {\n      passive: false\n    });\n    canvas.addEventListener('mousedown', mousedown);\n    canvas.addEventListener('mousemove', mousemove);\n    canvas.addEventListener('mouseup', mouseup);\n    canvas.addEventListener('mouseleave', mouseup);\n    canvas.style.cursor = 'grab';\n\n    // bounds calcolo metri\n    const lats = circuitData.sectors.map(s => s.lat);\n    const lons = circuitData.sectors.map(s => s.lon);\n    const minLat = Math.min(...lats),\n      maxLat = Math.max(...lats);\n    const minLon = Math.min(...lons),\n      maxLon = Math.max(...lons);\n    const centerLat = (minLat + maxLat) / 2;\n    const centerLon = (minLon + maxLon) / 2;\n    const padding = 40;\n\n    // precalcolo range metri\n    const R = 6371000;\n    const centerLatRad = centerLat * Math.PI / 180;\n    const dxList = lons.map(l => (l - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad));\n    const dyList = lats.map(l => (l - centerLat) * Math.PI / 180 * R);\n    const maxDx = Math.max(...dxList.map(Math.abs));\n    const maxDy = Math.max(...dyList.map(Math.abs));\n    const project = (lat, lon) => {\n      const rect = canvas.getBoundingClientRect();\n      const w = rect.width - padding * 2;\n      const h = rect.height - padding * 2;\n      const maxRange = Math.max(maxDx, maxDy) * 1.1; // margine 10%\n      const scale = Math.min(w, h) / (maxRange * 2) * zoomRef.current; // metri → px\n\n      const dx = (lon - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad);\n      const dy = (lat - centerLat) * Math.PI / 180 * R;\n      const x = rect.width / 2 + dx * scale + panRef.current.x;\n      const y = rect.height / 2 - dy * scale + panRef.current.y;\n      return {\n        x,\n        y,\n        scale\n      }; // esporto scale per larghezza pista\n    };\n    const draw = () => {\n      var _circuitData$params$w, _circuitData$params, _pts$;\n      const rect = canvas.getBoundingClientRect();\n      ctx.clearRect(0, 0, rect.width, rect.height);\n\n      // sfondo in palette app\n      ctx.fillStyle = '#0a0a0a';\n      ctx.fillRect(0, 0, rect.width, rect.height);\n\n      // larghezza pista dai parametri\n      const widthMeters = (_circuitData$params$w = (_circuitData$params = circuitData.params) === null || _circuitData$params === void 0 ? void 0 : _circuitData$params.widthMeters) !== null && _circuitData$params$w !== void 0 ? _circuitData$params$w : 6;\n\n      // percorso\n      const pts = circuitData.sectors.map(s => project(s.lat, s.lon));\n      const scale = ((_pts$ = pts[0]) === null || _pts$ === void 0 ? void 0 : _pts$.scale) || 1;\n      const trackPx = Math.max(6, widthMeters * scale); // minimo visivo\n\n      // bordo soft\n      ctx.strokeStyle = 'rgba(255,255,255,0.10)';\n      ctx.lineWidth = trackPx + 4;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      pts.forEach((p, i) => i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y));\n      ctx.closePath();\n      ctx.stroke();\n\n      // pista (asfalto) minimal\n      ctx.strokeStyle = 'rgba(80, 84, 90, 0.95)';\n      ctx.lineWidth = trackPx;\n      ctx.beginPath();\n      pts.forEach((p, i) => i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y));\n      ctx.closePath();\n      ctx.stroke();\n\n      // linea di partenza (settore 0 → 1)\n      if (pts.length > 1) {\n        const s0 = pts[0],\n          s1 = pts[1];\n        const ang = Math.atan2(s1.y - s0.y, s1.x - s0.x);\n        ctx.save();\n        ctx.translate(s0.x, s0.y);\n        ctx.rotate(ang);\n        ctx.strokeStyle = '#ffffff';\n        ctx.lineWidth = Math.max(2, trackPx * 0.12);\n        ctx.beginPath();\n        ctx.moveTo(0, -trackPx * 0.5);\n        ctx.lineTo(0, trackPx * 0.5);\n        ctx.stroke();\n        ctx.restore();\n      }\n\n      // scie + marker piloti\n      const sortedDrivers = Object.values(driversState).sort((a, b) => {\n        if (a.lapCount !== b.lapCount) return a.lapCount - b.lapCount;\n        return a.sectorIdx - b.sectorIdx;\n      });\n      sortedDrivers.forEach((d, i) => {\n        var _d$trail;\n        const p = project(d.lat, d.lon);\n\n        // trail\n        if (((_d$trail = d.trail) === null || _d$trail === void 0 ? void 0 : _d$trail.length) > 1) {\n          ctx.strokeStyle = d.color;\n          ctx.globalAlpha = 0.6;\n          ctx.lineWidth = Math.max(2, trackPx * 0.12);\n          ctx.beginPath();\n          d.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti ? ctx.lineTo(tp.x, tp.y) : ctx.moveTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n          ctx.globalAlpha = 1;\n        }\n\n        // marker\n        const isLeader = i === sortedDrivers.length - 1;\n        const r = Math.max(5, trackPx * 0.18) + (isLeader ? 1 : 0);\n\n        // alone bianca per contrasto\n        ctx.shadowColor = 'rgba(0,0,0,0.5)';\n        ctx.shadowBlur = 4;\n        ctx.fillStyle = d.color;\n        ctx.beginPath();\n        ctx.arc(p.x, p.y, r, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.shadowBlur = 0;\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // cognome vicino\n        const last = d.name.split(' ').pop();\n        ctx.fillStyle = '#fff';\n        ctx.font = 'bold 10px Roboto, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.fillText(String(last).toUpperCase(), p.x, p.y - (r + 8));\n      });\n      animFrameRef.current = requestAnimationFrame(draw);\n    };\n    draw();\n    return () => {\n      window.removeEventListener('resize', resize);\n      canvas.removeEventListener('wheel', wheel);\n      canvas.removeEventListener('mousedown', mousedown);\n      canvas.removeEventListener('mousemove', mousemove);\n      canvas.removeEventListener('mouseup', mouseup);\n      canvas.removeEventListener('mouseleave', mouseup);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData, driversState]);\n\n  // ===== Util =====\n  const formatLapTime = seconds => {\n    if (!seconds) return '—';\n    const m = Math.floor(seconds / 60);\n    const s = seconds - m * 60;\n    return `${m}:${s.toFixed(3).padStart(6, '0')}`;\n  };\n  const gapToLeader = (driver, leader) => {\n    if (!leader || !driver) return '';\n    if (driver.lapCount < leader.lapCount) {\n      return `+${leader.lapCount - driver.lapCount}L`;\n    }\n    const sectorDiff = leader.sectorIdx - driver.sectorIdx;\n    // stima: 10 settori ~ 1s (fallback)\n    const est = Math.max(0, sectorDiff / 10);\n    return `+${est.toFixed(3)}`.replace(/0+$/, '0'); // mantiene 3 dec\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main small-top\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rs-live-topbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rs-live-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: \"LIVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          title: \"Giri totali\",\n          children: [totalLaps, \" giri\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rs-live-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: (circuitData === null || circuitData === void 0 ? void 0 : circuitData.name) || 'Circuito'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), (circuitData === null || circuitData === void 0 ? void 0 : (_circuitData$stats = circuitData.stats) === null || _circuitData$stats === void 0 ? void 0 : _circuitData$stats.lengthMeters) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: [circuitData.stats.lengthMeters.toFixed(0), \" m\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), (circuitData === null || circuitData === void 0 ? void 0 : (_circuitData$params2 = circuitData.params) === null || _circuitData$params2 === void 0 ? void 0 : _circuitData$params2.widthMeters) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: [circuitData.params.widthMeters, \" m larghezza\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rs-live-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-card\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"track-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lb-title\",\n            children: \"CLASSIFICA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lb-sub\",\n            children: [leaderboard.length, \" piloti\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-list\",\n          children: [leaderboard.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-drivers\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Nessun dato GPS ancora disponibile\\u2026\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"muted\",\n              children: \"Appena arrivano i pacchetti la classifica si popola\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this) : leaderboard.map((d, idx) => {\n            const leader = leaderboard[0];\n            const isLeader = idx === 0;\n            const fastest = d.bestLapTime && globalBestLap && d.bestLapTime === globalBestLap;\n\n            // sorpasso animazioni\n            const isOvertaking = overtakingPairs.find(p => p.overtaker === d.mac);\n            const isBeingOvertaken = overtakingPairs.find(p => p.overtaken === d.mac);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `lb-row ${isLeader ? 'lb-leader' : ''} ${isOvertaking ? 'overtaking' : ''} ${isBeingOvertaken ? 'being-overtaken' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-pos\",\n                children: idx + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-team\",\n                children: d.photoTeamUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${API_BASE}${d.photoTeamUrl}`,\n                  alt: d.team,\n                  className: \"lb-team-logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"lb-team-color\",\n                  style: {\n                    background: d.color\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-name\",\n                children: d.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-gap\",\n                children: isLeader ? 'LEADER' : gapToLeader(d, leader)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-icons\",\n                children: [fastest && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lb-icon purple\",\n                  title: \"Miglior giro gara\",\n                  children: \"\\u23F1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 35\n                }, this), d.pit && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lb-icon\",\n                  title: \"Pit\",\n                  children: \"\\uD83C\\uDD7F\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 33\n                }, this), d.out && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lb-icon\",\n                  title: \"Ritirato\",\n                  children: \"\\u26D4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-lap\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"muted\",\n                  children: \"Lap\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 23\n                }, this), \"\\xA0\", d.lapCount, \"/\", totalLaps]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 21\n              }, this)]\n            }, d.mac, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 19\n            }, this);\n          }), activeBattles.map(b => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"battle-indicator rs-battle\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"battle-line-left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"battle-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"battle-label\",\n                children: \"DUELLO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"battle-gap\",\n                children: [b.distance.toFixed(1), \" m\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"battle-line-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this)]\n          }, `${b.leader.mac}-${b.chaser.mac}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"race-controls\",\n      style: {\n        justifyContent: 'center',\n        marginTop: 12\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-danger\",\n        onClick: onStopRace,\n        children: \"Termina gara\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 458,\n    columnNumber: 5\n  }, this);\n}\n_s(RaceLive, \"I9tzrQ8cdDYJQzq93iZag6L4Mi0=\");\n_c = RaceLive;\nvar _c;\n$RefreshReg$(_c, \"RaceLive\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","window","location","hostname","WS_URL","REACT_APP_WS_URL","haversine","lat1","lon1","lat2","lon2","R","toRad","d","Math","PI","dLat","dLon","a","sin","cos","atan2","sqrt","findClosestSector","lat","lon","sectors","minDist","Infinity","closestIdx","i","length","s","f1Name","pilot","first","name","trim","last","surname","toUpperCase","initial","RaceLive","raceConfig","onStopRace","_s","_circuitData$stats","_circuitData$params2","circuitData","totalLaps","assignments","pilots","driversState","setDriversState","leaderboard","setLeaderboard","activeBattles","setActiveBattles","overtakingPairs","setOvertakingPairs","canvasRef","wsRef","animFrameRef","zoomRef","panRef","x","y","isDraggingRef","lastMouseRef","lastPositionsRef","ws","WebSocket","current","onopen","console","log","onmessage","event","data","JSON","parse","mac","String","gps","Number","speed","speedKmh","ts","Date","now","handleGPSUpdate","e","error","onerror","err","onclose","close","getTeamColor","allPilots","color","teamPilots","filter","p","team","pilotIndex","findIndex","id","teamHash","split","reduce","acc","ch","charCodeAt","hue","l","sectorIdx","totalSectors","pilotId","find","prev","existing","photoTeamUrl","photoDriverUrl","lapCount","lastSectorIdx","lapStartTime","lastLapTime","bestLapTime","pit","out","trail","lapSec","trailLength","slice","updatedAt","sorted","Object","values","sort","b","newOvertakes","currentPos","forEach","lastPos","undefined","overtaken","push","overtaker","timestamp","keep","setTimeout","battles","dist","leader","chaser","was","distance","position","globalBestLap","best","canvas","ctx","getContext","dpr","devicePixelRatio","resize","rect","parentElement","getBoundingClientRect","width","height","style","setTransform","addEventListener","wheel","preventDefault","delta","deltaY","max","min","mousedown","clientX","clientY","cursor","mousemove","dx","dy","mouseup","passive","lats","map","lons","minLat","maxLat","minLon","maxLon","centerLat","centerLon","padding","centerLatRad","dxList","dyList","maxDx","abs","maxDy","project","w","h","maxRange","scale","draw","_circuitData$params$w","_circuitData$params","_pts$","clearRect","fillStyle","fillRect","widthMeters","params","pts","trackPx","strokeStyle","lineWidth","lineCap","lineJoin","beginPath","lineTo","moveTo","closePath","stroke","s0","s1","ang","save","translate","rotate","restore","sortedDrivers","_d$trail","globalAlpha","t","ti","tp","isLeader","r","shadowColor","shadowBlur","arc","fill","pop","font","textAlign","fillText","requestAnimationFrame","removeEventListener","cancelAnimationFrame","formatLapTime","seconds","m","floor","toFixed","padStart","gapToLeader","driver","sectorDiff","est","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","stats","lengthMeters","ref","idx","fastest","isOvertaking","isBeingOvertaken","src","alt","background","justifyContent","marginTop","onClick","_c","$RefreshReg$"],"sources":["/home/ubuntu/racesense/racesense-frontend/src/pages/RaceLive.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport './App.css';\n\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n// Haversine (metri)\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 +\n            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n// Settore più vicino\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity;\n  let closestIdx = 0;\n  for (let i = 0; i < sectors.length; i++) {\n    const s = sectors[i];\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) { minDist = d; closestIdx = i; }\n  }\n  return closestIdx;\n}\n\n// Sigla stile F1: \"G. RUSSELL\"\nfunction f1Name(pilot) {\n  const first = (pilot.name || '').trim();\n  const last = (pilot.surname || '').trim().toUpperCase();\n  const initial = first ? `${first[0].toUpperCase()}. ` : '';\n  return `${initial}${last}`;\n}\n\nexport default function RaceLive({ raceConfig, onStopRace }) {\n  const { circuitData, totalLaps, assignments, pilots } = raceConfig;\n\n  const [driversState, setDriversState] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeBattles, setActiveBattles] = useState([]);\n  const [overtakingPairs, setOvertakingPairs] = useState([]);\n\n  const canvasRef = useRef(null);\n  const wsRef = useRef(null);\n  const animFrameRef = useRef(null);\n\n  // viewport\n  const zoomRef = useRef(1);\n  const panRef = useRef({ x: 0, y: 0 });\n  const isDraggingRef = useRef(false);\n  const lastMouseRef = useRef({ x: 0, y: 0 });\n\n  const lastPositionsRef = useRef({}); // per sorpassi\n\n  // ===== WebSocket =====\n  useEffect(() => {\n    const ws = new WebSocket(WS_URL);\n    wsRef.current = ws;\n\n    ws.onopen = () => console.log('[RaceLive] WS connesso');\n\n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.mac && data.lat && data.lon) {\n          const mac = String(data.mac);\n          if (!assignments[mac]) return; // ignora device non assegnati\n\n          const gps = {\n            mac,\n            lat: Number(data.lat),\n            lon: Number(data.lon),\n            speed: Number(data.speedKmh || 0),\n            ts: data.ts || Date.now()\n          };\n          handleGPSUpdate(gps);\n        }\n      } catch (e) {\n        console.error('[RaceLive] Parse WS:', e);\n      }\n    };\n\n    ws.onerror = (err) => console.error('[RaceLive] WS error', err);\n    ws.onclose = () => console.log('[RaceLive] WS chiuso');\n\n    return () => {\n      try { ws.close(); } catch {}\n    };\n  }, [assignments]);\n\n  // ===== Colore team (fallback se pilot.color manca) =====\n  const getTeamColor = useCallback((pilot, allPilots) => {\n    if (pilot.color) return pilot.color;\n    const teamPilots = allPilots.filter(p => p.team === pilot.team);\n    const pilotIndex = teamPilots.findIndex(p => p.id === pilot.id);\n    const teamHash = (pilot.team || 'TEAM').split('').reduce((acc, ch) => acc + ch.charCodeAt(0), 0);\n    const hue = (teamHash * 137.508) % 360;\n    if (teamPilots.length > 1) {\n      const l = 50 + (pilotIndex * 8);\n      const s = 75 - (pilotIndex * 5);\n      return `hsl(${hue}, ${s}%, ${l}%)`;\n    }\n    return `hsl(${hue}, 75%, 55%)`;\n  }, []);\n\n  // ===== Update GPS → stato pilota =====\n  const handleGPSUpdate = useCallback((gps) => {\n    if (!circuitData?.sectors) return;\n\n    const { mac, lat, lon, speed } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n\n    const pilotId = assignments[mac];\n    const pilot = pilots.find(p => String(p.id) === String(pilotId));\n    if (!pilot) return;\n\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        pilotId,\n        pilot,\n        name: f1Name(pilot),\n        team: pilot.team,\n        color: getTeamColor(pilot, pilots),\n        photoTeamUrl: pilot.photoTeamUrl,\n        photoDriverUrl: pilot.photoDriverUrl,\n        lat, lon, speed: 0,\n        sectorIdx,\n        lapCount: 0,\n        lastSectorIdx: sectorIdx,\n        lapStartTime: Date.now(),\n        lastLapTime: null,\n        bestLapTime: null,\n        pit: false,\n        out: false,\n        trail: []\n      };\n\n      // completamento giro (wrap settori)\n      let lapCount = existing.lapCount;\n      let lastLapTime = existing.lastLapTime;\n      let bestLapTime = existing.bestLapTime;\n      let lapStartTime = existing.lapStartTime;\n\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        const lapSec = (Date.now() - existing.lapStartTime) / 1000;\n        if (lapSec > 5) {\n          lapCount = existing.lapCount + 1;\n          lastLapTime = lapSec;\n          bestLapTime = !bestLapTime || lapSec < bestLapTime ? lapSec : bestLapTime;\n          lapStartTime = Date.now();\n        }\n      }\n\n      // trail dinamico\n      const trailLength = speed > 30 ? 40 : speed > 15 ? 25 : 15;\n      const trail = [...existing.trail, { lat, lon }].slice(-trailLength);\n\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat, lon, speed, sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount, lastLapTime, bestLapTime, lapStartTime,\n          trail,\n          updatedAt: Date.now()\n        }\n      };\n    });\n  }, [circuitData, assignments, pilots, getTeamColor]);\n\n  // ===== Classifica, sorpassi, duelli =====\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n\n    // sorpassi\n    const newOvertakes = [];\n    const currentPos = {};\n    sorted.forEach((d, i) => {\n      currentPos[d.mac] = i;\n      const lastPos = lastPositionsRef.current[d.mac];\n      if (lastPos !== undefined && i < lastPos) {\n        const overtaken = sorted[i + 1];\n        if (overtaken && lastPositionsRef.current[overtaken.mac] === i) {\n          newOvertakes.push({ overtaker: d.mac, overtaken: overtaken.mac, timestamp: Date.now() });\n        }\n      }\n    });\n\n    if (newOvertakes.length) {\n      setOvertakingPairs(prev => {\n        const now = Date.now();\n        const keep = prev.filter(p => now - p.timestamp < 1800);\n        return [...keep, ...newOvertakes];\n      });\n      setTimeout(() => { lastPositionsRef.current = currentPos; }, 1800);\n    } else {\n      const now = Date.now();\n      setOvertakingPairs(prev => prev.filter(p => now - p.timestamp < 1800));\n      if (overtakingPairs.length === 0) lastPositionsRef.current = currentPos;\n    }\n\n    // duelli (entro 30m, hysteresis 35m)\n    const battles = [];\n    for (let i = 0; i < sorted.length - 1; i++) {\n      const a = sorted[i], b = sorted[i + 1];\n      if (a.lapCount !== b.lapCount) continue;\n      const dist = haversine(a.lat, a.lon, b.lat, b.lon);\n      const prev = activeBattles.find(x =>\n        (x.leader.mac === a.mac && x.chaser.mac === b.mac) ||\n        (x.leader.mac === b.mac && x.chaser.mac === a.mac)\n      );\n      const was = !!prev;\n      if (dist < 30 || (was && dist < 35)) {\n        battles.push({ leader: a, chaser: b, distance: dist, position: i + 1 });\n      }\n    }\n\n    setActiveBattles(battles);\n    setLeaderboard(sorted);\n  }, [driversState]); // eslint-disable-line\n\n  // ===== Best lap globale (per icona viola) =====\n  const globalBestLap = useMemo(() => {\n    let best = null;\n    Object.values(driversState).forEach(d => {\n      if (d.bestLapTime && (best === null || d.bestLapTime < best)) best = d.bestLapTime;\n    });\n    return best;\n  }, [driversState]);\n\n  // ===== Canvas: tracciato minimal + larghezza reale =====\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n\n    const resize = () => {\n      const rect = canvas.parentElement.getBoundingClientRect();\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      canvas.style.width = `${rect.width}px`;\n      canvas.style.height = `${rect.height}px`;\n      ctx.setTransform(dpr, 0, 0, dpr, 0, 0); // reset + scale per DPR\n    };\n    resize();\n    window.addEventListener('resize', resize);\n\n    // zoom/pan\n    const wheel = (e) => {\n      e.preventDefault();\n      const delta = e.deltaY > 0 ? 0.9 : 1.1;\n      zoomRef.current = Math.max(0.5, Math.min(5, zoomRef.current * delta));\n    };\n    const mousedown = (e) => {\n      isDraggingRef.current = true;\n      lastMouseRef.current = { x: e.clientX, y: e.clientY };\n      canvas.style.cursor = 'grabbing';\n    };\n    const mousemove = (e) => {\n      if (!isDraggingRef.current) return;\n      const dx = e.clientX - lastMouseRef.current.x;\n      const dy = e.clientY - lastMouseRef.current.y;\n      panRef.current.x += dx;\n      panRef.current.y += dy;\n      lastMouseRef.current = { x: e.clientX, y: e.clientY };\n    };\n    const mouseup = () => {\n      isDraggingRef.current = false;\n      canvas.style.cursor = 'grab';\n    };\n    canvas.addEventListener('wheel', wheel, { passive: false });\n    canvas.addEventListener('mousedown', mousedown);\n    canvas.addEventListener('mousemove', mousemove);\n    canvas.addEventListener('mouseup', mouseup);\n    canvas.addEventListener('mouseleave', mouseup);\n    canvas.style.cursor = 'grab';\n\n    // bounds calcolo metri\n    const lats = circuitData.sectors.map(s => s.lat);\n    const lons = circuitData.sectors.map(s => s.lon);\n    const minLat = Math.min(...lats), maxLat = Math.max(...lats);\n    const minLon = Math.min(...lons), maxLon = Math.max(...lons);\n    const centerLat = (minLat + maxLat) / 2;\n    const centerLon = (minLon + maxLon) / 2;\n\n    const padding = 40;\n\n    // precalcolo range metri\n    const R = 6371000;\n    const centerLatRad = centerLat * Math.PI / 180;\n    const dxList = lons.map(l => (l - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad));\n    const dyList = lats.map(l => (l - centerLat) * Math.PI / 180 * R);\n    const maxDx = Math.max(...dxList.map(Math.abs));\n    const maxDy = Math.max(...dyList.map(Math.abs));\n\n    const project = (lat, lon) => {\n      const rect = canvas.getBoundingClientRect();\n      const w = rect.width - padding * 2;\n      const h = rect.height - padding * 2;\n      const maxRange = Math.max(maxDx, maxDy) * 1.1; // margine 10%\n      const scale = Math.min(w, h) / (maxRange * 2) * zoomRef.current; // metri → px\n\n      const dx = (lon - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad);\n      const dy = (lat - centerLat) * Math.PI / 180 * R;\n\n      const x = rect.width / 2 + dx * scale + panRef.current.x;\n      const y = rect.height / 2 - dy * scale + panRef.current.y;\n\n      return { x, y, scale }; // esporto scale per larghezza pista\n    };\n\n    const draw = () => {\n      const rect = canvas.getBoundingClientRect();\n      ctx.clearRect(0, 0, rect.width, rect.height);\n\n      // sfondo in palette app\n      ctx.fillStyle = '#0a0a0a';\n      ctx.fillRect(0, 0, rect.width, rect.height);\n\n      // larghezza pista dai parametri\n      const widthMeters = circuitData.params?.widthMeters ?? 6;\n\n      // percorso\n      const pts = circuitData.sectors.map(s => project(s.lat, s.lon));\n      const scale = pts[0]?.scale || 1;\n      const trackPx = Math.max(6, widthMeters * scale); // minimo visivo\n\n      // bordo soft\n      ctx.strokeStyle = 'rgba(255,255,255,0.10)';\n      ctx.lineWidth = trackPx + 4;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      pts.forEach((p, i) => (i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y)));\n      ctx.closePath();\n      ctx.stroke();\n\n      // pista (asfalto) minimal\n      ctx.strokeStyle = 'rgba(80, 84, 90, 0.95)';\n      ctx.lineWidth = trackPx;\n      ctx.beginPath();\n      pts.forEach((p, i) => (i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y)));\n      ctx.closePath();\n      ctx.stroke();\n\n      // linea di partenza (settore 0 → 1)\n      if (pts.length > 1) {\n        const s0 = pts[0], s1 = pts[1];\n        const ang = Math.atan2(s1.y - s0.y, s1.x - s0.x);\n        ctx.save();\n        ctx.translate(s0.x, s0.y);\n        ctx.rotate(ang);\n        ctx.strokeStyle = '#ffffff';\n        ctx.lineWidth = Math.max(2, trackPx * 0.12);\n        ctx.beginPath();\n        ctx.moveTo(0, -trackPx * 0.5);\n        ctx.lineTo(0, trackPx * 0.5);\n        ctx.stroke();\n        ctx.restore();\n      }\n\n      // scie + marker piloti\n      const sortedDrivers = Object.values(driversState).sort((a, b) => {\n        if (a.lapCount !== b.lapCount) return a.lapCount - b.lapCount;\n        return a.sectorIdx - b.sectorIdx;\n      });\n\n      sortedDrivers.forEach((d, i) => {\n        const p = project(d.lat, d.lon);\n\n        // trail\n        if (d.trail?.length > 1) {\n          ctx.strokeStyle = d.color;\n          ctx.globalAlpha = 0.6;\n          ctx.lineWidth = Math.max(2, trackPx * 0.12);\n          ctx.beginPath();\n          d.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti ? ctx.lineTo(tp.x, tp.y) : ctx.moveTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n          ctx.globalAlpha = 1;\n        }\n\n        // marker\n        const isLeader = i === sortedDrivers.length - 1;\n        const r = Math.max(5, trackPx * 0.18) + (isLeader ? 1 : 0);\n\n        // alone bianca per contrasto\n        ctx.shadowColor = 'rgba(0,0,0,0.5)';\n        ctx.shadowBlur = 4;\n\n        ctx.fillStyle = d.color;\n        ctx.beginPath();\n        ctx.arc(p.x, p.y, r, 0, Math.PI * 2);\n        ctx.fill();\n\n        ctx.shadowBlur = 0;\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // cognome vicino\n        const last = d.name.split(' ').pop();\n        ctx.fillStyle = '#fff';\n        ctx.font = 'bold 10px Roboto, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.fillText(String(last).toUpperCase(), p.x, p.y - (r + 8));\n      });\n\n      animFrameRef.current = requestAnimationFrame(draw);\n    };\n\n    draw();\n\n    return () => {\n      window.removeEventListener('resize', resize);\n      canvas.removeEventListener('wheel', wheel);\n      canvas.removeEventListener('mousedown', mousedown);\n      canvas.removeEventListener('mousemove', mousemove);\n      canvas.removeEventListener('mouseup', mouseup);\n      canvas.removeEventListener('mouseleave', mouseup);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData, driversState]);\n\n  // ===== Util =====\n  const formatLapTime = (seconds) => {\n    if (!seconds) return '—';\n    const m = Math.floor(seconds / 60);\n    const s = seconds - m * 60;\n    return `${m}:${s.toFixed(3).padStart(6, '0')}`;\n  };\n\n  const gapToLeader = (driver, leader) => {\n    if (!leader || !driver) return '';\n    if (driver.lapCount < leader.lapCount) {\n      return `+${leader.lapCount - driver.lapCount}L`;\n    }\n    const sectorDiff = leader.sectorIdx - driver.sectorIdx;\n    // stima: 10 settori ~ 1s (fallback)\n    const est = Math.max(0, sectorDiff / 10);\n    return `+${est.toFixed(3)}`.replace(/0+$/, '0'); // mantiene 3 dec\n  };\n\n  return (\n    <div className=\"main small-top\">\n      {/* Header semplice in palette */}\n      <div className=\"rs-live-topbar\">\n        <div className=\"rs-live-left\">\n          <span className=\"chip readonly\">LIVE</span>\n          <span className=\"chip readonly\" title=\"Giri totali\">{totalLaps} giri</span>\n        </div>\n        <div className=\"rs-live-right\">\n          <span className=\"chip readonly\">{circuitData?.name || 'Circuito'}</span>\n          {circuitData?.stats?.lengthMeters && (\n            <span className=\"chip readonly\">{circuitData.stats.lengthMeters.toFixed(0)} m</span>\n          )}\n          {circuitData?.params?.widthMeters && (\n            <span className=\"chip readonly\">{circuitData.params.widthMeters} m larghezza</span>\n          )}\n        </div>\n      </div>\n\n      <div className=\"rs-live-grid\">\n        {/* Canvas tracciato */}\n        <div className=\"track-card\">\n          <canvas ref={canvasRef} className=\"track-canvas\"></canvas>\n        </div>\n\n        {/* Leaderboard stile F1 */}\n        <div className=\"leaderboard-card\">\n          <div className=\"lb-header\">\n            <div className=\"lb-title\">CLASSIFICA</div>\n            <div className=\"lb-sub\">{leaderboard.length} piloti</div>\n          </div>\n\n          <div className=\"lb-list\">\n            {leaderboard.length === 0 ? (\n              <div className=\"no-drivers\">\n                <p>Nessun dato GPS ancora disponibile…</p>\n                <small className=\"muted\">Appena arrivano i pacchetti la classifica si popola</small>\n              </div>\n            ) : (\n              leaderboard.map((d, idx) => {\n                const leader = leaderboard[0];\n                const isLeader = idx === 0;\n                const fastest = d.bestLapTime && globalBestLap && d.bestLapTime === globalBestLap;\n\n                // sorpasso animazioni\n                const isOvertaking = overtakingPairs.find(p => p.overtaker === d.mac);\n                const isBeingOvertaken = overtakingPairs.find(p => p.overtaken === d.mac);\n\n                return (\n                  <div\n                    key={d.mac}\n                    className={\n                      `lb-row ${isLeader ? 'lb-leader' : ''} ${isOvertaking ? 'overtaking' : ''} ${isBeingOvertaken ? 'being-overtaken' : ''}`\n                    }\n                  >\n                    <div className=\"lb-pos\">{idx + 1}</div>\n\n                    <div className=\"lb-team\">\n                      {d.photoTeamUrl ? (\n                        <img\n                          src={`${API_BASE}${d.photoTeamUrl}`}\n                          alt={d.team}\n                          className=\"lb-team-logo\"\n                        />\n                      ) : (\n                        <div className=\"lb-team-color\" style={{ background: d.color }} />\n                      )}\n                    </div>\n\n                    <div className=\"lb-name\">{d.name}</div>\n\n                    <div className=\"lb-gap\">\n                      {isLeader ? 'LEADER' : gapToLeader(d, leader)}\n                    </div>\n\n                    <div className=\"lb-icons\">\n                      {fastest && <span className=\"lb-icon purple\" title=\"Miglior giro gara\">⏱</span>}\n                      {d.pit && <span className=\"lb-icon\" title=\"Pit\">🅿️</span>}\n                      {d.out && <span className=\"lb-icon\" title=\"Ritirato\">⛔</span>}\n                    </div>\n\n                    <div className=\"lb-lap\">\n                      <span className=\"muted\">Lap</span>&nbsp;{d.lapCount}/{totalLaps}\n                    </div>\n                  </div>\n                );\n              })\n            )}\n\n            {/* Indicatori duello (tra righe) */}\n            {activeBattles.map(b => (\n              <div key={`${b.leader.mac}-${b.chaser.mac}`} className=\"battle-indicator rs-battle\">\n                <div className=\"battle-line-left\"></div>\n                <div className=\"battle-content\">\n                  <div className=\"battle-label\">DUELLO</div>\n                  <div className=\"battle-gap\">{b.distance.toFixed(1)} m</div>\n                </div>\n                <div className=\"battle-line-right\"></div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Controls */}\n      <div className=\"race-controls\" style={{ justifyContent: 'center', marginTop: 12 }}>\n        <button className=\"btn-danger\" onClick={onStopRace}>Termina gara</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAChF,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,IAAI,UAAUC,MAAM,CAACC,QAAQ,CAACC,QAAQ,OAAO;AAC5F,MAAMC,MAAM,GAAGN,OAAO,CAACC,GAAG,CAACM,gBAAgB,IAAI,QAAQJ,MAAM,CAACC,QAAQ,CAACC,QAAQ,OAAO;;AAEtF;AACA,SAASG,SAASA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;EACzC,MAAMC,CAAC,GAAG,OAAO;EACjB,MAAMC,KAAK,GAAGC,CAAC,IAAIA,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAG,GAAG;EACpC,MAAMC,IAAI,GAAGJ,KAAK,CAACH,IAAI,GAAGF,IAAI,CAAC;EAC/B,MAAMU,IAAI,GAAGL,KAAK,CAACF,IAAI,GAAGF,IAAI,CAAC;EAC/B,MAAMU,CAAC,GAAGJ,IAAI,CAACK,GAAG,CAACH,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,GACvBF,IAAI,CAACM,GAAG,CAACR,KAAK,CAACL,IAAI,CAAC,CAAC,GAAGO,IAAI,CAACM,GAAG,CAACR,KAAK,CAACH,IAAI,CAAC,CAAC,GAAGK,IAAI,CAACK,GAAG,CAACF,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;EACjF,OAAON,CAAC,GAAG,CAAC,GAAGG,IAAI,CAACO,KAAK,CAACP,IAAI,CAACQ,IAAI,CAACJ,CAAC,CAAC,EAAEJ,IAAI,CAACQ,IAAI,CAAC,CAAC,GAAGJ,CAAC,CAAC,CAAC;AAC3D;;AAEA;AACA,SAASK,iBAAiBA,CAACC,GAAG,EAAEC,GAAG,EAAEC,OAAO,EAAE;EAC5C,IAAIC,OAAO,GAAGC,QAAQ;EACtB,IAAIC,UAAU,GAAG,CAAC;EAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,OAAO,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACvC,MAAME,CAAC,GAAGN,OAAO,CAACI,CAAC,CAAC;IACpB,MAAMjB,CAAC,GAAGP,SAAS,CAACkB,GAAG,EAAEC,GAAG,EAAEO,CAAC,CAACR,GAAG,EAAEQ,CAAC,CAACP,GAAG,CAAC;IAC3C,IAAIZ,CAAC,GAAGc,OAAO,EAAE;MAAEA,OAAO,GAAGd,CAAC;MAAEgB,UAAU,GAAGC,CAAC;IAAE;EAClD;EACA,OAAOD,UAAU;AACnB;;AAEA;AACA,SAASI,MAAMA,CAACC,KAAK,EAAE;EACrB,MAAMC,KAAK,GAAG,CAACD,KAAK,CAACE,IAAI,IAAI,EAAE,EAAEC,IAAI,CAAC,CAAC;EACvC,MAAMC,IAAI,GAAG,CAACJ,KAAK,CAACK,OAAO,IAAI,EAAE,EAAEF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;EACvD,MAAMC,OAAO,GAAGN,KAAK,GAAG,GAAGA,KAAK,CAAC,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC,IAAI,GAAG,EAAE;EAC1D,OAAO,GAAGC,OAAO,GAAGH,IAAI,EAAE;AAC5B;AAEA,eAAe,SAASI,QAAQA,CAAC;EAAEC,UAAU;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,kBAAA,EAAAC,oBAAA;EAC3D,MAAM;IAAEC,WAAW;IAAEC,SAAS;IAAEC,WAAW;IAAEC;EAAO,CAAC,GAAGR,UAAU;EAElE,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAG/D,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACgE,WAAW,EAAEC,cAAc,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkE,aAAa,EAAEC,gBAAgB,CAAC,GAAGnE,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoE,eAAe,EAAEC,kBAAkB,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMsE,SAAS,GAAGpE,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMqE,KAAK,GAAGrE,MAAM,CAAC,IAAI,CAAC;EAC1B,MAAMsE,YAAY,GAAGtE,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACA,MAAMuE,OAAO,GAAGvE,MAAM,CAAC,CAAC,CAAC;EACzB,MAAMwE,MAAM,GAAGxE,MAAM,CAAC;IAAEyE,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACrC,MAAMC,aAAa,GAAG3E,MAAM,CAAC,KAAK,CAAC;EACnC,MAAM4E,YAAY,GAAG5E,MAAM,CAAC;IAAEyE,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAE3C,MAAMG,gBAAgB,GAAG7E,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAErC;EACAD,SAAS,CAAC,MAAM;IACd,MAAM+E,EAAE,GAAG,IAAIC,SAAS,CAACnE,MAAM,CAAC;IAChCyD,KAAK,CAACW,OAAO,GAAGF,EAAE;IAElBA,EAAE,CAACG,MAAM,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IAEvDL,EAAE,CAACM,SAAS,GAAIC,KAAK,IAAK;MACxB,IAAI;QACF,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;QACnC,IAAIA,IAAI,CAACG,GAAG,IAAIH,IAAI,CAACtD,GAAG,IAAIsD,IAAI,CAACrD,GAAG,EAAE;UACpC,MAAMwD,GAAG,GAAGC,MAAM,CAACJ,IAAI,CAACG,GAAG,CAAC;UAC5B,IAAI,CAAC/B,WAAW,CAAC+B,GAAG,CAAC,EAAE,OAAO,CAAC;;UAE/B,MAAME,GAAG,GAAG;YACVF,GAAG;YACHzD,GAAG,EAAE4D,MAAM,CAACN,IAAI,CAACtD,GAAG,CAAC;YACrBC,GAAG,EAAE2D,MAAM,CAACN,IAAI,CAACrD,GAAG,CAAC;YACrB4D,KAAK,EAAED,MAAM,CAACN,IAAI,CAACQ,QAAQ,IAAI,CAAC,CAAC;YACjCC,EAAE,EAAET,IAAI,CAACS,EAAE,IAAIC,IAAI,CAACC,GAAG,CAAC;UAC1B,CAAC;UACDC,eAAe,CAACP,GAAG,CAAC;QACtB;MACF,CAAC,CAAC,OAAOQ,CAAC,EAAE;QACVjB,OAAO,CAACkB,KAAK,CAAC,sBAAsB,EAAED,CAAC,CAAC;MAC1C;IACF,CAAC;IAEDrB,EAAE,CAACuB,OAAO,GAAIC,GAAG,IAAKpB,OAAO,CAACkB,KAAK,CAAC,qBAAqB,EAAEE,GAAG,CAAC;IAC/DxB,EAAE,CAACyB,OAAO,GAAG,MAAMrB,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IAEtD,OAAO,MAAM;MACX,IAAI;QAAEL,EAAE,CAAC0B,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,MAAM,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,CAAC9C,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAM+C,YAAY,GAAGxG,WAAW,CAAC,CAACyC,KAAK,EAAEgE,SAAS,KAAK;IACrD,IAAIhE,KAAK,CAACiE,KAAK,EAAE,OAAOjE,KAAK,CAACiE,KAAK;IACnC,MAAMC,UAAU,GAAGF,SAAS,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKrE,KAAK,CAACqE,IAAI,CAAC;IAC/D,MAAMC,UAAU,GAAGJ,UAAU,CAACK,SAAS,CAACH,CAAC,IAAIA,CAAC,CAACI,EAAE,KAAKxE,KAAK,CAACwE,EAAE,CAAC;IAC/D,MAAMC,QAAQ,GAAG,CAACzE,KAAK,CAACqE,IAAI,IAAI,MAAM,EAAEK,KAAK,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,EAAE,KAAKD,GAAG,GAAGC,EAAE,CAACC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IAChG,MAAMC,GAAG,GAAIN,QAAQ,GAAG,OAAO,GAAI,GAAG;IACtC,IAAIP,UAAU,CAACrE,MAAM,GAAG,CAAC,EAAE;MACzB,MAAMmF,CAAC,GAAG,EAAE,GAAIV,UAAU,GAAG,CAAE;MAC/B,MAAMxE,CAAC,GAAG,EAAE,GAAIwE,UAAU,GAAG,CAAE;MAC/B,OAAO,OAAOS,GAAG,KAAKjF,CAAC,MAAMkF,CAAC,IAAI;IACpC;IACA,OAAO,OAAOD,GAAG,aAAa;EAChC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMvB,eAAe,GAAGjG,WAAW,CAAE0F,GAAG,IAAK;IAC3C,IAAI,EAACnC,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEtB,OAAO,GAAE;IAE3B,MAAM;MAAEuD,GAAG;MAAEzD,GAAG;MAAEC,GAAG;MAAE4D;IAAM,CAAC,GAAGF,GAAG;IACpC,MAAMgC,SAAS,GAAG5F,iBAAiB,CAACC,GAAG,EAAEC,GAAG,EAAEuB,WAAW,CAACtB,OAAO,CAAC;IAClE,MAAM0F,YAAY,GAAGpE,WAAW,CAACtB,OAAO,CAACK,MAAM;IAE/C,MAAMsF,OAAO,GAAGnE,WAAW,CAAC+B,GAAG,CAAC;IAChC,MAAM/C,KAAK,GAAGiB,MAAM,CAACmE,IAAI,CAAChB,CAAC,IAAIpB,MAAM,CAACoB,CAAC,CAACI,EAAE,CAAC,KAAKxB,MAAM,CAACmC,OAAO,CAAC,CAAC;IAChE,IAAI,CAACnF,KAAK,EAAE;IAEZmB,eAAe,CAACkE,IAAI,IAAI;MACtB,MAAMC,QAAQ,GAAGD,IAAI,CAACtC,GAAG,CAAC,IAAI;QAC5BA,GAAG;QACHoC,OAAO;QACPnF,KAAK;QACLE,IAAI,EAAEH,MAAM,CAACC,KAAK,CAAC;QACnBqE,IAAI,EAAErE,KAAK,CAACqE,IAAI;QAChBJ,KAAK,EAAEF,YAAY,CAAC/D,KAAK,EAAEiB,MAAM,CAAC;QAClCsE,YAAY,EAAEvF,KAAK,CAACuF,YAAY;QAChCC,cAAc,EAAExF,KAAK,CAACwF,cAAc;QACpClG,GAAG;QAAEC,GAAG;QAAE4D,KAAK,EAAE,CAAC;QAClB8B,SAAS;QACTQ,QAAQ,EAAE,CAAC;QACXC,aAAa,EAAET,SAAS;QACxBU,YAAY,EAAErC,IAAI,CAACC,GAAG,CAAC,CAAC;QACxBqC,WAAW,EAAE,IAAI;QACjBC,WAAW,EAAE,IAAI;QACjBC,GAAG,EAAE,KAAK;QACVC,GAAG,EAAE,KAAK;QACVC,KAAK,EAAE;MACT,CAAC;;MAED;MACA,IAAIP,QAAQ,GAAGH,QAAQ,CAACG,QAAQ;MAChC,IAAIG,WAAW,GAAGN,QAAQ,CAACM,WAAW;MACtC,IAAIC,WAAW,GAAGP,QAAQ,CAACO,WAAW;MACtC,IAAIF,YAAY,GAAGL,QAAQ,CAACK,YAAY;MAExC,IAAIL,QAAQ,CAACI,aAAa,GAAGR,YAAY,GAAG,EAAE,IAAID,SAAS,GAAG,EAAE,EAAE;QAChE,MAAMgB,MAAM,GAAG,CAAC3C,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG+B,QAAQ,CAACK,YAAY,IAAI,IAAI;QAC1D,IAAIM,MAAM,GAAG,CAAC,EAAE;UACdR,QAAQ,GAAGH,QAAQ,CAACG,QAAQ,GAAG,CAAC;UAChCG,WAAW,GAAGK,MAAM;UACpBJ,WAAW,GAAG,CAACA,WAAW,IAAII,MAAM,GAAGJ,WAAW,GAAGI,MAAM,GAAGJ,WAAW;UACzEF,YAAY,GAAGrC,IAAI,CAACC,GAAG,CAAC,CAAC;QAC3B;MACF;;MAEA;MACA,MAAM2C,WAAW,GAAG/C,KAAK,GAAG,EAAE,GAAG,EAAE,GAAGA,KAAK,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;MAC1D,MAAM6C,KAAK,GAAG,CAAC,GAAGV,QAAQ,CAACU,KAAK,EAAE;QAAE1G,GAAG;QAAEC;MAAI,CAAC,CAAC,CAAC4G,KAAK,CAAC,CAACD,WAAW,CAAC;MAEnE,OAAO;QACL,GAAGb,IAAI;QACP,CAACtC,GAAG,GAAG;UACL,GAAGuC,QAAQ;UACXhG,GAAG;UAAEC,GAAG;UAAE4D,KAAK;UAAE8B,SAAS;UAC1BS,aAAa,EAAET,SAAS;UACxBQ,QAAQ;UAAEG,WAAW;UAAEC,WAAW;UAAEF,YAAY;UAChDK,KAAK;UACLI,SAAS,EAAE9C,IAAI,CAACC,GAAG,CAAC;QACtB;MACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,CAACzC,WAAW,EAAEE,WAAW,EAAEC,MAAM,EAAE8C,YAAY,CAAC,CAAC;;EAEpD;EACA1G,SAAS,CAAC,MAAM;IACd,MAAMgJ,MAAM,GAAGC,MAAM,CAACC,MAAM,CAACrF,YAAY,CAAC,CAACsF,IAAI,CAAC,CAACxH,CAAC,EAAEyH,CAAC,KAAK;MACxD,IAAIzH,CAAC,CAACyG,QAAQ,KAAKgB,CAAC,CAAChB,QAAQ,EAAE,OAAOgB,CAAC,CAAChB,QAAQ,GAAGzG,CAAC,CAACyG,QAAQ;MAC7D,OAAOgB,CAAC,CAACxB,SAAS,GAAGjG,CAAC,CAACiG,SAAS;IAClC,CAAC,CAAC;;IAEF;IACA,MAAMyB,YAAY,GAAG,EAAE;IACvB,MAAMC,UAAU,GAAG,CAAC,CAAC;IACrBN,MAAM,CAACO,OAAO,CAAC,CAACjI,CAAC,EAAEiB,CAAC,KAAK;MACvB+G,UAAU,CAAChI,CAAC,CAACoE,GAAG,CAAC,GAAGnD,CAAC;MACrB,MAAMiH,OAAO,GAAG1E,gBAAgB,CAACG,OAAO,CAAC3D,CAAC,CAACoE,GAAG,CAAC;MAC/C,IAAI8D,OAAO,KAAKC,SAAS,IAAIlH,CAAC,GAAGiH,OAAO,EAAE;QACxC,MAAME,SAAS,GAAGV,MAAM,CAACzG,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAImH,SAAS,IAAI5E,gBAAgB,CAACG,OAAO,CAACyE,SAAS,CAAChE,GAAG,CAAC,KAAKnD,CAAC,EAAE;UAC9D8G,YAAY,CAACM,IAAI,CAAC;YAAEC,SAAS,EAAEtI,CAAC,CAACoE,GAAG;YAAEgE,SAAS,EAAEA,SAAS,CAAChE,GAAG;YAAEmE,SAAS,EAAE5D,IAAI,CAACC,GAAG,CAAC;UAAE,CAAC,CAAC;QAC1F;MACF;IACF,CAAC,CAAC;IAEF,IAAImD,YAAY,CAAC7G,MAAM,EAAE;MACvB4B,kBAAkB,CAAC4D,IAAI,IAAI;QACzB,MAAM9B,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;QACtB,MAAM4D,IAAI,GAAG9B,IAAI,CAAClB,MAAM,CAACC,CAAC,IAAIb,GAAG,GAAGa,CAAC,CAAC8C,SAAS,GAAG,IAAI,CAAC;QACvD,OAAO,CAAC,GAAGC,IAAI,EAAE,GAAGT,YAAY,CAAC;MACnC,CAAC,CAAC;MACFU,UAAU,CAAC,MAAM;QAAEjF,gBAAgB,CAACG,OAAO,GAAGqE,UAAU;MAAE,CAAC,EAAE,IAAI,CAAC;IACpE,CAAC,MAAM;MACL,MAAMpD,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MACtB9B,kBAAkB,CAAC4D,IAAI,IAAIA,IAAI,CAAClB,MAAM,CAACC,CAAC,IAAIb,GAAG,GAAGa,CAAC,CAAC8C,SAAS,GAAG,IAAI,CAAC,CAAC;MACtE,IAAI1F,eAAe,CAAC3B,MAAM,KAAK,CAAC,EAAEsC,gBAAgB,CAACG,OAAO,GAAGqE,UAAU;IACzE;;IAEA;IACA,MAAMU,OAAO,GAAG,EAAE;IAClB,KAAK,IAAIzH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyG,MAAM,CAACxG,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;MAC1C,MAAMZ,CAAC,GAAGqH,MAAM,CAACzG,CAAC,CAAC;QAAE6G,CAAC,GAAGJ,MAAM,CAACzG,CAAC,GAAG,CAAC,CAAC;MACtC,IAAIZ,CAAC,CAACyG,QAAQ,KAAKgB,CAAC,CAAChB,QAAQ,EAAE;MAC/B,MAAM6B,IAAI,GAAGlJ,SAAS,CAACY,CAAC,CAACM,GAAG,EAAEN,CAAC,CAACO,GAAG,EAAEkH,CAAC,CAACnH,GAAG,EAAEmH,CAAC,CAAClH,GAAG,CAAC;MAClD,MAAM8F,IAAI,GAAG/D,aAAa,CAAC8D,IAAI,CAACrD,CAAC,IAC9BA,CAAC,CAACwF,MAAM,CAACxE,GAAG,KAAK/D,CAAC,CAAC+D,GAAG,IAAIhB,CAAC,CAACyF,MAAM,CAACzE,GAAG,KAAK0D,CAAC,CAAC1D,GAAG,IAChDhB,CAAC,CAACwF,MAAM,CAACxE,GAAG,KAAK0D,CAAC,CAAC1D,GAAG,IAAIhB,CAAC,CAACyF,MAAM,CAACzE,GAAG,KAAK/D,CAAC,CAAC+D,GAChD,CAAC;MACD,MAAM0E,GAAG,GAAG,CAAC,CAACpC,IAAI;MAClB,IAAIiC,IAAI,GAAG,EAAE,IAAKG,GAAG,IAAIH,IAAI,GAAG,EAAG,EAAE;QACnCD,OAAO,CAACL,IAAI,CAAC;UAAEO,MAAM,EAAEvI,CAAC;UAAEwI,MAAM,EAAEf,CAAC;UAAEiB,QAAQ,EAAEJ,IAAI;UAAEK,QAAQ,EAAE/H,CAAC,GAAG;QAAE,CAAC,CAAC;MACzE;IACF;IAEA2B,gBAAgB,CAAC8F,OAAO,CAAC;IACzBhG,cAAc,CAACgF,MAAM,CAAC;EACxB,CAAC,EAAE,CAACnF,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEpB;EACA,MAAM0G,aAAa,GAAGpK,OAAO,CAAC,MAAM;IAClC,IAAIqK,IAAI,GAAG,IAAI;IACfvB,MAAM,CAACC,MAAM,CAACrF,YAAY,CAAC,CAAC0F,OAAO,CAACjI,CAAC,IAAI;MACvC,IAAIA,CAAC,CAACkH,WAAW,KAAKgC,IAAI,KAAK,IAAI,IAAIlJ,CAAC,CAACkH,WAAW,GAAGgC,IAAI,CAAC,EAAEA,IAAI,GAAGlJ,CAAC,CAACkH,WAAW;IACpF,CAAC,CAAC;IACF,OAAOgC,IAAI;EACb,CAAC,EAAE,CAAC3G,YAAY,CAAC,CAAC;;EAElB;EACA7D,SAAS,CAAC,MAAM;IACd,IAAI,CAACyD,WAAW,IAAI,CAACY,SAAS,CAACY,OAAO,EAAE;IAExC,MAAMwF,MAAM,GAAGpG,SAAS,CAACY,OAAO;IAChC,MAAMyF,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMC,GAAG,GAAGlK,MAAM,CAACmK,gBAAgB,IAAI,CAAC;IAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;MACnB,MAAMC,IAAI,GAAGN,MAAM,CAACO,aAAa,CAACC,qBAAqB,CAAC,CAAC;MACzDR,MAAM,CAACS,KAAK,GAAGH,IAAI,CAACG,KAAK,GAAGN,GAAG;MAC/BH,MAAM,CAACU,MAAM,GAAGJ,IAAI,CAACI,MAAM,GAAGP,GAAG;MACjCH,MAAM,CAACW,KAAK,CAACF,KAAK,GAAG,GAAGH,IAAI,CAACG,KAAK,IAAI;MACtCT,MAAM,CAACW,KAAK,CAACD,MAAM,GAAG,GAAGJ,IAAI,CAACI,MAAM,IAAI;MACxCT,GAAG,CAACW,YAAY,CAACT,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEA,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC;IACDE,MAAM,CAAC,CAAC;IACRpK,MAAM,CAAC4K,gBAAgB,CAAC,QAAQ,EAAER,MAAM,CAAC;;IAEzC;IACA,MAAMS,KAAK,GAAInF,CAAC,IAAK;MACnBA,CAAC,CAACoF,cAAc,CAAC,CAAC;MAClB,MAAMC,KAAK,GAAGrF,CAAC,CAACsF,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;MACtClH,OAAO,CAACS,OAAO,GAAG1D,IAAI,CAACoK,GAAG,CAAC,GAAG,EAAEpK,IAAI,CAACqK,GAAG,CAAC,CAAC,EAAEpH,OAAO,CAACS,OAAO,GAAGwG,KAAK,CAAC,CAAC;IACvE,CAAC;IACD,MAAMI,SAAS,GAAIzF,CAAC,IAAK;MACvBxB,aAAa,CAACK,OAAO,GAAG,IAAI;MAC5BJ,YAAY,CAACI,OAAO,GAAG;QAAEP,CAAC,EAAE0B,CAAC,CAAC0F,OAAO;QAAEnH,CAAC,EAAEyB,CAAC,CAAC2F;MAAQ,CAAC;MACrDtB,MAAM,CAACW,KAAK,CAACY,MAAM,GAAG,UAAU;IAClC,CAAC;IACD,MAAMC,SAAS,GAAI7F,CAAC,IAAK;MACvB,IAAI,CAACxB,aAAa,CAACK,OAAO,EAAE;MAC5B,MAAMiH,EAAE,GAAG9F,CAAC,CAAC0F,OAAO,GAAGjH,YAAY,CAACI,OAAO,CAACP,CAAC;MAC7C,MAAMyH,EAAE,GAAG/F,CAAC,CAAC2F,OAAO,GAAGlH,YAAY,CAACI,OAAO,CAACN,CAAC;MAC7CF,MAAM,CAACQ,OAAO,CAACP,CAAC,IAAIwH,EAAE;MACtBzH,MAAM,CAACQ,OAAO,CAACN,CAAC,IAAIwH,EAAE;MACtBtH,YAAY,CAACI,OAAO,GAAG;QAAEP,CAAC,EAAE0B,CAAC,CAAC0F,OAAO;QAAEnH,CAAC,EAAEyB,CAAC,CAAC2F;MAAQ,CAAC;IACvD,CAAC;IACD,MAAMK,OAAO,GAAGA,CAAA,KAAM;MACpBxH,aAAa,CAACK,OAAO,GAAG,KAAK;MAC7BwF,MAAM,CAACW,KAAK,CAACY,MAAM,GAAG,MAAM;IAC9B,CAAC;IACDvB,MAAM,CAACa,gBAAgB,CAAC,OAAO,EAAEC,KAAK,EAAE;MAAEc,OAAO,EAAE;IAAM,CAAC,CAAC;IAC3D5B,MAAM,CAACa,gBAAgB,CAAC,WAAW,EAAEO,SAAS,CAAC;IAC/CpB,MAAM,CAACa,gBAAgB,CAAC,WAAW,EAAEW,SAAS,CAAC;IAC/CxB,MAAM,CAACa,gBAAgB,CAAC,SAAS,EAAEc,OAAO,CAAC;IAC3C3B,MAAM,CAACa,gBAAgB,CAAC,YAAY,EAAEc,OAAO,CAAC;IAC9C3B,MAAM,CAACW,KAAK,CAACY,MAAM,GAAG,MAAM;;IAE5B;IACA,MAAMM,IAAI,GAAG7I,WAAW,CAACtB,OAAO,CAACoK,GAAG,CAAC9J,CAAC,IAAIA,CAAC,CAACR,GAAG,CAAC;IAChD,MAAMuK,IAAI,GAAG/I,WAAW,CAACtB,OAAO,CAACoK,GAAG,CAAC9J,CAAC,IAAIA,CAAC,CAACP,GAAG,CAAC;IAChD,MAAMuK,MAAM,GAAGlL,IAAI,CAACqK,GAAG,CAAC,GAAGU,IAAI,CAAC;MAAEI,MAAM,GAAGnL,IAAI,CAACoK,GAAG,CAAC,GAAGW,IAAI,CAAC;IAC5D,MAAMK,MAAM,GAAGpL,IAAI,CAACqK,GAAG,CAAC,GAAGY,IAAI,CAAC;MAAEI,MAAM,GAAGrL,IAAI,CAACoK,GAAG,CAAC,GAAGa,IAAI,CAAC;IAC5D,MAAMK,SAAS,GAAG,CAACJ,MAAM,GAAGC,MAAM,IAAI,CAAC;IACvC,MAAMI,SAAS,GAAG,CAACH,MAAM,GAAGC,MAAM,IAAI,CAAC;IAEvC,MAAMG,OAAO,GAAG,EAAE;;IAElB;IACA,MAAM3L,CAAC,GAAG,OAAO;IACjB,MAAM4L,YAAY,GAAGH,SAAS,GAAGtL,IAAI,CAACC,EAAE,GAAG,GAAG;IAC9C,MAAMyL,MAAM,GAAGT,IAAI,CAACD,GAAG,CAAC5E,CAAC,IAAI,CAACA,CAAC,GAAGmF,SAAS,IAAIvL,IAAI,CAACC,EAAE,GAAG,GAAG,GAAGJ,CAAC,GAAGG,IAAI,CAACM,GAAG,CAACmL,YAAY,CAAC,CAAC;IAC1F,MAAME,MAAM,GAAGZ,IAAI,CAACC,GAAG,CAAC5E,CAAC,IAAI,CAACA,CAAC,GAAGkF,SAAS,IAAItL,IAAI,CAACC,EAAE,GAAG,GAAG,GAAGJ,CAAC,CAAC;IACjE,MAAM+L,KAAK,GAAG5L,IAAI,CAACoK,GAAG,CAAC,GAAGsB,MAAM,CAACV,GAAG,CAAChL,IAAI,CAAC6L,GAAG,CAAC,CAAC;IAC/C,MAAMC,KAAK,GAAG9L,IAAI,CAACoK,GAAG,CAAC,GAAGuB,MAAM,CAACX,GAAG,CAAChL,IAAI,CAAC6L,GAAG,CAAC,CAAC;IAE/C,MAAME,OAAO,GAAGA,CAACrL,GAAG,EAAEC,GAAG,KAAK;MAC5B,MAAM6I,IAAI,GAAGN,MAAM,CAACQ,qBAAqB,CAAC,CAAC;MAC3C,MAAMsC,CAAC,GAAGxC,IAAI,CAACG,KAAK,GAAG6B,OAAO,GAAG,CAAC;MAClC,MAAMS,CAAC,GAAGzC,IAAI,CAACI,MAAM,GAAG4B,OAAO,GAAG,CAAC;MACnC,MAAMU,QAAQ,GAAGlM,IAAI,CAACoK,GAAG,CAACwB,KAAK,EAAEE,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;MAC/C,MAAMK,KAAK,GAAGnM,IAAI,CAACqK,GAAG,CAAC2B,CAAC,EAAEC,CAAC,CAAC,IAAIC,QAAQ,GAAG,CAAC,CAAC,GAAGjJ,OAAO,CAACS,OAAO,CAAC,CAAC;;MAEjE,MAAMiH,EAAE,GAAG,CAAChK,GAAG,GAAG4K,SAAS,IAAIvL,IAAI,CAACC,EAAE,GAAG,GAAG,GAAGJ,CAAC,GAAGG,IAAI,CAACM,GAAG,CAACmL,YAAY,CAAC;MACzE,MAAMb,EAAE,GAAG,CAAClK,GAAG,GAAG4K,SAAS,IAAItL,IAAI,CAACC,EAAE,GAAG,GAAG,GAAGJ,CAAC;MAEhD,MAAMsD,CAAC,GAAGqG,IAAI,CAACG,KAAK,GAAG,CAAC,GAAGgB,EAAE,GAAGwB,KAAK,GAAGjJ,MAAM,CAACQ,OAAO,CAACP,CAAC;MACxD,MAAMC,CAAC,GAAGoG,IAAI,CAACI,MAAM,GAAG,CAAC,GAAGgB,EAAE,GAAGuB,KAAK,GAAGjJ,MAAM,CAACQ,OAAO,CAACN,CAAC;MAEzD,OAAO;QAAED,CAAC;QAAEC,CAAC;QAAE+I;MAAM,CAAC,CAAC,CAAC;IAC1B,CAAC;IAED,MAAMC,IAAI,GAAGA,CAAA,KAAM;MAAA,IAAAC,qBAAA,EAAAC,mBAAA,EAAAC,KAAA;MACjB,MAAM/C,IAAI,GAAGN,MAAM,CAACQ,qBAAqB,CAAC,CAAC;MAC3CP,GAAG,CAACqD,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEhD,IAAI,CAACG,KAAK,EAAEH,IAAI,CAACI,MAAM,CAAC;;MAE5C;MACAT,GAAG,CAACsD,SAAS,GAAG,SAAS;MACzBtD,GAAG,CAACuD,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAElD,IAAI,CAACG,KAAK,EAAEH,IAAI,CAACI,MAAM,CAAC;;MAE3C;MACA,MAAM+C,WAAW,IAAAN,qBAAA,IAAAC,mBAAA,GAAGpK,WAAW,CAAC0K,MAAM,cAAAN,mBAAA,uBAAlBA,mBAAA,CAAoBK,WAAW,cAAAN,qBAAA,cAAAA,qBAAA,GAAI,CAAC;;MAExD;MACA,MAAMQ,GAAG,GAAG3K,WAAW,CAACtB,OAAO,CAACoK,GAAG,CAAC9J,CAAC,IAAI6K,OAAO,CAAC7K,CAAC,CAACR,GAAG,EAAEQ,CAAC,CAACP,GAAG,CAAC,CAAC;MAC/D,MAAMwL,KAAK,GAAG,EAAAI,KAAA,GAAAM,GAAG,CAAC,CAAC,CAAC,cAAAN,KAAA,uBAANA,KAAA,CAAQJ,KAAK,KAAI,CAAC;MAChC,MAAMW,OAAO,GAAG9M,IAAI,CAACoK,GAAG,CAAC,CAAC,EAAEuC,WAAW,GAAGR,KAAK,CAAC,CAAC,CAAC;;MAElD;MACAhD,GAAG,CAAC4D,WAAW,GAAG,wBAAwB;MAC1C5D,GAAG,CAAC6D,SAAS,GAAGF,OAAO,GAAG,CAAC;MAC3B3D,GAAG,CAAC8D,OAAO,GAAG,OAAO;MACrB9D,GAAG,CAAC+D,QAAQ,GAAG,OAAO;MACtB/D,GAAG,CAACgE,SAAS,CAAC,CAAC;MACfN,GAAG,CAAC7E,OAAO,CAAC,CAACxC,CAAC,EAAExE,CAAC,KAAMA,CAAC,GAAGmI,GAAG,CAACiE,MAAM,CAAC5H,CAAC,CAACrC,CAAC,EAAEqC,CAAC,CAACpC,CAAC,CAAC,GAAG+F,GAAG,CAACkE,MAAM,CAAC7H,CAAC,CAACrC,CAAC,EAAEqC,CAAC,CAACpC,CAAC,CAAE,CAAC;MACxE+F,GAAG,CAACmE,SAAS,CAAC,CAAC;MACfnE,GAAG,CAACoE,MAAM,CAAC,CAAC;;MAEZ;MACApE,GAAG,CAAC4D,WAAW,GAAG,wBAAwB;MAC1C5D,GAAG,CAAC6D,SAAS,GAAGF,OAAO;MACvB3D,GAAG,CAACgE,SAAS,CAAC,CAAC;MACfN,GAAG,CAAC7E,OAAO,CAAC,CAACxC,CAAC,EAAExE,CAAC,KAAMA,CAAC,GAAGmI,GAAG,CAACiE,MAAM,CAAC5H,CAAC,CAACrC,CAAC,EAAEqC,CAAC,CAACpC,CAAC,CAAC,GAAG+F,GAAG,CAACkE,MAAM,CAAC7H,CAAC,CAACrC,CAAC,EAAEqC,CAAC,CAACpC,CAAC,CAAE,CAAC;MACxE+F,GAAG,CAACmE,SAAS,CAAC,CAAC;MACfnE,GAAG,CAACoE,MAAM,CAAC,CAAC;;MAEZ;MACA,IAAIV,GAAG,CAAC5L,MAAM,GAAG,CAAC,EAAE;QAClB,MAAMuM,EAAE,GAAGX,GAAG,CAAC,CAAC,CAAC;UAAEY,EAAE,GAAGZ,GAAG,CAAC,CAAC,CAAC;QAC9B,MAAMa,GAAG,GAAG1N,IAAI,CAACO,KAAK,CAACkN,EAAE,CAACrK,CAAC,GAAGoK,EAAE,CAACpK,CAAC,EAAEqK,EAAE,CAACtK,CAAC,GAAGqK,EAAE,CAACrK,CAAC,CAAC;QAChDgG,GAAG,CAACwE,IAAI,CAAC,CAAC;QACVxE,GAAG,CAACyE,SAAS,CAACJ,EAAE,CAACrK,CAAC,EAAEqK,EAAE,CAACpK,CAAC,CAAC;QACzB+F,GAAG,CAAC0E,MAAM,CAACH,GAAG,CAAC;QACfvE,GAAG,CAAC4D,WAAW,GAAG,SAAS;QAC3B5D,GAAG,CAAC6D,SAAS,GAAGhN,IAAI,CAACoK,GAAG,CAAC,CAAC,EAAE0C,OAAO,GAAG,IAAI,CAAC;QAC3C3D,GAAG,CAACgE,SAAS,CAAC,CAAC;QACfhE,GAAG,CAACkE,MAAM,CAAC,CAAC,EAAE,CAACP,OAAO,GAAG,GAAG,CAAC;QAC7B3D,GAAG,CAACiE,MAAM,CAAC,CAAC,EAAEN,OAAO,GAAG,GAAG,CAAC;QAC5B3D,GAAG,CAACoE,MAAM,CAAC,CAAC;QACZpE,GAAG,CAAC2E,OAAO,CAAC,CAAC;MACf;;MAEA;MACA,MAAMC,aAAa,GAAGrG,MAAM,CAACC,MAAM,CAACrF,YAAY,CAAC,CAACsF,IAAI,CAAC,CAACxH,CAAC,EAAEyH,CAAC,KAAK;QAC/D,IAAIzH,CAAC,CAACyG,QAAQ,KAAKgB,CAAC,CAAChB,QAAQ,EAAE,OAAOzG,CAAC,CAACyG,QAAQ,GAAGgB,CAAC,CAAChB,QAAQ;QAC7D,OAAOzG,CAAC,CAACiG,SAAS,GAAGwB,CAAC,CAACxB,SAAS;MAClC,CAAC,CAAC;MAEF0H,aAAa,CAAC/F,OAAO,CAAC,CAACjI,CAAC,EAAEiB,CAAC,KAAK;QAAA,IAAAgN,QAAA;QAC9B,MAAMxI,CAAC,GAAGuG,OAAO,CAAChM,CAAC,CAACW,GAAG,EAAEX,CAAC,CAACY,GAAG,CAAC;;QAE/B;QACA,IAAI,EAAAqN,QAAA,GAAAjO,CAAC,CAACqH,KAAK,cAAA4G,QAAA,uBAAPA,QAAA,CAAS/M,MAAM,IAAG,CAAC,EAAE;UACvBkI,GAAG,CAAC4D,WAAW,GAAGhN,CAAC,CAACsF,KAAK;UACzB8D,GAAG,CAAC8E,WAAW,GAAG,GAAG;UACrB9E,GAAG,CAAC6D,SAAS,GAAGhN,IAAI,CAACoK,GAAG,CAAC,CAAC,EAAE0C,OAAO,GAAG,IAAI,CAAC;UAC3C3D,GAAG,CAACgE,SAAS,CAAC,CAAC;UACfpN,CAAC,CAACqH,KAAK,CAACY,OAAO,CAAC,CAACkG,CAAC,EAAEC,EAAE,KAAK;YACzB,MAAMC,EAAE,GAAGrC,OAAO,CAACmC,CAAC,CAACxN,GAAG,EAAEwN,CAAC,CAACvN,GAAG,CAAC;YAChCwN,EAAE,GAAGhF,GAAG,CAACiE,MAAM,CAACgB,EAAE,CAACjL,CAAC,EAAEiL,EAAE,CAAChL,CAAC,CAAC,GAAG+F,GAAG,CAACkE,MAAM,CAACe,EAAE,CAACjL,CAAC,EAAEiL,EAAE,CAAChL,CAAC,CAAC;UACtD,CAAC,CAAC;UACF+F,GAAG,CAACoE,MAAM,CAAC,CAAC;UACZpE,GAAG,CAAC8E,WAAW,GAAG,CAAC;QACrB;;QAEA;QACA,MAAMI,QAAQ,GAAGrN,CAAC,KAAK+M,aAAa,CAAC9M,MAAM,GAAG,CAAC;QAC/C,MAAMqN,CAAC,GAAGtO,IAAI,CAACoK,GAAG,CAAC,CAAC,EAAE0C,OAAO,GAAG,IAAI,CAAC,IAAIuB,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;;QAE1D;QACAlF,GAAG,CAACoF,WAAW,GAAG,iBAAiB;QACnCpF,GAAG,CAACqF,UAAU,GAAG,CAAC;QAElBrF,GAAG,CAACsD,SAAS,GAAG1M,CAAC,CAACsF,KAAK;QACvB8D,GAAG,CAACgE,SAAS,CAAC,CAAC;QACfhE,GAAG,CAACsF,GAAG,CAACjJ,CAAC,CAACrC,CAAC,EAAEqC,CAAC,CAACpC,CAAC,EAAEkL,CAAC,EAAE,CAAC,EAAEtO,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;QACpCkJ,GAAG,CAACuF,IAAI,CAAC,CAAC;QAEVvF,GAAG,CAACqF,UAAU,GAAG,CAAC;QAClBrF,GAAG,CAAC4D,WAAW,GAAG,MAAM;QACxB5D,GAAG,CAAC6D,SAAS,GAAG,CAAC;QACjB7D,GAAG,CAACoE,MAAM,CAAC,CAAC;;QAEZ;QACA,MAAM/L,IAAI,GAAGzB,CAAC,CAACuB,IAAI,CAACwE,KAAK,CAAC,GAAG,CAAC,CAAC6I,GAAG,CAAC,CAAC;QACpCxF,GAAG,CAACsD,SAAS,GAAG,MAAM;QACtBtD,GAAG,CAACyF,IAAI,GAAG,8BAA8B;QACzCzF,GAAG,CAAC0F,SAAS,GAAG,QAAQ;QACxB1F,GAAG,CAAC2F,QAAQ,CAAC1K,MAAM,CAAC5C,IAAI,CAAC,CAACE,WAAW,CAAC,CAAC,EAAE8D,CAAC,CAACrC,CAAC,EAAEqC,CAAC,CAACpC,CAAC,IAAIkL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC9D,CAAC,CAAC;MAEFtL,YAAY,CAACU,OAAO,GAAGqL,qBAAqB,CAAC3C,IAAI,CAAC;IACpD,CAAC;IAEDA,IAAI,CAAC,CAAC;IAEN,OAAO,MAAM;MACXjN,MAAM,CAAC6P,mBAAmB,CAAC,QAAQ,EAAEzF,MAAM,CAAC;MAC5CL,MAAM,CAAC8F,mBAAmB,CAAC,OAAO,EAAEhF,KAAK,CAAC;MAC1Cd,MAAM,CAAC8F,mBAAmB,CAAC,WAAW,EAAE1E,SAAS,CAAC;MAClDpB,MAAM,CAAC8F,mBAAmB,CAAC,WAAW,EAAEtE,SAAS,CAAC;MAClDxB,MAAM,CAAC8F,mBAAmB,CAAC,SAAS,EAAEnE,OAAO,CAAC;MAC9C3B,MAAM,CAAC8F,mBAAmB,CAAC,YAAY,EAAEnE,OAAO,CAAC;MACjD,IAAI7H,YAAY,CAACU,OAAO,EAAEuL,oBAAoB,CAACjM,YAAY,CAACU,OAAO,CAAC;IACtE,CAAC;EACH,CAAC,EAAE,CAACxB,WAAW,EAAEI,YAAY,CAAC,CAAC;;EAE/B;EACA,MAAM4M,aAAa,GAAIC,OAAO,IAAK;IACjC,IAAI,CAACA,OAAO,EAAE,OAAO,GAAG;IACxB,MAAMC,CAAC,GAAGpP,IAAI,CAACqP,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;IAClC,MAAMjO,CAAC,GAAGiO,OAAO,GAAGC,CAAC,GAAG,EAAE;IAC1B,OAAO,GAAGA,CAAC,IAAIlO,CAAC,CAACoO,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EAChD,CAAC;EAED,MAAMC,WAAW,GAAGA,CAACC,MAAM,EAAE9G,MAAM,KAAK;IACtC,IAAI,CAACA,MAAM,IAAI,CAAC8G,MAAM,EAAE,OAAO,EAAE;IACjC,IAAIA,MAAM,CAAC5I,QAAQ,GAAG8B,MAAM,CAAC9B,QAAQ,EAAE;MACrC,OAAO,IAAI8B,MAAM,CAAC9B,QAAQ,GAAG4I,MAAM,CAAC5I,QAAQ,GAAG;IACjD;IACA,MAAM6I,UAAU,GAAG/G,MAAM,CAACtC,SAAS,GAAGoJ,MAAM,CAACpJ,SAAS;IACtD;IACA,MAAMsJ,GAAG,GAAG3P,IAAI,CAACoK,GAAG,CAAC,CAAC,EAAEsF,UAAU,GAAG,EAAE,CAAC;IACxC,OAAO,IAAIC,GAAG,CAACL,OAAO,CAAC,CAAC,CAAC,EAAE,CAACM,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,oBACE9Q,OAAA;IAAK+Q,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAE7BhR,OAAA;MAAK+Q,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BhR,OAAA;QAAK+Q,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BhR,OAAA;UAAM+Q,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC3CpR,OAAA;UAAM+Q,SAAS,EAAC,eAAe;UAACM,KAAK,EAAC,aAAa;UAAAL,QAAA,GAAE3N,SAAS,EAAC,OAAK;QAAA;UAAA4N,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,eACNpR,OAAA;QAAK+Q,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BhR,OAAA;UAAM+Q,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAE,CAAA5N,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEZ,IAAI,KAAI;QAAU;UAAAyO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACvE,CAAAhO,WAAW,aAAXA,WAAW,wBAAAF,kBAAA,GAAXE,WAAW,CAAEkO,KAAK,cAAApO,kBAAA,uBAAlBA,kBAAA,CAAoBqO,YAAY,kBAC/BvR,OAAA;UAAM+Q,SAAS,EAAC,eAAe;UAAAC,QAAA,GAAE5N,WAAW,CAACkO,KAAK,CAACC,YAAY,CAACf,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACpF,EACA,CAAAhO,WAAW,aAAXA,WAAW,wBAAAD,oBAAA,GAAXC,WAAW,CAAE0K,MAAM,cAAA3K,oBAAA,uBAAnBA,oBAAA,CAAqB0K,WAAW,kBAC/B7N,OAAA;UAAM+Q,SAAS,EAAC,eAAe;UAAAC,QAAA,GAAE5N,WAAW,CAAC0K,MAAM,CAACD,WAAW,EAAC,cAAY;QAAA;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACnF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENpR,OAAA;MAAK+Q,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAE3BhR,OAAA;QAAK+Q,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzBhR,OAAA;UAAQwR,GAAG,EAAExN,SAAU;UAAC+M,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eAGNpR,OAAA;QAAK+Q,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BhR,OAAA;UAAK+Q,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBhR,OAAA;YAAK+Q,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1CpR,OAAA;YAAK+Q,SAAS,EAAC,QAAQ;YAAAC,QAAA,GAAEtN,WAAW,CAACvB,MAAM,EAAC,SAAO;UAAA;YAAA8O,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC,eAENpR,OAAA;UAAK+Q,SAAS,EAAC,SAAS;UAAAC,QAAA,GACrBtN,WAAW,CAACvB,MAAM,KAAK,CAAC,gBACvBnC,OAAA;YAAK+Q,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBhR,OAAA;cAAAgR,QAAA,EAAG;YAAmC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC1CpR,OAAA;cAAO+Q,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAC;YAAmD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjF,CAAC,GAEN1N,WAAW,CAACwI,GAAG,CAAC,CAACjL,CAAC,EAAEwQ,GAAG,KAAK;YAC1B,MAAM5H,MAAM,GAAGnG,WAAW,CAAC,CAAC,CAAC;YAC7B,MAAM6L,QAAQ,GAAGkC,GAAG,KAAK,CAAC;YAC1B,MAAMC,OAAO,GAAGzQ,CAAC,CAACkH,WAAW,IAAI+B,aAAa,IAAIjJ,CAAC,CAACkH,WAAW,KAAK+B,aAAa;;YAEjF;YACA,MAAMyH,YAAY,GAAG7N,eAAe,CAAC4D,IAAI,CAAChB,CAAC,IAAIA,CAAC,CAAC6C,SAAS,KAAKtI,CAAC,CAACoE,GAAG,CAAC;YACrE,MAAMuM,gBAAgB,GAAG9N,eAAe,CAAC4D,IAAI,CAAChB,CAAC,IAAIA,CAAC,CAAC2C,SAAS,KAAKpI,CAAC,CAACoE,GAAG,CAAC;YAEzE,oBACErF,OAAA;cAEE+Q,SAAS,EACP,UAAUxB,QAAQ,GAAG,WAAW,GAAG,EAAE,IAAIoC,YAAY,GAAG,YAAY,GAAG,EAAE,IAAIC,gBAAgB,GAAG,iBAAiB,GAAG,EAAE,EACvH;cAAAZ,QAAA,gBAEDhR,OAAA;gBAAK+Q,SAAS,EAAC,QAAQ;gBAAAC,QAAA,EAAES,GAAG,GAAG;cAAC;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAEvCpR,OAAA;gBAAK+Q,SAAS,EAAC,SAAS;gBAAAC,QAAA,EACrB/P,CAAC,CAAC4G,YAAY,gBACb7H,OAAA;kBACE6R,GAAG,EAAE,GAAG5R,QAAQ,GAAGgB,CAAC,CAAC4G,YAAY,EAAG;kBACpCiK,GAAG,EAAE7Q,CAAC,CAAC0F,IAAK;kBACZoK,SAAS,EAAC;gBAAc;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CAAC,gBAEFpR,OAAA;kBAAK+Q,SAAS,EAAC,eAAe;kBAAChG,KAAK,EAAE;oBAAEgH,UAAU,EAAE9Q,CAAC,CAACsF;kBAAM;gBAAE;kBAAA0K,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cACjE;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eAENpR,OAAA;gBAAK+Q,SAAS,EAAC,SAAS;gBAAAC,QAAA,EAAE/P,CAAC,CAACuB;cAAI;gBAAAyO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAEvCpR,OAAA;gBAAK+Q,SAAS,EAAC,QAAQ;gBAAAC,QAAA,EACpBzB,QAAQ,GAAG,QAAQ,GAAGmB,WAAW,CAACzP,CAAC,EAAE4I,MAAM;cAAC;gBAAAoH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C,CAAC,eAENpR,OAAA;gBAAK+Q,SAAS,EAAC,UAAU;gBAAAC,QAAA,GACtBU,OAAO,iBAAI1R,OAAA;kBAAM+Q,SAAS,EAAC,gBAAgB;kBAACM,KAAK,EAAC,mBAAmB;kBAAAL,QAAA,EAAC;gBAAC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EAC9EnQ,CAAC,CAACmH,GAAG,iBAAIpI,OAAA;kBAAM+Q,SAAS,EAAC,SAAS;kBAACM,KAAK,EAAC,KAAK;kBAAAL,QAAA,EAAC;gBAAG;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EACzDnQ,CAAC,CAACoH,GAAG,iBAAIrI,OAAA;kBAAM+Q,SAAS,EAAC,SAAS;kBAACM,KAAK,EAAC,UAAU;kBAAAL,QAAA,EAAC;gBAAC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1D,CAAC,eAENpR,OAAA;gBAAK+Q,SAAS,EAAC,QAAQ;gBAAAC,QAAA,gBACrBhR,OAAA;kBAAM+Q,SAAS,EAAC,OAAO;kBAAAC,QAAA,EAAC;gBAAG;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,QAAM,EAACnQ,CAAC,CAAC8G,QAAQ,EAAC,GAAC,EAAC1E,SAAS;cAAA;gBAAA4N,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5D,CAAC;YAAA,GAjCDnQ,CAAC,CAACoE,GAAG;cAAA4L,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAkCP,CAAC;UAEV,CAAC,CACF,EAGAxN,aAAa,CAACsI,GAAG,CAACnD,CAAC,iBAClB/I,OAAA;YAA6C+Q,SAAS,EAAC,4BAA4B;YAAAC,QAAA,gBACjFhR,OAAA;cAAK+Q,SAAS,EAAC;YAAkB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxCpR,OAAA;cAAK+Q,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7BhR,OAAA;gBAAK+Q,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC1CpR,OAAA;gBAAK+Q,SAAS,EAAC,YAAY;gBAAAC,QAAA,GAAEjI,CAAC,CAACiB,QAAQ,CAACwG,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE;cAAA;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD,CAAC,eACNpR,OAAA;cAAK+Q,SAAS,EAAC;YAAmB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GANjC,GAAGrI,CAAC,CAACc,MAAM,CAACxE,GAAG,IAAI0D,CAAC,CAACe,MAAM,CAACzE,GAAG,EAAE;YAAA4L,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOtC,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNpR,OAAA;MAAK+Q,SAAS,EAAC,eAAe;MAAChG,KAAK,EAAE;QAAEiH,cAAc,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAG,CAAE;MAAAjB,QAAA,eAChFhR,OAAA;QAAQ+Q,SAAS,EAAC,YAAY;QAACmB,OAAO,EAAElP,UAAW;QAAAgO,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnO,EAAA,CAjhBuBH,QAAQ;AAAAqP,EAAA,GAARrP,QAAQ;AAAA,IAAAqP,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}