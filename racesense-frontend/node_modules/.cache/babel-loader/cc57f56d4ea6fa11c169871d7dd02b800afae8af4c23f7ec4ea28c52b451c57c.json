{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/racesense/racesense-frontend/src/pages/RaceLive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n/* ---------------- Utils ---------------- */\n\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity,\n    closestIdx = 0;\n  for (let i = 0; i < sectors.length; i++) {\n    const s = sectors[i];\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) {\n      minDist = d;\n      closestIdx = i;\n    }\n  }\n  return closestIdx;\n}\nfunction surnameTag(pilot) {\n  const last = ((pilot === null || pilot === void 0 ? void 0 : pilot.surname) || '').trim().toUpperCase();\n  return last.slice(0, 4) || 'PIL';\n}\nconst formatLap = s => {\n  if (!s) return '—';\n  const m = Math.floor(s / 60);\n  const sec = (s % 60).toFixed(3);\n  return `${m}:${sec.padStart(6, '0')}`;\n};\n\n/* ---------------- Component ---------------- */\n\nexport default function RaceLive({\n  raceConfig,\n  onStopRace\n}) {\n  _s();\n  var _circuitData$stats, _circuitData$params2, _statusColors$lbBorde;\n  const {\n    circuitData,\n    totalLaps,\n    assignments,\n    pilots\n  } = raceConfig;\n  const [driversState, setDriversState] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeBattles, setActiveBattles] = useState([]);\n  const [overtakingPairs, setOvertakingPairs] = useState([]);\n\n  // Stato gara (mini-dashboard)\n  const [raceStatus, setRaceStatus] = useState('IN CORSO');\n\n  // Sanzioni\n  // penalties[mac] = { timeSec: number, warnings: number, dq: boolean, entries:[{type, value, ts}] }\n  const [penalties, setPenalties] = useState({});\n  const [penTargetMac, setPenTargetMac] = useState('');\n\n  // refs per canvas/dati\n  const canvasRef = useRef(null);\n  const animFrameRef = useRef(null);\n  const driversRef = useRef({});\n  const zoomRef = useRef(1);\n  const panRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const isDraggingRef = useRef(false);\n  const lastMouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const lastPositionsRef = useRef({});\n\n  // Blink dot per LIVE\n  const [blink, setBlink] = useState(true);\n  useEffect(() => {\n    const t = setInterval(() => setBlink(b => !b), 700);\n    return () => clearInterval(t);\n  }, []);\n\n  // mantieni ref aggiornato\n  useEffect(() => {\n    driversRef.current = driversState;\n  }, [driversState]);\n\n  /* ========== WebSocket GPS ========== */\n  useEffect(() => {\n    const ws = new WebSocket(WS_URL);\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.mac && data.lat && data.lon) {\n          const mac = String(data.mac);\n          if (!assignments[mac]) return;\n          handleGPSUpdate({\n            mac,\n            lat: Number(data.lat),\n            lon: Number(data.lon),\n            speed: Number(data.speedKmh || 0),\n            ts: data.ts || Date.now()\n          });\n        }\n      } catch {}\n    };\n    ws.onerror = e => console.error('[RaceLive] WS error', e);\n    return () => {\n      try {\n        ws.close();\n      } catch {}\n    };\n  }, [assignments]); // eslint-disable-line\n\n  /* ========== Colore Team (fallback) ========== */\n  const getTeamColor = useCallback((pilot, allPilots) => {\n    if (pilot.color) return pilot.color;\n    const teamPilots = allPilots.filter(p => p.team === pilot.team);\n    const pilotIndex = teamPilots.findIndex(p => p.id === pilot.id);\n    const teamHash = (pilot.team || 'TEAM').split('').reduce((acc, ch) => acc + ch.charCodeAt(0), 0);\n    const hue = teamHash * 137.508 % 360;\n    if (teamPilots.length > 1) {\n      const l = 50 + pilotIndex * 8;\n      const s = 75 - pilotIndex * 5;\n      return `hsl(${hue}, ${s}%, ${l}%)`;\n    }\n    return `hsl(${hue}, 75%, 55%)`;\n  }, []);\n\n  /* ========== GPS → Stato pilota ========== */\n  const handleGPSUpdate = useCallback(gps => {\n    if (!(circuitData !== null && circuitData !== void 0 && circuitData.sectors)) return;\n    const {\n      mac,\n      lat,\n      lon,\n      speed\n    } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n    const pilotId = assignments[mac];\n    const pilot = pilots.find(p => String(p.id) === String(pilotId));\n    if (!pilot) return;\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        pilotId,\n        pilot,\n        tag: surnameTag(pilot),\n        fullName: `${pilot.name || ''} ${pilot.surname || ''}`.trim(),\n        team: pilot.team,\n        color: getTeamColor(pilot, pilots),\n        photoTeamUrl: pilot.photoTeamUrl,\n        lat,\n        lon,\n        speed: 0,\n        sectorIdx,\n        lastSectorIdx: sectorIdx,\n        lapCount: 0,\n        lapStartTime: Date.now(),\n        lastLapTime: null,\n        bestLapTime: null,\n        pit: false,\n        out: false,\n        trail: []\n      };\n\n      // giro completato\n      let lapCount = existing.lapCount;\n      let lastLapTime = existing.lastLapTime;\n      let bestLapTime = existing.bestLapTime;\n      let lapStartTime = existing.lapStartTime;\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        const lapSec = (Date.now() - existing.lapStartTime) / 1000;\n        if (lapSec > 5) {\n          lapCount = existing.lapCount + 1;\n          lastLapTime = lapSec;\n          bestLapTime = !bestLapTime || lapSec < bestLapTime ? lapSec : bestLapTime;\n          lapStartTime = Date.now();\n        }\n      }\n      const trailLength = speed > 30 ? 40 : speed > 15 ? 25 : 15;\n      const trail = [...existing.trail, {\n        lat,\n        lon\n      }].slice(-trailLength);\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat,\n          lon,\n          speed,\n          sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount,\n          lastLapTime,\n          bestLapTime,\n          lapStartTime,\n          trail,\n          updatedAt: Date.now()\n        }\n      };\n    });\n  }, [circuitData, assignments, pilots, getTeamColor]);\n\n  /* ========== Classifica / Sorpassi / Duelli ========== */\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n    const newOvertakes = [];\n    const currentPos = {};\n    sorted.forEach((d, i) => {\n      currentPos[d.mac] = i;\n      const lastPos = lastPositionsRef.current[d.mac];\n      if (lastPos !== undefined && i < lastPos) {\n        const overtaken = sorted[i + 1];\n        if (overtaken && lastPositionsRef.current[overtaken.mac] === i) {\n          newOvertakes.push({\n            overtaker: d.mac,\n            overtaken: overtaken.mac,\n            timestamp: Date.now()\n          });\n        }\n      }\n    });\n    if (newOvertakes.length) {\n      setOvertakingPairs(prev => {\n        const now = Date.now();\n        const keep = prev.filter(p => now - p.timestamp < 1600);\n        return [...keep, ...newOvertakes];\n      });\n      setTimeout(() => {\n        lastPositionsRef.current = currentPos;\n      }, 1600);\n    } else {\n      const now = Date.now();\n      setOvertakingPairs(prev => prev.filter(p => now - p.timestamp < 1600));\n      if (overtakingPairs.length === 0) lastPositionsRef.current = currentPos;\n    }\n    const battles = [];\n    for (let i = 0; i < sorted.length - 1; i++) {\n      const a = sorted[i],\n        b = sorted[i + 1];\n      if (a.lapCount !== b.lapCount) continue;\n      const dist = haversine(a.lat, a.lon, b.lat, b.lon);\n      const was = activeBattles.some(x => x.leader.mac === a.mac && x.chaser.mac === b.mac || x.leader.mac === b.mac && x.chaser.mac === a.mac);\n      if (dist < 30 || was && dist < 35) {\n        battles.push({\n          leader: a,\n          chaser: b,\n          distance: dist,\n          position: i + 1\n        });\n      }\n    }\n    setActiveBattles(battles);\n    setLeaderboard(sorted);\n  }, [driversState]); // eslint-disable-line\n\n  const globalBestLap = useMemo(() => {\n    let best = null;\n    Object.values(driversState).forEach(d => {\n      if (d.bestLapTime && (best === null || d.bestLapTime < best)) best = d.bestLapTime;\n    });\n    return best;\n  }, [driversState]);\n\n  /* ========== Canvas: inizializza UNA SOLA VOLTA per circuito ========== */\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const ensureSize = () => {\n      const container = canvas.parentElement;\n      const w = container.clientWidth || 600;\n      const h = container.clientHeight || 520;\n      if (canvas.width !== Math.floor(w * dpr) || canvas.height !== Math.floor(h * dpr)) {\n        canvas.width = Math.floor(w * dpr);\n        canvas.height = Math.floor(h * dpr);\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n      }\n    };\n    const onResize = () => ensureSize();\n    ensureSize();\n    window.addEventListener('resize', onResize);\n    const wheel = e => {\n      e.preventDefault();\n      zoomRef.current = Math.max(0.5, Math.min(5, zoomRef.current * (e.deltaY > 0 ? 0.9 : 1.1)));\n    };\n    const mousedown = e => {\n      isDraggingRef.current = true;\n      lastMouseRef.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      canvas.style.cursor = 'grabbing';\n    };\n    const mousemove = e => {\n      if (!isDraggingRef.current) return;\n      const dx = e.clientX - lastMouseRef.current.x;\n      const dy = e.clientY - lastMouseRef.current.y;\n      panRef.current.x += dx;\n      panRef.current.y += dy;\n      lastMouseRef.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n    };\n    const mouseup = () => {\n      isDraggingRef.current = false;\n      canvas.style.cursor = 'grab';\n    };\n    canvas.addEventListener('wheel', wheel, {\n      passive: false\n    });\n    canvas.addEventListener('mousedown', mousedown);\n    canvas.addEventListener('mousemove', mousemove);\n    canvas.addEventListener('mouseup', mouseup);\n    canvas.addEventListener('mouseleave', mouseup);\n    canvas.style.cursor = 'grab';\n\n    // precompute projection params\n    const lats = circuitData.sectors.map(s => s.lat);\n    const lons = circuitData.sectors.map(s => s.lon);\n    const minLat = Math.min(...lats),\n      maxLat = Math.max(...lats);\n    const minLon = Math.min(...lons),\n      maxLon = Math.max(...lons);\n    const centerLat = (minLat + maxLat) / 2;\n    const centerLon = (minLon + maxLon) / 2;\n    const R = 6371000;\n    const centerLatRad = centerLat * Math.PI / 180;\n    const dxList = lons.map(l => (l - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad));\n    const dyList = lats.map(l => (l - centerLat) * Math.PI / 180 * R);\n    const maxDx = Math.max(...dxList.map(Math.abs));\n    const maxDy = Math.max(...dyList.map(Math.abs));\n    const padding = 40;\n    const project = (lat, lon) => {\n      const w = canvas.width / dpr;\n      const h = canvas.height / dpr;\n      const maxRange = Math.max(maxDx, maxDy) * 1.1;\n      const scale = Math.min(w - padding * 2, h - padding * 2) / (maxRange * 2) * zoomRef.current;\n      const dx = (lon - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad);\n      const dy = (lat - centerLat) * Math.PI / 180 * R;\n      const x = w / 2 + dx * scale + panRef.current.x;\n      const y = h / 2 - dy * scale + panRef.current.y;\n      return {\n        x,\n        y,\n        scale\n      };\n    };\n    const draw = () => {\n      var _circuitData$params$w, _circuitData$params, _pts$;\n      ensureSize();\n      const w = canvas.width / dpr;\n      const h = canvas.height / dpr;\n      ctx.clearRect(0, 0, w, h);\n      ctx.fillStyle = '#0a0a0a';\n      ctx.fillRect(0, 0, w, h);\n      const widthMeters = (_circuitData$params$w = (_circuitData$params = circuitData.params) === null || _circuitData$params === void 0 ? void 0 : _circuitData$params.widthMeters) !== null && _circuitData$params$w !== void 0 ? _circuitData$params$w : 6;\n      const pts = circuitData.sectors.map(s => project(s.lat, s.lon));\n      const scale = ((_pts$ = pts[0]) === null || _pts$ === void 0 ? void 0 : _pts$.scale) || 1;\n      const trackPx = Math.max(6, widthMeters * scale);\n\n      // bordo soft\n      ctx.strokeStyle = 'rgba(255,255,255,0.10)';\n      ctx.lineWidth = trackPx + 4;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      pts.forEach((p, i) => i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y));\n      ctx.closePath();\n      ctx.stroke();\n\n      // asfalto\n      ctx.strokeStyle = 'rgba(80, 84, 90, 0.95)';\n      ctx.lineWidth = trackPx;\n      ctx.beginPath();\n      pts.forEach((p, i) => i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y));\n      ctx.closePath();\n      ctx.stroke();\n\n      // start\n      if (pts.length > 1) {\n        const s0 = pts[0],\n          s1 = pts[1];\n        const ang = Math.atan2(s1.y - s0.y, s1.x - s0.x);\n        ctx.save();\n        ctx.translate(s0.x, s0.y);\n        ctx.rotate(ang);\n        ctx.strokeStyle = '#ffffff';\n        ctx.lineWidth = Math.max(2, trackPx * 0.12);\n        ctx.beginPath();\n        ctx.moveTo(0, -trackPx * 0.5);\n        ctx.lineTo(0, trackPx * 0.5);\n        ctx.stroke();\n        ctx.restore();\n      }\n\n      // piloti\n      const sorted = Object.values(driversRef.current).sort((a, b) => {\n        if (a.lapCount !== b.lapCount) return a.lapCount - b.lapCount;\n        return a.sectorIdx - b.sectorIdx;\n      });\n      sorted.forEach((d, i) => {\n        var _d$trail;\n        const p = project(d.lat, d.lon);\n        if (((_d$trail = d.trail) === null || _d$trail === void 0 ? void 0 : _d$trail.length) > 1) {\n          ctx.strokeStyle = d.color;\n          ctx.globalAlpha = 0.6;\n          ctx.lineWidth = Math.max(2, trackPx * 0.12);\n          ctx.beginPath();\n          d.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti ? ctx.lineTo(tp.x, tp.y) : ctx.moveTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n          ctx.globalAlpha = 1;\n        }\n        const isLeader = i === sorted.length - 1;\n        const r = Math.max(5, trackPx * 0.18) + (isLeader ? 1 : 0);\n        ctx.shadowColor = 'rgba(0,0,0,0.5)';\n        ctx.shadowBlur = 4;\n        ctx.fillStyle = d.color;\n        ctx.beginPath();\n        ctx.arc(p.x, p.y, r, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.shadowBlur = 0;\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n        ctx.fillStyle = '#fff';\n        ctx.font = 'bold 10px Roboto, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.fillText(d.tag, p.x, p.y - (r + 8));\n      });\n      animFrameRef.current = requestAnimationFrame(draw);\n    };\n    draw();\n    return () => {\n      window.removeEventListener('resize', onResize);\n      canvas.removeEventListener('wheel', wheel);\n      canvas.removeEventListener('mousedown', mousedown);\n      canvas.removeEventListener('mousemove', mousemove);\n      canvas.removeEventListener('mouseup', mouseup);\n      canvas.removeEventListener('mouseleave', mouseup);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData]); // solo al cambio circuito\n\n  /* ---------- Helpers UI ---------- */\n\n  const gapToLeader = (driver, leader) => {\n    if (!leader || !driver) return '';\n    if (driver.lapCount < leader.lapCount) return `+${leader.lapCount - driver.lapCount}L`;\n    const sectorDiff = leader.sectorIdx - driver.sectorIdx;\n    const est = Math.max(0, sectorDiff / 10);\n    return `+${est.toFixed(2)}`;\n  };\n\n  // Colori stato (chip + bordo classifica laterale)\n  const statusColors = useMemo(() => {\n    switch (raceStatus) {\n      case 'RED FLAG':\n        return {\n          chipBg: 'rgba(225,6,0,.15)',\n          chipBorder: '#e10600',\n          chipText: '#ffdede',\n          lbBorder: '#e10600'\n        };\n      case 'YELLOW FLAG':\n        return {\n          chipBg: 'rgba(241,196,15,.15)',\n          chipBorder: '#f1c40f',\n          chipText: '#fff3c4',\n          lbBorder: '#f1c40f'\n        };\n      case 'FINITA':\n        return {\n          chipBg: 'rgba(154,163,154,.15)',\n          chipBorder: '#9aa39a',\n          chipText: '#e0e0e0',\n          lbBorder: '#9aa39a'\n        };\n      case 'IN CORSO':\n      default:\n        return {\n          chipBg: 'rgba(21,193,48,.15)',\n          chipBorder: '#15c130',\n          chipText: '#e9ffe0',\n          lbBorder: null\n        };\n    }\n  }, [raceStatus]);\n\n  // Gestione sanzioni\n  const upsertPenalty = useCallback((mac, updater) => {\n    setPenalties(prev => {\n      const base = prev[mac] || {\n        timeSec: 0,\n        warnings: 0,\n        dq: false,\n        entries: []\n      };\n      const updated = updater(base);\n      return {\n        ...prev,\n        [mac]: updated\n      };\n    });\n  }, []);\n  const applyPenalty = type => {\n    if (!penTargetMac) return;\n    if (type === '+5s' || type === '+10s' || type === '+15s') {\n      const add = parseInt(type.replace(/\\D/g, ''), 10);\n      upsertPenalty(penTargetMac, p => ({\n        ...p,\n        timeSec: p.timeSec + add,\n        entries: [...p.entries, {\n          type,\n          value: add,\n          ts: Date.now()\n        }]\n      }));\n    } else if (type === '1mo avv. squalifica') {\n      upsertPenalty(penTargetMac, p => ({\n        ...p,\n        warnings: p.warnings + 1,\n        entries: [...p.entries, {\n          type,\n          value: 'WARN',\n          ts: Date.now()\n        }]\n      }));\n    } else if (type === 'squalifica') {\n      upsertPenalty(penTargetMac, p => ({\n        ...p,\n        dq: true,\n        entries: [...p.entries, {\n          type,\n          value: 'DQ',\n          ts: Date.now()\n        }]\n      }));\n    }\n  };\n  const penaltySummary = mac => {\n    const p = penalties[mac];\n    if (!p) return '—';\n    const parts = [];\n    if (p.timeSec) parts.push(`+${p.timeSec}s`);\n    if (p.warnings) parts.push(`⚠️ x${p.warnings}`);\n    if (p.dq) parts.push('DQ');\n    return parts.join('  ');\n  };\n\n  /* ---------- Render ---------- */\n\n  const topBattle = useMemo(() => {\n    if (!activeBattles.length) return null;\n    return activeBattles.slice().sort((a, b) => a.distance - b.distance)[0];\n  }, [activeBattles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main small-top\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rs-live-topbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rs-live-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-hidden\": true,\n            style: {\n              width: 10,\n              height: 10,\n              borderRadius: '50%',\n              background: '#ff4d4f',\n              boxShadow: '0 0 12px rgba(255,77,79,.8)',\n              opacity: blink ? 1 : .25,\n              transition: 'opacity .15s linear'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), \"LIVE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: [totalLaps, \" giri\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          style: {\n            background: statusColors.chipBg,\n            border: `1px solid ${statusColors.chipBorder}`,\n            color: statusColors.chipText,\n            fontWeight: 800\n          },\n          children: raceStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rs-live-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: (circuitData === null || circuitData === void 0 ? void 0 : circuitData.name) || 'Circuito'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), (circuitData === null || circuitData === void 0 ? void 0 : (_circuitData$stats = circuitData.stats) === null || _circuitData$stats === void 0 ? void 0 : _circuitData$stats.lengthMeters) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: [circuitData.stats.lengthMeters.toFixed(0), \" m\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 48\n        }, this), (circuitData === null || circuitData === void 0 ? void 0 : (_circuitData$params2 = circuitData.params) === null || _circuitData$params2 === void 0 ? void 0 : _circuitData$params2.widthMeters) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: [circuitData.params.widthMeters, \" m larghezza\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rs-live-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-card\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"track-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard-card\",\n        style: {\n          borderColor: (_statusColors$lbBorde = statusColors.lbBorder) !== null && _statusColors$lbBorde !== void 0 ? _statusColors$lbBorde : 'var(--line)',\n          boxShadow: statusColors.lbBorder ? `0 8px 32px ${statusColors.lbBorder}33, inset 0 0 0 1px ${statusColors.lbBorder}55` : undefined\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lb-title\",\n            children: \"CLASSIFICA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lb-sub\",\n            children: [leaderboard.length, \" piloti\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-list\",\n          children: leaderboard.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-drivers\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Nessun dato GPS ancora disponibile\\u2026\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"muted\",\n              children: \"Appena arrivano i pacchetti la classifica si popola\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this) : leaderboard.map((d, idx) => {\n            const leader = leaderboard[0];\n            const isLeader = idx === 0;\n            const fastest = d.bestLapTime && globalBestLap && d.bestLapTime === globalBestLap;\n            const isOvertaking = overtakingPairs.find(p => p.overtaker === d.mac);\n            const isBeingOvertaken = overtakingPairs.find(p => p.overtaken === d.mac);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `lb-row ${isLeader ? 'lb-leader' : ''} ${isOvertaking ? 'overtaking' : ''} ${isBeingOvertaken ? 'being-overtaken' : ''}`,\n              title: d.fullName,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-pos\",\n                children: idx + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-team\",\n                children: d.photoTeamUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${API_BASE}${d.photoTeamUrl}`,\n                  alt: d.team,\n                  className: \"lb-team-logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"lb-team-color\",\n                  style: {\n                    background: d.color\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-name\",\n                children: d.tag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-gap\",\n                children: isLeader ? 'LEADER' : gapToLeader(d, leader)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-icons\",\n                children: [fastest && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lb-icon purple\",\n                  title: `Best lap ${formatLap(d.bestLapTime)}`,\n                  children: \"\\u23F1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 35\n                }, this), d.pit && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lb-icon\",\n                  title: \"Pit\",\n                  children: \"\\uD83C\\uDD7F\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 33\n                }, this), d.out && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lb-icon\",\n                  title: \"Out\",\n                  children: \"\\u26D4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-lap\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"muted\",\n                  children: \"Lap\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 45\n                }, this), \"\\xA0\", d.lapCount, \"/\", totalLaps]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 21\n              }, this)]\n            }, d.mac, true, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-card\",\n      style: {\n        marginTop: 12,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lb-header\",\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'baseline'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-title\",\n          children: \"CLASSIFICA DETTAGLIATA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-sub\",\n          children: [leaderboard.length, \" piloti \\u2022 tempi ultimo giro e miglior giro\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lb-list\",\n        children: leaderboard.map((d, idx) => {\n          const leader = leaderboard[0];\n          const fastest = d.bestLapTime && globalBestLap && d.bestLapTime === globalBestLap;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lb-row\",\n            style: {\n              gridTemplateColumns: '28px 28px 1fr 90px 110px 110px 140px 90px'\n            },\n            title: d.fullName,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-pos\",\n              children: idx + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-team\",\n              children: d.photoTeamUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `${API_BASE}${d.photoTeamUrl}`,\n                alt: d.team,\n                className: \"lb-team-logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-team-color\",\n                style: {\n                  background: d.color\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-name\",\n              children: d.tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-gap\",\n              style: {\n                textAlign: 'right'\n              },\n              children: idx === 0 ? 'LEADER' : gapToLeader(d, leader)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-gap\",\n              title: \"Ultimo giro\",\n              style: {\n                fontWeight: 700,\n                color: '#e9ffe0'\n              },\n              children: formatLap(d.lastLapTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-gap\",\n              title: \"Miglior giro\",\n              style: {\n                fontWeight: 700,\n                color: fastest ? '#b085ff' : '#e9ffe0'\n              },\n              children: [formatLap(d.bestLapTime), fastest && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"lb-icon purple\",\n                style: {\n                  marginLeft: 6\n                },\n                children: \"\\u23F1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-gap\",\n              title: \"Penalit\\xE0 assegnate\",\n              style: {\n                fontWeight: 800\n              },\n              children: penaltySummary(d.mac)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-lap\",\n              style: {\n                textAlign: 'right'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"muted\",\n                children: \"Lap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 19\n              }, this), \"\\xA0\", d.lapCount, \"/\", totalLaps]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 17\n            }, this)]\n          }, `wide-${d.mac}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-card\",\n      style: {\n        marginTop: 12,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lb-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-title\",\n          children: \"COMANDI GARA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-controls\",\n        style: {\n          justifyContent: 'space-between',\n          gap: 12,\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 8,\n            flexWrap: 'wrap',\n            marginTop: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"muted\",\n            children: \"Stato:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 13\n          }, this), ['IN CORSO', 'FINITA', 'RED FLAG', 'YELLOW FLAG'].map(s => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-ghost\",\n            onClick: () => setRaceStatus(s),\n            style: {\n              borderColor: raceStatus === s ? 'rgba(192,255,3,0.6)' : 'var(--line)',\n              boxShadow: raceStatus === s ? '0 0 0 2px rgba(192,255,3,0.12) inset' : 'none',\n              fontWeight: 700\n            },\n            children: s\n          }, s, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 8,\n            flexWrap: 'wrap'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"muted\",\n            children: \"Sanzioni:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"input\",\n            value: penTargetMac,\n            onChange: e => setPenTargetMac(e.target.value),\n            style: {\n              minWidth: 220\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Seleziona pilota --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 15\n            }, this), leaderboard.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d.mac,\n              children: [d.tag, \" \\u2014 \", d.fullName]\n            }, d.mac, true, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this), ['+5s', '+10s', '+15s', '1mo avv. squalifica', 'squalifica'].map(k => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-ghost\",\n            disabled: !penTargetMac,\n            onClick: () => applyPenalty(k),\n            style: {\n              fontWeight: 800\n            },\n            children: k\n          }, k, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 15\n          }, this)), penTargetMac && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"muted\",\n            style: {\n              marginLeft: 6\n            },\n            children: [\"Attuale: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: penaltySummary(penTargetMac)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-danger\",\n          onClick: onStopRace,\n          children: \"Termina gara\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 470,\n    columnNumber: 5\n  }, this);\n}\n_s(RaceLive, \"pDKKXBL3DikcIdqwtI5TA+gZnzQ=\");\n_c = RaceLive;\nvar _c;\n$RefreshReg$(_c, \"RaceLive\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","window","location","hostname","WS_URL","REACT_APP_WS_URL","haversine","lat1","lon1","lat2","lon2","R","toRad","d","Math","PI","dLat","dLon","a","sin","cos","atan2","sqrt","findClosestSector","lat","lon","sectors","minDist","Infinity","closestIdx","i","length","s","surnameTag","pilot","last","surname","trim","toUpperCase","slice","formatLap","m","floor","sec","toFixed","padStart","RaceLive","raceConfig","onStopRace","_s","_circuitData$stats","_circuitData$params2","_statusColors$lbBorde","circuitData","totalLaps","assignments","pilots","driversState","setDriversState","leaderboard","setLeaderboard","activeBattles","setActiveBattles","overtakingPairs","setOvertakingPairs","raceStatus","setRaceStatus","penalties","setPenalties","penTargetMac","setPenTargetMac","canvasRef","animFrameRef","driversRef","zoomRef","panRef","x","y","isDraggingRef","lastMouseRef","lastPositionsRef","blink","setBlink","t","setInterval","b","clearInterval","current","ws","WebSocket","onmessage","event","data","JSON","parse","mac","String","handleGPSUpdate","Number","speed","speedKmh","ts","Date","now","onerror","e","console","error","close","getTeamColor","allPilots","color","teamPilots","filter","p","team","pilotIndex","findIndex","id","teamHash","split","reduce","acc","ch","charCodeAt","hue","l","gps","sectorIdx","totalSectors","pilotId","find","prev","existing","tag","fullName","name","photoTeamUrl","lastSectorIdx","lapCount","lapStartTime","lastLapTime","bestLapTime","pit","out","trail","lapSec","trailLength","updatedAt","sorted","Object","values","sort","newOvertakes","currentPos","forEach","lastPos","undefined","overtaken","push","overtaker","timestamp","keep","setTimeout","battles","dist","was","some","leader","chaser","distance","position","globalBestLap","best","canvas","ctx","getContext","dpr","devicePixelRatio","ensureSize","container","parentElement","w","clientWidth","h","clientHeight","width","height","setTransform","onResize","addEventListener","wheel","preventDefault","max","min","deltaY","mousedown","clientX","clientY","style","cursor","mousemove","dx","dy","mouseup","passive","lats","map","lons","minLat","maxLat","minLon","maxLon","centerLat","centerLon","centerLatRad","dxList","dyList","maxDx","abs","maxDy","padding","project","maxRange","scale","draw","_circuitData$params$w","_circuitData$params","_pts$","clearRect","fillStyle","fillRect","widthMeters","params","pts","trackPx","strokeStyle","lineWidth","lineCap","lineJoin","beginPath","lineTo","moveTo","closePath","stroke","s0","s1","ang","save","translate","rotate","restore","_d$trail","globalAlpha","ti","tp","isLeader","r","shadowColor","shadowBlur","arc","fill","font","textAlign","fillText","requestAnimationFrame","removeEventListener","cancelAnimationFrame","gapToLeader","driver","sectorDiff","est","statusColors","chipBg","chipBorder","chipText","lbBorder","upsertPenalty","updater","base","timeSec","warnings","dq","entries","updated","applyPenalty","type","add","parseInt","replace","value","penaltySummary","parts","join","topBattle","className","children","display","alignItems","gap","borderRadius","background","boxShadow","opacity","transition","fileName","_jsxFileName","lineNumber","columnNumber","border","fontWeight","stats","lengthMeters","ref","borderColor","idx","fastest","isOvertaking","isBeingOvertaken","title","src","alt","marginTop","justifyContent","gridTemplateColumns","marginLeft","flexWrap","onClick","onChange","target","minWidth","k","disabled","_c","$RefreshReg$"],"sources":["/home/ubuntu/racesense/racesense-frontend/src/pages/RaceLive.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport '../App.css';\n\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n/* ---------------- Utils ---------------- */\n\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 +\n            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity, closestIdx = 0;\n  for (let i = 0; i < sectors.length; i++) {\n    const s = sectors[i];\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) { minDist = d; closestIdx = i; }\n  }\n  return closestIdx;\n}\nfunction surnameTag(pilot) {\n  const last = (pilot?.surname || '').trim().toUpperCase();\n  return last.slice(0, 4) || 'PIL';\n}\nconst formatLap = (s) => {\n  if (!s) return '—';\n  const m = Math.floor(s / 60);\n  const sec = (s % 60).toFixed(3);\n  return `${m}:${sec.padStart(6, '0')}`;\n};\n\n/* ---------------- Component ---------------- */\n\nexport default function RaceLive({ raceConfig, onStopRace }) {\n  const { circuitData, totalLaps, assignments, pilots } = raceConfig;\n\n  const [driversState, setDriversState] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeBattles, setActiveBattles] = useState([]);\n  const [overtakingPairs, setOvertakingPairs] = useState([]);\n\n  // Stato gara (mini-dashboard)\n  const [raceStatus, setRaceStatus] = useState('IN CORSO');\n\n  // Sanzioni\n  // penalties[mac] = { timeSec: number, warnings: number, dq: boolean, entries:[{type, value, ts}] }\n  const [penalties, setPenalties] = useState({});\n  const [penTargetMac, setPenTargetMac] = useState('');\n\n  // refs per canvas/dati\n  const canvasRef = useRef(null);\n  const animFrameRef = useRef(null);\n  const driversRef = useRef({});\n  const zoomRef = useRef(1);\n  const panRef = useRef({ x: 0, y: 0 });\n  const isDraggingRef = useRef(false);\n  const lastMouseRef = useRef({ x: 0, y: 0 });\n  const lastPositionsRef = useRef({});\n\n  // Blink dot per LIVE\n  const [blink, setBlink] = useState(true);\n  useEffect(() => {\n    const t = setInterval(() => setBlink(b => !b), 700);\n    return () => clearInterval(t);\n  }, []);\n\n  // mantieni ref aggiornato\n  useEffect(() => { driversRef.current = driversState; }, [driversState]);\n\n  /* ========== WebSocket GPS ========== */\n  useEffect(() => {\n    const ws = new WebSocket(WS_URL);\n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.mac && data.lat && data.lon) {\n          const mac = String(data.mac);\n          if (!assignments[mac]) return;\n          handleGPSUpdate({\n            mac,\n            lat: Number(data.lat),\n            lon: Number(data.lon),\n            speed: Number(data.speedKmh || 0),\n            ts: data.ts || Date.now(),\n          });\n        }\n      } catch {}\n    };\n    ws.onerror = (e) => console.error('[RaceLive] WS error', e);\n    return () => { try { ws.close(); } catch {} };\n  }, [assignments]); // eslint-disable-line\n\n  /* ========== Colore Team (fallback) ========== */\n  const getTeamColor = useCallback((pilot, allPilots) => {\n    if (pilot.color) return pilot.color;\n    const teamPilots = allPilots.filter(p => p.team === pilot.team);\n    const pilotIndex = teamPilots.findIndex(p => p.id === pilot.id);\n    const teamHash = (pilot.team || 'TEAM').split('').reduce((acc, ch) => acc + ch.charCodeAt(0), 0);\n    const hue = (teamHash * 137.508) % 360;\n    if (teamPilots.length > 1) {\n      const l = 50 + (pilotIndex * 8);\n      const s = 75 - (pilotIndex * 5);\n      return `hsl(${hue}, ${s}%, ${l}%)`;\n    }\n    return `hsl(${hue}, 75%, 55%)`;\n  }, []);\n\n  /* ========== GPS → Stato pilota ========== */\n  const handleGPSUpdate = useCallback((gps) => {\n    if (!circuitData?.sectors) return;\n\n    const { mac, lat, lon, speed } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n\n    const pilotId = assignments[mac];\n    const pilot = pilots.find(p => String(p.id) === String(pilotId));\n    if (!pilot) return;\n\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        pilotId,\n        pilot,\n        tag: surnameTag(pilot),\n        fullName: `${pilot.name || ''} ${pilot.surname || ''}`.trim(),\n        team: pilot.team,\n        color: getTeamColor(pilot, pilots),\n        photoTeamUrl: pilot.photoTeamUrl,\n        lat, lon, speed: 0,\n        sectorIdx,\n        lastSectorIdx: sectorIdx,\n        lapCount: 0,\n        lapStartTime: Date.now(),\n        lastLapTime: null,\n        bestLapTime: null,\n        pit: false,\n        out: false,\n        trail: []\n      };\n\n      // giro completato\n      let lapCount = existing.lapCount;\n      let lastLapTime = existing.lastLapTime;\n      let bestLapTime = existing.bestLapTime;\n      let lapStartTime = existing.lapStartTime;\n\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        const lapSec = (Date.now() - existing.lapStartTime) / 1000;\n        if (lapSec > 5) {\n          lapCount = existing.lapCount + 1;\n          lastLapTime = lapSec;\n          bestLapTime = !bestLapTime || lapSec < bestLapTime ? lapSec : bestLapTime;\n          lapStartTime = Date.now();\n        }\n      }\n\n      const trailLength = speed > 30 ? 40 : speed > 15 ? 25 : 15;\n      const trail = [...existing.trail, { lat, lon }].slice(-trailLength);\n\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat, lon, speed, sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount, lastLapTime, bestLapTime, lapStartTime,\n          trail,\n          updatedAt: Date.now()\n        }\n      };\n    });\n  }, [circuitData, assignments, pilots, getTeamColor]);\n\n  /* ========== Classifica / Sorpassi / Duelli ========== */\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n\n    const newOvertakes = [];\n    const currentPos = {};\n    sorted.forEach((d, i) => {\n      currentPos[d.mac] = i;\n      const lastPos = lastPositionsRef.current[d.mac];\n      if (lastPos !== undefined && i < lastPos) {\n        const overtaken = sorted[i + 1];\n        if (overtaken && lastPositionsRef.current[overtaken.mac] === i) {\n          newOvertakes.push({ overtaker: d.mac, overtaken: overtaken.mac, timestamp: Date.now() });\n        }\n      }\n    });\n    if (newOvertakes.length) {\n      setOvertakingPairs(prev => {\n        const now = Date.now();\n        const keep = prev.filter(p => now - p.timestamp < 1600);\n        return [...keep, ...newOvertakes];\n      });\n      setTimeout(() => { lastPositionsRef.current = currentPos; }, 1600);\n    } else {\n      const now = Date.now();\n      setOvertakingPairs(prev => prev.filter(p => now - p.timestamp < 1600));\n      if (overtakingPairs.length === 0) lastPositionsRef.current = currentPos;\n    }\n\n    const battles = [];\n    for (let i = 0; i < sorted.length - 1; i++) {\n      const a = sorted[i], b = sorted[i + 1];\n      if (a.lapCount !== b.lapCount) continue;\n      const dist = haversine(a.lat, a.lon, b.lat, b.lon);\n      const was = activeBattles.some(x =>\n        (x.leader.mac === a.mac && x.chaser.mac === b.mac) ||\n        (x.leader.mac === b.mac && x.chaser.mac === a.mac)\n      );\n      if (dist < 30 || (was && dist < 35)) {\n        battles.push({ leader: a, chaser: b, distance: dist, position: i + 1 });\n      }\n    }\n    setActiveBattles(battles);\n    setLeaderboard(sorted);\n  }, [driversState]); // eslint-disable-line\n\n  const globalBestLap = useMemo(() => {\n    let best = null;\n    Object.values(driversState).forEach(d => {\n      if (d.bestLapTime && (best === null || d.bestLapTime < best)) best = d.bestLapTime;\n    });\n    return best;\n  }, [driversState]);\n\n  /* ========== Canvas: inizializza UNA SOLA VOLTA per circuito ========== */\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n\n    const ensureSize = () => {\n      const container = canvas.parentElement;\n      const w = container.clientWidth || 600;\n      const h = container.clientHeight || 520;\n      if (canvas.width !== Math.floor(w * dpr) || canvas.height !== Math.floor(h * dpr)) {\n        canvas.width = Math.floor(w * dpr);\n        canvas.height = Math.floor(h * dpr);\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n      }\n    };\n\n    const onResize = () => ensureSize();\n    ensureSize();\n    window.addEventListener('resize', onResize);\n\n    const wheel = (e) => { e.preventDefault(); zoomRef.current = Math.max(0.5, Math.min(5, zoomRef.current * (e.deltaY > 0 ? 0.9 : 1.1))); };\n    const mousedown = (e) => { isDraggingRef.current = true; lastMouseRef.current = { x: e.clientX, y: e.clientY }; canvas.style.cursor = 'grabbing'; };\n    const mousemove = (e) => {\n      if (!isDraggingRef.current) return;\n      const dx = e.clientX - lastMouseRef.current.x;\n      const dy = e.clientY - lastMouseRef.current.y;\n      panRef.current.x += dx; panRef.current.y += dy;\n      lastMouseRef.current = { x: e.clientX, y: e.clientY };\n    };\n    const mouseup = () => { isDraggingRef.current = false; canvas.style.cursor = 'grab'; };\n\n    canvas.addEventListener('wheel', wheel, { passive: false });\n    canvas.addEventListener('mousedown', mousedown);\n    canvas.addEventListener('mousemove', mousemove);\n    canvas.addEventListener('mouseup', mouseup);\n    canvas.addEventListener('mouseleave', mouseup);\n    canvas.style.cursor = 'grab';\n\n    // precompute projection params\n    const lats = circuitData.sectors.map(s => s.lat);\n    const lons = circuitData.sectors.map(s => s.lon);\n    const minLat = Math.min(...lats), maxLat = Math.max(...lats);\n    const minLon = Math.min(...lons), maxLon = Math.max(...lons);\n    const centerLat = (minLat + maxLat) / 2;\n    const centerLon = (minLon + maxLon) / 2;\n    const R = 6371000;\n    const centerLatRad = centerLat * Math.PI / 180;\n    const dxList = lons.map(l => (l - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad));\n    const dyList = lats.map(l => (l - centerLat) * Math.PI / 180 * R);\n    const maxDx = Math.max(...dxList.map(Math.abs));\n    const maxDy = Math.max(...dyList.map(Math.abs));\n    const padding = 40;\n\n    const project = (lat, lon) => {\n      const w = canvas.width / dpr;\n      const h = canvas.height / dpr;\n      const maxRange = Math.max(maxDx, maxDy) * 1.1;\n      const scale = Math.min(w - padding * 2, h - padding * 2) / (maxRange * 2) * zoomRef.current;\n      const dx = (lon - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad);\n      const dy = (lat - centerLat) * Math.PI / 180 * R;\n      const x = w / 2 + dx * scale + panRef.current.x;\n      const y = h / 2 - dy * scale + panRef.current.y;\n      return { x, y, scale };\n    };\n\n    const draw = () => {\n      ensureSize();\n\n      const w = canvas.width / dpr;\n      const h = canvas.height / dpr;\n      ctx.clearRect(0, 0, w, h);\n      ctx.fillStyle = '#0a0a0a';\n      ctx.fillRect(0, 0, w, h);\n\n      const widthMeters = circuitData.params?.widthMeters ?? 6;\n      const pts = circuitData.sectors.map(s => project(s.lat, s.lon));\n      const scale = pts[0]?.scale || 1;\n      const trackPx = Math.max(6, widthMeters * scale);\n\n      // bordo soft\n      ctx.strokeStyle = 'rgba(255,255,255,0.10)';\n      ctx.lineWidth = trackPx + 4;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      pts.forEach((p, i) => i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y));\n      ctx.closePath(); ctx.stroke();\n\n      // asfalto\n      ctx.strokeStyle = 'rgba(80, 84, 90, 0.95)';\n      ctx.lineWidth = trackPx;\n      ctx.beginPath();\n      pts.forEach((p, i) => i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y));\n      ctx.closePath(); ctx.stroke();\n\n      // start\n      if (pts.length > 1) {\n        const s0 = pts[0], s1 = pts[1];\n        const ang = Math.atan2(s1.y - s0.y, s1.x - s0.x);\n        ctx.save(); ctx.translate(s0.x, s0.y); ctx.rotate(ang);\n        ctx.strokeStyle = '#ffffff';\n        ctx.lineWidth = Math.max(2, trackPx * 0.12);\n        ctx.beginPath(); ctx.moveTo(0, -trackPx * 0.5); ctx.lineTo(0, trackPx * 0.5); ctx.stroke();\n        ctx.restore();\n      }\n\n      // piloti\n      const sorted = Object.values(driversRef.current).sort((a, b) => {\n        if (a.lapCount !== b.lapCount) return a.lapCount - b.lapCount;\n        return a.sectorIdx - b.sectorIdx;\n      });\n\n      sorted.forEach((d, i) => {\n        const p = project(d.lat, d.lon);\n\n        if (d.trail?.length > 1) {\n          ctx.strokeStyle = d.color;\n          ctx.globalAlpha = 0.6;\n          ctx.lineWidth = Math.max(2, trackPx * 0.12);\n          ctx.beginPath();\n          d.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti ? ctx.lineTo(tp.x, tp.y) : ctx.moveTo(tp.x, tp.y);\n          });\n          ctx.stroke(); ctx.globalAlpha = 1;\n        }\n\n        const isLeader = i === sorted.length - 1;\n        const r = Math.max(5, trackPx * 0.18) + (isLeader ? 1 : 0);\n        ctx.shadowColor = 'rgba(0,0,0,0.5)'; ctx.shadowBlur = 4;\n        ctx.fillStyle = d.color; ctx.beginPath(); ctx.arc(p.x, p.y, r, 0, Math.PI * 2); ctx.fill();\n        ctx.shadowBlur = 0; ctx.strokeStyle = '#fff'; ctx.lineWidth = 2; ctx.stroke();\n\n        ctx.fillStyle = '#fff'; ctx.font = 'bold 10px Roboto, sans-serif'; ctx.textAlign = 'center';\n        ctx.fillText(d.tag, p.x, p.y - (r + 8));\n      });\n\n      animFrameRef.current = requestAnimationFrame(draw);\n    };\n\n    draw();\n\n    return () => {\n      window.removeEventListener('resize', onResize);\n      canvas.removeEventListener('wheel', wheel);\n      canvas.removeEventListener('mousedown', mousedown);\n      canvas.removeEventListener('mousemove', mousemove);\n      canvas.removeEventListener('mouseup', mouseup);\n      canvas.removeEventListener('mouseleave', mouseup);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData]); // solo al cambio circuito\n\n  /* ---------- Helpers UI ---------- */\n\n  const gapToLeader = (driver, leader) => {\n    if (!leader || !driver) return '';\n    if (driver.lapCount < leader.lapCount) return `+${leader.lapCount - driver.lapCount}L`;\n    const sectorDiff = leader.sectorIdx - driver.sectorIdx;\n    const est = Math.max(0, sectorDiff / 10);\n    return `+${est.toFixed(2)}`;\n  };\n\n  // Colori stato (chip + bordo classifica laterale)\n  const statusColors = useMemo(() => {\n    switch (raceStatus) {\n      case 'RED FLAG':\n        return { chipBg: 'rgba(225,6,0,.15)', chipBorder: '#e10600', chipText: '#ffdede', lbBorder: '#e10600' };\n      case 'YELLOW FLAG':\n        return { chipBg: 'rgba(241,196,15,.15)', chipBorder: '#f1c40f', chipText: '#fff3c4', lbBorder: '#f1c40f' };\n      case 'FINITA':\n        return { chipBg: 'rgba(154,163,154,.15)', chipBorder: '#9aa39a', chipText: '#e0e0e0', lbBorder: '#9aa39a' };\n      case 'IN CORSO':\n      default:\n        return { chipBg: 'rgba(21,193,48,.15)', chipBorder: '#15c130', chipText: '#e9ffe0', lbBorder: null };\n    }\n  }, [raceStatus]);\n\n  // Gestione sanzioni\n  const upsertPenalty = useCallback((mac, updater) => {\n    setPenalties(prev => {\n      const base = prev[mac] || { timeSec: 0, warnings: 0, dq: false, entries: [] };\n      const updated = updater(base);\n      return { ...prev, [mac]: updated };\n    });\n  }, []);\n\n  const applyPenalty = (type) => {\n    if (!penTargetMac) return;\n    if (type === '+5s' || type === '+10s' || type === '+15s') {\n      const add = parseInt(type.replace(/\\D/g, ''), 10);\n      upsertPenalty(penTargetMac, (p) => ({\n        ...p,\n        timeSec: p.timeSec + add,\n        entries: [...p.entries, { type, value: add, ts: Date.now() }]\n      }));\n    } else if (type === '1mo avv. squalifica') {\n      upsertPenalty(penTargetMac, (p) => ({\n        ...p,\n        warnings: p.warnings + 1,\n        entries: [...p.entries, { type, value: 'WARN', ts: Date.now() }]\n      }));\n    } else if (type === 'squalifica') {\n      upsertPenalty(penTargetMac, (p) => ({\n        ...p,\n        dq: true,\n        entries: [...p.entries, { type, value: 'DQ', ts: Date.now() }]\n      }));\n    }\n  };\n\n  const penaltySummary = (mac) => {\n    const p = penalties[mac];\n    if (!p) return '—';\n    const parts = [];\n    if (p.timeSec) parts.push(`+${p.timeSec}s`);\n    if (p.warnings) parts.push(`⚠️ x${p.warnings}`);\n    if (p.dq) parts.push('DQ');\n    return parts.join('  ');\n  };\n\n  /* ---------- Render ---------- */\n\n  const topBattle = useMemo(() => {\n    if (!activeBattles.length) return null;\n    return activeBattles.slice().sort((a, b) => a.distance - b.distance)[0];\n  }, [activeBattles]);\n\n  return (\n    <div className=\"main small-top\">\n      {/* Top bar */}\n      <div className=\"rs-live-topbar\">\n        <div className=\"rs-live-left\">\n          <span className=\"chip readonly\" style={{display:'flex',alignItems:'center',gap:8}}>\n            <span\n              aria-hidden\n              style={{\n                width: 10, height: 10, borderRadius: '50%',\n                background: '#ff4d4f', boxShadow: '0 0 12px rgba(255,77,79,.8)',\n                opacity: blink ? 1 : .25, transition: 'opacity .15s linear'\n              }}\n            />\n            LIVE\n          </span>\n          <span className=\"chip readonly\">{totalLaps} giri</span>\n\n          {/* Chip STATO con colori dinamici */}\n          <span\n            className=\"chip readonly\"\n            style={{\n              background: statusColors.chipBg,\n              border: `1px solid ${statusColors.chipBorder}`,\n              color: statusColors.chipText,\n              fontWeight: 800\n            }}\n          >\n            {raceStatus}\n          </span>\n        </div>\n        <div className=\"rs-live-right\">\n          <span className=\"chip readonly\">{circuitData?.name || 'Circuito'}</span>\n          {circuitData?.stats?.lengthMeters && <span className=\"chip readonly\">{circuitData.stats.lengthMeters.toFixed(0)} m</span>}\n          {circuitData?.params?.widthMeters && <span className=\"chip readonly\">{circuitData.params.widthMeters} m larghezza</span>}\n        </div>\n      </div>\n\n      {/* Griglia principale */}\n      <div className=\"rs-live-grid\">\n        <div className=\"track-card\">\n          <canvas ref={canvasRef} className=\"track-canvas\" />\n        </div>\n\n        {/* Classifica laterale: bordo dinamico per stato */}\n        <div\n          className=\"leaderboard-card\"\n          style={{\n            borderColor: statusColors.lbBorder ?? 'var(--line)',\n            boxShadow: statusColors.lbBorder\n              ? `0 8px 32px ${statusColors.lbBorder}33, inset 0 0 0 1px ${statusColors.lbBorder}55`\n              : undefined\n          }}\n        >\n          <div className=\"lb-header\">\n            <div className=\"lb-title\">CLASSIFICA</div>\n            <div className=\"lb-sub\">{leaderboard.length} piloti</div>\n          </div>\n\n          {/* {topBattle && (\n            <div className=\"lb-battle-overlay\">\n              <div className=\"battle-indicator\">\n                <div className=\"battle-line-left\"></div>\n                <div className=\"battle-content\">\n                  <div className=\"battle-label\">DUELLO</div>\n                  <div className=\"battle-gap\">{topBattle.distance.toFixed(1)} m</div>\n                </div>\n                <div className=\"battle-line-right\"></div>\n              </div>\n            </div>\n          )} */}\n\n          <div className=\"lb-list\">\n            {leaderboard.length === 0 ? (\n              <div className=\"no-drivers\">\n                <p>Nessun dato GPS ancora disponibile…</p>\n                <small className=\"muted\">Appena arrivano i pacchetti la classifica si popola</small>\n              </div>\n            ) : (\n              leaderboard.map((d, idx) => {\n                const leader = leaderboard[0];\n                const isLeader = idx === 0;\n                const fastest = d.bestLapTime && globalBestLap && d.bestLapTime === globalBestLap;\n                const isOvertaking = overtakingPairs.find(p => p.overtaker === d.mac);\n                const isBeingOvertaken = overtakingPairs.find(p => p.overtaken === d.mac);\n\n                return (\n                  <div\n                    key={d.mac}\n                    className={`lb-row ${isLeader ? 'lb-leader' : ''} ${isOvertaking ? 'overtaking' : ''} ${isBeingOvertaken ? 'being-overtaken' : ''}`}\n                    title={d.fullName}\n                  >\n                    <div className=\"lb-pos\">{idx + 1}</div>\n\n                    <div className=\"lb-team\">\n                      {d.photoTeamUrl ? (\n                        <img src={`${API_BASE}${d.photoTeamUrl}`} alt={d.team} className=\"lb-team-logo\" />\n                      ) : (\n                        <div className=\"lb-team-color\" style={{ background: d.color }} />\n                      )}\n                    </div>\n\n                    <div className=\"lb-name\">{d.tag}</div>\n\n                    <div className=\"lb-gap\">{isLeader ? 'LEADER' : gapToLeader(d, leader)}</div>\n\n                    <div className=\"lb-icons\">\n                      {fastest && <span className=\"lb-icon purple\" title={`Best lap ${formatLap(d.bestLapTime)}`}>⏱</span>}\n                      {d.pit && <span className=\"lb-icon\" title=\"Pit\">🅿️</span>}\n                      {d.out && <span className=\"lb-icon\" title=\"Out\">⛔</span>}\n                    </div>\n\n                    <div className=\"lb-lap\"><span className=\"muted\">Lap</span>&nbsp;{d.lapCount}/{totalLaps}</div>\n                  </div>\n                );\n              })\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* ======= CLASSIFICA FULL-WIDTH ======= */}\n      <div\n        className=\"leaderboard-card\"\n        style={{ marginTop: 12, width: '100%' }}\n      >\n        <div className=\"lb-header\" style={{display:'flex',justifyContent:'space-between',alignItems:'baseline'}}>\n          <div className=\"lb-title\">CLASSIFICA DETTAGLIATA</div>\n          <div className=\"lb-sub\">{leaderboard.length} piloti • tempi ultimo giro e miglior giro</div>\n        </div>\n\n        <div className=\"lb-list\">\n          {leaderboard.map((d, idx) => {\n            const leader = leaderboard[0];\n            const fastest = d.bestLapTime && globalBestLap && d.bestLapTime === globalBestLap;\n\n            return (\n              <div\n                key={`wide-${d.mac}`}\n                className=\"lb-row\"\n                style={{\n                  gridTemplateColumns: '28px 28px 1fr 90px 110px 110px 140px 90px',\n                }}\n                title={d.fullName}\n              >\n                <div className=\"lb-pos\">{idx + 1}</div>\n\n                <div className=\"lb-team\">\n                  {d.photoTeamUrl ? (\n                    <img src={`${API_BASE}${d.photoTeamUrl}`} alt={d.team} className=\"lb-team-logo\" />\n                  ) : (\n                    <div className=\"lb-team-color\" style={{ background: d.color }} />\n                  )}\n                </div>\n\n                <div className=\"lb-name\">{d.tag}</div>\n\n                <div className=\"lb-gap\" style={{textAlign:'right'}}>\n                  {idx === 0 ? 'LEADER' : gapToLeader(d, leader)}\n                </div>\n\n                <div className=\"lb-gap\" title=\"Ultimo giro\" style={{fontWeight:700, color:'#e9ffe0'}}>\n                  {formatLap(d.lastLapTime)}\n                </div>\n\n                <div className=\"lb-gap\" title=\"Miglior giro\" style={{fontWeight:700, color: fastest ? '#b085ff' : '#e9ffe0'}}>\n                  {formatLap(d.bestLapTime)}\n                  {fastest && <span className=\"lb-icon purple\" style={{marginLeft:6}}>⏱</span>}\n                </div>\n\n                {/* Penalità (somma e dettagli compatti) */}\n                <div className=\"lb-gap\" title=\"Penalità assegnate\" style={{fontWeight:800}}>\n                  {penaltySummary(d.mac)}\n                </div>\n\n                <div className=\"lb-lap\" style={{textAlign:'right'}}>\n                  <span className=\"muted\">Lap</span>&nbsp;{d.lapCount}/{totalLaps}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* ======= COMANDI GARA ======= */}\n      <div className=\"leaderboard-card\" style={{ marginTop: 12, width: '100%' }}>\n        <div className=\"lb-header\">\n          <div className=\"lb-title\">COMANDI GARA</div>\n        </div>\n\n        <div className=\"race-controls\" style={{ justifyContent: 'space-between', gap: 12, flexWrap: 'wrap' }}>\n          {/* Stato gara */}\n          <div style={{display:'flex', alignItems:'center', gap:8, flexWrap:'wrap', marginTop:'15px'}}>\n            <span className=\"muted\">Stato:</span>\n            {['IN CORSO','FINITA','RED FLAG','YELLOW FLAG'].map(s => (\n              <button\n                key={s}\n                className=\"btn-ghost\"\n                onClick={() => setRaceStatus(s)}\n                style={{\n                  borderColor: raceStatus === s ? 'rgba(192,255,3,0.6)' : 'var(--line)',\n                  boxShadow: raceStatus === s ? '0 0 0 2px rgba(192,255,3,0.12) inset' : 'none',\n                  fontWeight: 700\n                }}\n              >\n                {s}\n              </button>\n            ))}\n          </div>\n\n          {/* Sanzioni */}\n          <div style={{display:'flex', alignItems:'center', gap:8, flexWrap:'wrap'}}>\n            <span className=\"muted\">Sanzioni:</span>\n            <select\n              className=\"input\"\n              value={penTargetMac}\n              onChange={(e) => setPenTargetMac(e.target.value)}\n              style={{minWidth: 220}}\n            >\n              <option value=\"\">-- Seleziona pilota --</option>\n              {leaderboard.map(d => (\n                <option key={d.mac} value={d.mac}>{d.tag} — {d.fullName}</option>\n              ))}\n            </select>\n\n            {['+5s','+10s','+15s','1mo avv. squalifica','squalifica'].map(k => (\n              <button\n                key={k}\n                className=\"btn-ghost\"\n                disabled={!penTargetMac}\n                onClick={() => applyPenalty(k)}\n                style={{fontWeight:800}}\n              >\n                {k}\n              </button>\n            ))}\n\n            {penTargetMac && (\n              <span className=\"muted\" style={{marginLeft:6}}>\n                Attuale: <b>{penaltySummary(penTargetMac)}</b>\n              </span>\n            )}\n          </div>\n\n          <button className=\"btn-danger\" onClick={onStopRace}>Termina gara</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}