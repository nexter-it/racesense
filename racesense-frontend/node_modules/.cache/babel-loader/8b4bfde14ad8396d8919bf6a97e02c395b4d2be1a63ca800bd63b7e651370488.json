{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/racesense/racesense-frontend/src/pages/RaceLive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n/* ---------------- Utils ---------------- */\n\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity,\n    closestIdx = 0;\n  for (let i = 0; i < sectors.length; i++) {\n    const s = sectors[i];\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) {\n      minDist = d;\n      closestIdx = i;\n    }\n  }\n  return closestIdx;\n}\nfunction surnameTag(pilot) {\n  const last = ((pilot === null || pilot === void 0 ? void 0 : pilot.surname) || '').trim().toUpperCase();\n  return last.slice(0, 4) || 'PIL';\n}\n\n/* ---------------- Component ---------------- */\n\nexport default function RaceLive({\n  raceConfig,\n  onStopRace\n}) {\n  _s();\n  var _circuitData$stats, _circuitData$params2;\n  const {\n    circuitData,\n    totalLaps,\n    assignments,\n    pilots\n  } = raceConfig;\n  const [driversState, setDriversState] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeBattles, setActiveBattles] = useState([]);\n  const [overtakingPairs, setOvertakingPairs] = useState([]);\n\n  // Stato gara (mini-dashboard)\n  const [raceStatus, setRaceStatus] = useState('IN CORSO');\n\n  // refs per canvas/dati\n  const canvasRef = useRef(null);\n  const animFrameRef = useRef(null);\n  const driversRef = useRef({});\n  const zoomRef = useRef(1);\n  const panRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const isDraggingRef = useRef(false);\n  const lastMouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const lastPositionsRef = useRef({});\n\n  // Blink dot per LIVE\n  const [blink, setBlink] = useState(true);\n  useEffect(() => {\n    const t = setInterval(() => setBlink(b => !b), 700);\n    return () => clearInterval(t);\n  }, []);\n\n  // mantieni ref aggiornato senza triggerare re-render del canvas effect\n  useEffect(() => {\n    driversRef.current = driversState;\n  }, [driversState]);\n\n  /* ========== WebSocket GPS ========== */\n  useEffect(() => {\n    const ws = new WebSocket(WS_URL);\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.mac && data.lat && data.lon) {\n          const mac = String(data.mac);\n          if (!assignments[mac]) return;\n          handleGPSUpdate({\n            mac,\n            lat: Number(data.lat),\n            lon: Number(data.lon),\n            speed: Number(data.speedKmh || 0),\n            ts: data.ts || Date.now()\n          });\n        }\n      } catch {}\n    };\n    ws.onerror = e => console.error('[RaceLive] WS error', e);\n    return () => {\n      try {\n        ws.close();\n      } catch {}\n    };\n  }, [assignments]); // eslint-disable-line\n\n  /* ========== Colore Team (fallback) ========== */\n  const getTeamColor = useCallback((pilot, allPilots) => {\n    if (pilot.color) return pilot.color;\n    const teamPilots = allPilots.filter(p => p.team === pilot.team);\n    const pilotIndex = teamPilots.findIndex(p => p.id === pilot.id);\n    const teamHash = (pilot.team || 'TEAM').split('').reduce((acc, ch) => acc + ch.charCodeAt(0), 0);\n    const hue = teamHash * 137.508 % 360;\n    if (teamPilots.length > 1) {\n      const l = 50 + pilotIndex * 8;\n      const s = 75 - pilotIndex * 5;\n      return `hsl(${hue}, ${s}%, ${l}%)`;\n    }\n    return `hsl(${hue}, 75%, 55%)`;\n  }, []);\n\n  /* ========== GPS → Stato pilota ========== */\n  const handleGPSUpdate = useCallback(gps => {\n    if (!(circuitData !== null && circuitData !== void 0 && circuitData.sectors)) return;\n    const {\n      mac,\n      lat,\n      lon,\n      speed\n    } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n    const pilotId = assignments[mac];\n    const pilot = pilots.find(p => String(p.id) === String(pilotId));\n    if (!pilot) return;\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        pilotId,\n        pilot,\n        tag: surnameTag(pilot),\n        fullName: `${pilot.name || ''} ${pilot.surname || ''}`.trim(),\n        team: pilot.team,\n        color: getTeamColor(pilot, pilots),\n        photoTeamUrl: pilot.photoTeamUrl,\n        lat,\n        lon,\n        speed: 0,\n        sectorIdx,\n        lastSectorIdx: sectorIdx,\n        lapCount: 0,\n        lapStartTime: Date.now(),\n        lastLapTime: null,\n        bestLapTime: null,\n        pit: false,\n        out: false,\n        trail: []\n      };\n\n      // giro completato\n      let lapCount = existing.lapCount;\n      let lastLapTime = existing.lastLapTime;\n      let bestLapTime = existing.bestLapTime;\n      let lapStartTime = existing.lapStartTime;\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        const lapSec = (Date.now() - existing.lapStartTime) / 1000;\n        if (lapSec > 5) {\n          lapCount = existing.lapCount + 1;\n          lastLapTime = lapSec;\n          bestLapTime = !bestLapTime || lapSec < bestLapTime ? lapSec : bestLapTime;\n          lapStartTime = Date.now();\n        }\n      }\n      const trailLength = speed > 30 ? 40 : speed > 15 ? 25 : 15;\n      const trail = [...existing.trail, {\n        lat,\n        lon\n      }].slice(-trailLength);\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat,\n          lon,\n          speed,\n          sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount,\n          lastLapTime,\n          bestLapTime,\n          lapStartTime,\n          trail,\n          updatedAt: Date.now()\n        }\n      };\n    });\n  }, [circuitData, assignments, pilots, getTeamColor]);\n\n  /* ========== Classifica / Sorpassi / Duelli ========== */\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n    const newOvertakes = [];\n    const currentPos = {};\n    sorted.forEach((d, i) => {\n      currentPos[d.mac] = i;\n      const lastPos = lastPositionsRef.current[d.mac];\n      if (lastPos !== undefined && i < lastPos) {\n        const overtaken = sorted[i + 1];\n        if (overtaken && lastPositionsRef.current[overtaken.mac] === i) {\n          newOvertakes.push({\n            overtaker: d.mac,\n            overtaken: overtaken.mac,\n            timestamp: Date.now()\n          });\n        }\n      }\n    });\n    if (newOvertakes.length) {\n      setOvertakingPairs(prev => {\n        const now = Date.now();\n        const keep = prev.filter(p => now - p.timestamp < 1600);\n        return [...keep, ...newOvertakes];\n      });\n      setTimeout(() => {\n        lastPositionsRef.current = currentPos;\n      }, 1600);\n    } else {\n      const now = Date.now();\n      setOvertakingPairs(prev => prev.filter(p => now - p.timestamp < 1600));\n      if (overtakingPairs.length === 0) lastPositionsRef.current = currentPos;\n    }\n    const battles = [];\n    for (let i = 0; i < sorted.length - 1; i++) {\n      const a = sorted[i],\n        b = sorted[i + 1];\n      if (a.lapCount !== b.lapCount) continue;\n      const dist = haversine(a.lat, a.lon, b.lat, b.lon);\n      const was = activeBattles.some(x => x.leader.mac === a.mac && x.chaser.mac === b.mac || x.leader.mac === b.mac && x.chaser.mac === a.mac);\n      if (dist < 30 || was && dist < 35) {\n        battles.push({\n          leader: a,\n          chaser: b,\n          distance: dist,\n          position: i + 1\n        });\n      }\n    }\n    setActiveBattles(battles);\n    setLeaderboard(sorted);\n  }, [driversState]); // eslint-disable-line\n\n  const globalBestLap = useMemo(() => {\n    let best = null;\n    Object.values(driversState).forEach(d => {\n      if (d.bestLapTime && (best === null || d.bestLapTime < best)) best = d.bestLapTime;\n    });\n    return best;\n  }, [driversState]);\n\n  /* ========== Canvas: inizializza UNA SOLA VOLTA per circuito ========== */\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const ensureSize = () => {\n      const container = canvas.parentElement;\n      const w = container.clientWidth || 600;\n      const h = container.clientHeight || 520;\n      if (canvas.width !== Math.floor(w * dpr) || canvas.height !== Math.floor(h * dpr)) {\n        canvas.width = Math.floor(w * dpr);\n        canvas.height = Math.floor(h * dpr);\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n      }\n    };\n    const onResize = () => ensureSize();\n    ensureSize();\n    window.addEventListener('resize', onResize);\n    const wheel = e => {\n      e.preventDefault();\n      zoomRef.current = Math.max(0.5, Math.min(5, zoomRef.current * (e.deltaY > 0 ? 0.9 : 1.1)));\n    };\n    const mousedown = e => {\n      isDraggingRef.current = true;\n      lastMouseRef.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      canvas.style.cursor = 'grabbing';\n    };\n    const mousemove = e => {\n      if (!isDraggingRef.current) return;\n      const dx = e.clientX - lastMouseRef.current.x;\n      const dy = e.clientY - lastMouseRef.current.y;\n      panRef.current.x += dx;\n      panRef.current.y += dy;\n      lastMouseRef.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n    };\n    const mouseup = () => {\n      isDraggingRef.current = false;\n      canvas.style.cursor = 'grab';\n    };\n    canvas.addEventListener('wheel', wheel, {\n      passive: false\n    });\n    canvas.addEventListener('mousedown', mousedown);\n    canvas.addEventListener('mousemove', mousemove);\n    canvas.addEventListener('mouseup', mouseup);\n    canvas.addEventListener('mouseleave', mouseup);\n    canvas.style.cursor = 'grab';\n\n    // precompute projection params\n    const lats = circuitData.sectors.map(s => s.lat);\n    const lons = circuitData.sectors.map(s => s.lon);\n    const minLat = Math.min(...lats),\n      maxLat = Math.max(...lats);\n    const minLon = Math.min(...lons),\n      maxLon = Math.max(...lons);\n    const centerLat = (minLat + maxLat) / 2;\n    const centerLon = (minLon + maxLon) / 2;\n    const R = 6371000;\n    const centerLatRad = centerLat * Math.PI / 180;\n    const dxList = lons.map(l => (l - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad));\n    const dyList = lats.map(l => (l - centerLat) * Math.PI / 180 * R);\n    const maxDx = Math.max(...dxList.map(Math.abs));\n    const maxDy = Math.max(...dyList.map(Math.abs));\n    const padding = 40;\n    const project = (lat, lon) => {\n      const w = canvas.width / dpr;\n      const h = canvas.height / dpr;\n      const maxRange = Math.max(maxDx, maxDy) * 1.1;\n      const scale = Math.min(w - padding * 2, h - padding * 2) / (maxRange * 2) * zoomRef.current;\n      const dx = (lon - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad);\n      const dy = (lat - centerLat) * Math.PI / 180 * R;\n      const x = w / 2 + dx * scale + panRef.current.x;\n      const y = h / 2 - dy * scale + panRef.current.y;\n      return {\n        x,\n        y,\n        scale\n      };\n    };\n    const draw = () => {\n      var _circuitData$params$w, _circuitData$params, _pts$;\n      ensureSize();\n      const w = canvas.width / dpr;\n      const h = canvas.height / dpr;\n      ctx.clearRect(0, 0, w, h);\n      ctx.fillStyle = '#0a0a0a';\n      ctx.fillRect(0, 0, w, h);\n      const widthMeters = (_circuitData$params$w = (_circuitData$params = circuitData.params) === null || _circuitData$params === void 0 ? void 0 : _circuitData$params.widthMeters) !== null && _circuitData$params$w !== void 0 ? _circuitData$params$w : 6;\n      const pts = circuitData.sectors.map(s => project(s.lat, s.lon));\n      const scale = ((_pts$ = pts[0]) === null || _pts$ === void 0 ? void 0 : _pts$.scale) || 1;\n      const trackPx = Math.max(6, widthMeters * scale);\n\n      // bordo soft\n      ctx.strokeStyle = 'rgba(255,255,255,0.10)';\n      ctx.lineWidth = trackPx + 4;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      pts.forEach((p, i) => i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y));\n      ctx.closePath();\n      ctx.stroke();\n\n      // asfalto\n      ctx.strokeStyle = 'rgba(80, 84, 90, 0.95)';\n      ctx.lineWidth = trackPx;\n      ctx.beginPath();\n      pts.forEach((p, i) => i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y));\n      ctx.closePath();\n      ctx.stroke();\n\n      // start\n      if (pts.length > 1) {\n        const s0 = pts[0],\n          s1 = pts[1];\n        const ang = Math.atan2(s1.y - s0.y, s1.x - s0.x);\n        ctx.save();\n        ctx.translate(s0.x, s0.y);\n        ctx.rotate(ang);\n        ctx.strokeStyle = '#ffffff';\n        ctx.lineWidth = Math.max(2, trackPx * 0.12);\n        ctx.beginPath();\n        ctx.moveTo(0, -trackPx * 0.5);\n        ctx.lineTo(0, trackPx * 0.5);\n        ctx.stroke();\n        ctx.restore();\n      }\n\n      // piloti con dati dal ref\n      const sorted = Object.values(driversRef.current).sort((a, b) => {\n        if (a.lapCount !== b.lapCount) return a.lapCount - b.lapCount;\n        return a.sectorIdx - b.sectorIdx;\n      });\n      sorted.forEach((d, i) => {\n        var _d$trail;\n        const p = project(d.lat, d.lon);\n        if (((_d$trail = d.trail) === null || _d$trail === void 0 ? void 0 : _d$trail.length) > 1) {\n          ctx.strokeStyle = d.color;\n          ctx.globalAlpha = 0.6;\n          ctx.lineWidth = Math.max(2, trackPx * 0.12);\n          ctx.beginPath();\n          d.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti ? ctx.lineTo(tp.x, tp.y) : ctx.moveTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n          ctx.globalAlpha = 1;\n        }\n        const isLeader = i === sorted.length - 1;\n        const r = Math.max(5, trackPx * 0.18) + (isLeader ? 1 : 0);\n        ctx.shadowColor = 'rgba(0,0,0,0.5)';\n        ctx.shadowBlur = 4;\n        ctx.fillStyle = d.color;\n        ctx.beginPath();\n        ctx.arc(p.x, p.y, r, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.shadowBlur = 0;\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n        ctx.fillStyle = '#fff';\n        ctx.font = 'bold 10px Roboto, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.fillText(d.tag, p.x, p.y - (r + 8));\n      });\n      animFrameRef.current = requestAnimationFrame(draw);\n    };\n    draw();\n    return () => {\n      window.removeEventListener('resize', onResize);\n      canvas.removeEventListener('wheel', wheel);\n      canvas.removeEventListener('mousedown', mousedown);\n      canvas.removeEventListener('mousemove', mousemove);\n      canvas.removeEventListener('mouseup', mouseup);\n      canvas.removeEventListener('mouseleave', mouseup);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData]); // solo al cambio circuito\n\n  /* ---------- Helpers UI ---------- */\n\n  const gapToLeader = (driver, leader) => {\n    if (!leader || !driver) return '';\n    if (driver.lapCount < leader.lapCount) return `+${leader.lapCount - driver.lapCount}L`;\n    const sectorDiff = leader.sectorIdx - driver.sectorIdx;\n    const est = Math.max(0, sectorDiff / 10);\n    return `+${est.toFixed(2)}`;\n  };\n  const formatLap = s => {\n    if (!s) return '—';\n    const m = Math.floor(s / 60);\n    const sec = (s % 60).toFixed(3);\n    return `${m}:${sec.padStart(6, '0')}`;\n  };\n\n  /* ---------- Render ---------- */\n\n  // battaglia “top” solo per overlay, per non allungare la card\n  const topBattle = useMemo(() => {\n    if (!activeBattles.length) return null;\n    return activeBattles.slice().sort((a, b) => a.distance - b.distance)[0];\n  }, [activeBattles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main small-top\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rs-live-topbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rs-live-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-hidden\": true,\n            style: {\n              width: 10,\n              height: 10,\n              borderRadius: '50%',\n              background: '#ff4d4f',\n              boxShadow: '0 0 12px rgba(255,77,79,.8)',\n              opacity: blink ? 1 : .25,\n              transition: 'opacity .15s linear'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), \"LIVE\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: [totalLaps, \" giri\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: raceStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rs-live-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: (circuitData === null || circuitData === void 0 ? void 0 : circuitData.name) || 'Circuito'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), (circuitData === null || circuitData === void 0 ? void 0 : (_circuitData$stats = circuitData.stats) === null || _circuitData$stats === void 0 ? void 0 : _circuitData$stats.lengthMeters) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: [circuitData.stats.lengthMeters.toFixed(0), \" m\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 48\n        }, this), (circuitData === null || circuitData === void 0 ? void 0 : (_circuitData$params2 = circuitData.params) === null || _circuitData$params2 === void 0 ? void 0 : _circuitData$params2.widthMeters) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chip readonly\",\n          children: [circuitData.params.widthMeters, \" m larghezza\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rs-live-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-card\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"track-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lb-title\",\n            children: \"CLASSIFICA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lb-sub\",\n            children: [leaderboard.length, \" piloti\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), topBattle && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-battle-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"battle-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"battle-line-left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"battle-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"battle-label\",\n                children: \"DUELLO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"battle-gap\",\n                children: [topBattle.distance.toFixed(1), \" m\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"battle-line-right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-list\",\n          children: leaderboard.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-drivers\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Nessun dato GPS ancora disponibile\\u2026\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"muted\",\n              children: \"Appena arrivano i pacchetti la classifica si popola\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this) : leaderboard.map((d, idx) => {\n            const leader = leaderboard[0];\n            const isLeader = idx === 0;\n            const fastest = d.bestLapTime && globalBestLap && d.bestLapTime === globalBestLap;\n            const isOvertaking = overtakingPairs.find(p => p.overtaker === d.mac);\n            const isBeingOvertaken = overtakingPairs.find(p => p.overtaken === d.mac);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `lb-row ${isLeader ? 'lb-leader' : ''} ${isOvertaking ? 'overtaking' : ''} ${isBeingOvertaken ? 'being-overtaken' : ''}`,\n              title: d.fullName,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-pos\",\n                children: idx + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-team\",\n                children: d.photoTeamUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${API_BASE}${d.photoTeamUrl}`,\n                  alt: d.team,\n                  className: \"lb-team-logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"lb-team-color\",\n                  style: {\n                    background: d.color\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-name\",\n                children: d.tag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-gap\",\n                children: isLeader ? 'LEADER' : gapToLeader(d, leader)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-icons\",\n                children: [fastest && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lb-icon purple\",\n                  title: `Best lap ${formatLap(d.bestLapTime)}`,\n                  children: \"\\u23F1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 35\n                }, this), d.pit && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lb-icon\",\n                  title: \"Pit\",\n                  children: \"\\uD83C\\uDD7F\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 33\n                }, this), d.out && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"lb-icon\",\n                  title: \"Out\",\n                  children: \"\\u26D4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-lap\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"muted\",\n                  children: \"Lap\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 45\n                }, this), \"\\xA0\", d.lapCount, \"/\", totalLaps]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 21\n              }, this)]\n            }, d.mac, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-card\",\n      style: {\n        marginTop: 12,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lb-header\",\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'baseline'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-title\",\n          children: \"CLASSIFICA DETTAGLI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lb-sub\",\n          children: [leaderboard.length, \" piloti \\u2022 tempi ultimo giro e miglior giro\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lb-list\",\n        children: leaderboard.map((d, idx) => {\n          const leader = leaderboard[0];\n          const fastest = d.bestLapTime && globalBestLap && d.bestLapTime === globalBestLap;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"lb-row\",\n            style: {\n              // layout wide: POS | TEAM | TAG | GAP | LAST | BEST | LAP\n              gridTemplateColumns: '28px 28px 1fr 90px 110px 110px 90px'\n            },\n            title: d.fullName,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-pos\",\n              children: idx + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-team\",\n              children: d.photoTeamUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `${API_BASE}${d.photoTeamUrl}`,\n                alt: d.team,\n                className: \"lb-team-logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"lb-team-color\",\n                style: {\n                  background: d.color\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-name\",\n              children: d.tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-gap\",\n              style: {\n                textAlign: 'right'\n              },\n              children: idx === 0 ? 'LEADER' : gapToLeader(d, leader)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-gap\",\n              title: \"Ultimo giro\",\n              style: {\n                fontWeight: 700,\n                color: '#e9ffe0'\n              },\n              children: formatLap(d.lastLapTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-gap\",\n              title: \"Miglior giro\",\n              style: {\n                fontWeight: 700,\n                color: fastest ? '#b085ff' : '#e9ffe0'\n              },\n              children: [formatLap(d.bestLapTime), fastest && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"lb-icon purple\",\n                style: {\n                  marginLeft: 6\n                },\n                children: \"\\u23F1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lb-lap\",\n              style: {\n                textAlign: 'right'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"muted\",\n                children: \"Lap\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 19\n              }, this), \"\\xA0\", d.lapCount, \"/\", totalLaps]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this)]\n          }, `wide-${d.mac}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"race-controls\",\n      style: {\n        justifyContent: 'space-between',\n        gap: 8,\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 8,\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"muted\",\n          children: \"Stato gara:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), ['IN CORSO', 'FINITA', 'RED FLAG', 'YELLOW FLAG'].map(s => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-ghost\",\n          onClick: () => setRaceStatus(s),\n          style: {\n            borderColor: raceStatus === s ? 'rgba(192,255,3,0.6)' : 'var(--line)',\n            boxShadow: raceStatus === s ? '0 0 0 2px rgba(192,255,3,0.12) inset' : 'none',\n            fontWeight: 700\n          },\n          children: s\n        }, s, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-danger\",\n        onClick: onStopRace,\n        children: \"Termina gara\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 5\n  }, this);\n}\n_s(RaceLive, \"nGnDvSJLtYpKjBgJ/5hEIbDOtwE=\");\n_c = RaceLive;\nvar _c;\n$RefreshReg$(_c, \"RaceLive\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","window","location","hostname","WS_URL","REACT_APP_WS_URL","haversine","lat1","lon1","lat2","lon2","R","toRad","d","Math","PI","dLat","dLon","a","sin","cos","atan2","sqrt","findClosestSector","lat","lon","sectors","minDist","Infinity","closestIdx","i","length","s","surnameTag","pilot","last","surname","trim","toUpperCase","slice","RaceLive","raceConfig","onStopRace","_s","_circuitData$stats","_circuitData$params2","circuitData","totalLaps","assignments","pilots","driversState","setDriversState","leaderboard","setLeaderboard","activeBattles","setActiveBattles","overtakingPairs","setOvertakingPairs","raceStatus","setRaceStatus","canvasRef","animFrameRef","driversRef","zoomRef","panRef","x","y","isDraggingRef","lastMouseRef","lastPositionsRef","blink","setBlink","t","setInterval","b","clearInterval","current","ws","WebSocket","onmessage","event","data","JSON","parse","mac","String","handleGPSUpdate","Number","speed","speedKmh","ts","Date","now","onerror","e","console","error","close","getTeamColor","allPilots","color","teamPilots","filter","p","team","pilotIndex","findIndex","id","teamHash","split","reduce","acc","ch","charCodeAt","hue","l","gps","sectorIdx","totalSectors","pilotId","find","prev","existing","tag","fullName","name","photoTeamUrl","lastSectorIdx","lapCount","lapStartTime","lastLapTime","bestLapTime","pit","out","trail","lapSec","trailLength","updatedAt","sorted","Object","values","sort","newOvertakes","currentPos","forEach","lastPos","undefined","overtaken","push","overtaker","timestamp","keep","setTimeout","battles","dist","was","some","leader","chaser","distance","position","globalBestLap","best","canvas","ctx","getContext","dpr","devicePixelRatio","ensureSize","container","parentElement","w","clientWidth","h","clientHeight","width","floor","height","setTransform","onResize","addEventListener","wheel","preventDefault","max","min","deltaY","mousedown","clientX","clientY","style","cursor","mousemove","dx","dy","mouseup","passive","lats","map","lons","minLat","maxLat","minLon","maxLon","centerLat","centerLon","centerLatRad","dxList","dyList","maxDx","abs","maxDy","padding","project","maxRange","scale","draw","_circuitData$params$w","_circuitData$params","_pts$","clearRect","fillStyle","fillRect","widthMeters","params","pts","trackPx","strokeStyle","lineWidth","lineCap","lineJoin","beginPath","lineTo","moveTo","closePath","stroke","s0","s1","ang","save","translate","rotate","restore","_d$trail","globalAlpha","ti","tp","isLeader","r","shadowColor","shadowBlur","arc","fill","font","textAlign","fillText","requestAnimationFrame","removeEventListener","cancelAnimationFrame","gapToLeader","driver","sectorDiff","est","toFixed","formatLap","m","sec","padStart","topBattle","className","children","display","alignItems","gap","borderRadius","background","boxShadow","opacity","transition","fileName","_jsxFileName","lineNumber","columnNumber","stats","lengthMeters","ref","idx","fastest","isOvertaking","isBeingOvertaken","title","src","alt","marginTop","justifyContent","gridTemplateColumns","fontWeight","marginLeft","flexWrap","onClick","borderColor","_c","$RefreshReg$"],"sources":["/home/ubuntu/racesense/racesense-frontend/src/pages/RaceLive.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport '../App.css';\n\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n/* ---------------- Utils ---------------- */\n\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 +\n            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity, closestIdx = 0;\n  for (let i = 0; i < sectors.length; i++) {\n    const s = sectors[i];\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) { minDist = d; closestIdx = i; }\n  }\n  return closestIdx;\n}\nfunction surnameTag(pilot) {\n  const last = (pilot?.surname || '').trim().toUpperCase();\n  return last.slice(0, 4) || 'PIL';\n}\n\n/* ---------------- Component ---------------- */\n\nexport default function RaceLive({ raceConfig, onStopRace }) {\n  const { circuitData, totalLaps, assignments, pilots } = raceConfig;\n\n  const [driversState, setDriversState] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeBattles, setActiveBattles] = useState([]);\n  const [overtakingPairs, setOvertakingPairs] = useState([]);\n\n  // Stato gara (mini-dashboard)\n  const [raceStatus, setRaceStatus] = useState('IN CORSO');\n\n  // refs per canvas/dati\n  const canvasRef = useRef(null);\n  const animFrameRef = useRef(null);\n  const driversRef = useRef({});\n  const zoomRef = useRef(1);\n  const panRef = useRef({ x: 0, y: 0 });\n  const isDraggingRef = useRef(false);\n  const lastMouseRef = useRef({ x: 0, y: 0 });\n  const lastPositionsRef = useRef({});\n\n  // Blink dot per LIVE\n  const [blink, setBlink] = useState(true);\n  useEffect(() => {\n    const t = setInterval(() => setBlink(b => !b), 700);\n    return () => clearInterval(t);\n  }, []);\n\n  // mantieni ref aggiornato senza triggerare re-render del canvas effect\n  useEffect(() => { driversRef.current = driversState; }, [driversState]);\n\n  /* ========== WebSocket GPS ========== */\n  useEffect(() => {\n    const ws = new WebSocket(WS_URL);\n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.mac && data.lat && data.lon) {\n          const mac = String(data.mac);\n          if (!assignments[mac]) return;\n          handleGPSUpdate({\n            mac,\n            lat: Number(data.lat),\n            lon: Number(data.lon),\n            speed: Number(data.speedKmh || 0),\n            ts: data.ts || Date.now(),\n          });\n        }\n      } catch {}\n    };\n    ws.onerror = (e) => console.error('[RaceLive] WS error', e);\n    return () => { try { ws.close(); } catch {} };\n  }, [assignments]); // eslint-disable-line\n\n  /* ========== Colore Team (fallback) ========== */\n  const getTeamColor = useCallback((pilot, allPilots) => {\n    if (pilot.color) return pilot.color;\n    const teamPilots = allPilots.filter(p => p.team === pilot.team);\n    const pilotIndex = teamPilots.findIndex(p => p.id === pilot.id);\n    const teamHash = (pilot.team || 'TEAM').split('').reduce((acc, ch) => acc + ch.charCodeAt(0), 0);\n    const hue = (teamHash * 137.508) % 360;\n    if (teamPilots.length > 1) {\n      const l = 50 + (pilotIndex * 8);\n      const s = 75 - (pilotIndex * 5);\n      return `hsl(${hue}, ${s}%, ${l}%)`;\n    }\n    return `hsl(${hue}, 75%, 55%)`;\n  }, []);\n\n  /* ========== GPS → Stato pilota ========== */\n  const handleGPSUpdate = useCallback((gps) => {\n    if (!circuitData?.sectors) return;\n\n    const { mac, lat, lon, speed } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n\n    const pilotId = assignments[mac];\n    const pilot = pilots.find(p => String(p.id) === String(pilotId));\n    if (!pilot) return;\n\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        pilotId,\n        pilot,\n        tag: surnameTag(pilot),\n        fullName: `${pilot.name || ''} ${pilot.surname || ''}`.trim(),\n        team: pilot.team,\n        color: getTeamColor(pilot, pilots),\n        photoTeamUrl: pilot.photoTeamUrl,\n        lat, lon, speed: 0,\n        sectorIdx,\n        lastSectorIdx: sectorIdx,\n        lapCount: 0,\n        lapStartTime: Date.now(),\n        lastLapTime: null,\n        bestLapTime: null,\n        pit: false,\n        out: false,\n        trail: []\n      };\n\n      // giro completato\n      let lapCount = existing.lapCount;\n      let lastLapTime = existing.lastLapTime;\n      let bestLapTime = existing.bestLapTime;\n      let lapStartTime = existing.lapStartTime;\n\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        const lapSec = (Date.now() - existing.lapStartTime) / 1000;\n        if (lapSec > 5) {\n          lapCount = existing.lapCount + 1;\n          lastLapTime = lapSec;\n          bestLapTime = !bestLapTime || lapSec < bestLapTime ? lapSec : bestLapTime;\n          lapStartTime = Date.now();\n        }\n      }\n\n      const trailLength = speed > 30 ? 40 : speed > 15 ? 25 : 15;\n      const trail = [...existing.trail, { lat, lon }].slice(-trailLength);\n\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat, lon, speed, sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount, lastLapTime, bestLapTime, lapStartTime,\n          trail,\n          updatedAt: Date.now()\n        }\n      };\n    });\n  }, [circuitData, assignments, pilots, getTeamColor]);\n\n  /* ========== Classifica / Sorpassi / Duelli ========== */\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n\n    const newOvertakes = [];\n    const currentPos = {};\n    sorted.forEach((d, i) => {\n      currentPos[d.mac] = i;\n      const lastPos = lastPositionsRef.current[d.mac];\n      if (lastPos !== undefined && i < lastPos) {\n        const overtaken = sorted[i + 1];\n        if (overtaken && lastPositionsRef.current[overtaken.mac] === i) {\n          newOvertakes.push({ overtaker: d.mac, overtaken: overtaken.mac, timestamp: Date.now() });\n        }\n      }\n    });\n    if (newOvertakes.length) {\n      setOvertakingPairs(prev => {\n        const now = Date.now();\n        const keep = prev.filter(p => now - p.timestamp < 1600);\n        return [...keep, ...newOvertakes];\n      });\n      setTimeout(() => { lastPositionsRef.current = currentPos; }, 1600);\n    } else {\n      const now = Date.now();\n      setOvertakingPairs(prev => prev.filter(p => now - p.timestamp < 1600));\n      if (overtakingPairs.length === 0) lastPositionsRef.current = currentPos;\n    }\n\n    const battles = [];\n    for (let i = 0; i < sorted.length - 1; i++) {\n      const a = sorted[i], b = sorted[i + 1];\n      if (a.lapCount !== b.lapCount) continue;\n      const dist = haversine(a.lat, a.lon, b.lat, b.lon);\n      const was = activeBattles.some(x =>\n        (x.leader.mac === a.mac && x.chaser.mac === b.mac) ||\n        (x.leader.mac === b.mac && x.chaser.mac === a.mac)\n      );\n      if (dist < 30 || (was && dist < 35)) {\n        battles.push({ leader: a, chaser: b, distance: dist, position: i + 1 });\n      }\n    }\n    setActiveBattles(battles);\n    setLeaderboard(sorted);\n  }, [driversState]); // eslint-disable-line\n\n  const globalBestLap = useMemo(() => {\n    let best = null;\n    Object.values(driversState).forEach(d => {\n      if (d.bestLapTime && (best === null || d.bestLapTime < best)) best = d.bestLapTime;\n    });\n    return best;\n  }, [driversState]);\n\n  /* ========== Canvas: inizializza UNA SOLA VOLTA per circuito ========== */\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n\n    const ensureSize = () => {\n      const container = canvas.parentElement;\n      const w = container.clientWidth || 600;\n      const h = container.clientHeight || 520;\n      if (canvas.width !== Math.floor(w * dpr) || canvas.height !== Math.floor(h * dpr)) {\n        canvas.width = Math.floor(w * dpr);\n        canvas.height = Math.floor(h * dpr);\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n      }\n    };\n\n    const onResize = () => ensureSize();\n    ensureSize();\n    window.addEventListener('resize', onResize);\n\n    const wheel = (e) => { e.preventDefault(); zoomRef.current = Math.max(0.5, Math.min(5, zoomRef.current * (e.deltaY > 0 ? 0.9 : 1.1))); };\n    const mousedown = (e) => { isDraggingRef.current = true; lastMouseRef.current = { x: e.clientX, y: e.clientY }; canvas.style.cursor = 'grabbing'; };\n    const mousemove = (e) => {\n      if (!isDraggingRef.current) return;\n      const dx = e.clientX - lastMouseRef.current.x;\n      const dy = e.clientY - lastMouseRef.current.y;\n      panRef.current.x += dx; panRef.current.y += dy;\n      lastMouseRef.current = { x: e.clientX, y: e.clientY };\n    };\n    const mouseup = () => { isDraggingRef.current = false; canvas.style.cursor = 'grab'; };\n\n    canvas.addEventListener('wheel', wheel, { passive: false });\n    canvas.addEventListener('mousedown', mousedown);\n    canvas.addEventListener('mousemove', mousemove);\n    canvas.addEventListener('mouseup', mouseup);\n    canvas.addEventListener('mouseleave', mouseup);\n    canvas.style.cursor = 'grab';\n\n    // precompute projection params\n    const lats = circuitData.sectors.map(s => s.lat);\n    const lons = circuitData.sectors.map(s => s.lon);\n    const minLat = Math.min(...lats), maxLat = Math.max(...lats);\n    const minLon = Math.min(...lons), maxLon = Math.max(...lons);\n    const centerLat = (minLat + maxLat) / 2;\n    const centerLon = (minLon + maxLon) / 2;\n    const R = 6371000;\n    const centerLatRad = centerLat * Math.PI / 180;\n    const dxList = lons.map(l => (l - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad));\n    const dyList = lats.map(l => (l - centerLat) * Math.PI / 180 * R);\n    const maxDx = Math.max(...dxList.map(Math.abs));\n    const maxDy = Math.max(...dyList.map(Math.abs));\n    const padding = 40;\n\n    const project = (lat, lon) => {\n      const w = canvas.width / dpr;\n      const h = canvas.height / dpr;\n      const maxRange = Math.max(maxDx, maxDy) * 1.1;\n      const scale = Math.min(w - padding * 2, h - padding * 2) / (maxRange * 2) * zoomRef.current;\n      const dx = (lon - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad);\n      const dy = (lat - centerLat) * Math.PI / 180 * R;\n      const x = w / 2 + dx * scale + panRef.current.x;\n      const y = h / 2 - dy * scale + panRef.current.y;\n      return { x, y, scale };\n    };\n\n    const draw = () => {\n      ensureSize();\n\n      const w = canvas.width / dpr;\n      const h = canvas.height / dpr;\n      ctx.clearRect(0, 0, w, h);\n      ctx.fillStyle = '#0a0a0a';\n      ctx.fillRect(0, 0, w, h);\n\n      const widthMeters = circuitData.params?.widthMeters ?? 6;\n      const pts = circuitData.sectors.map(s => project(s.lat, s.lon));\n      const scale = pts[0]?.scale || 1;\n      const trackPx = Math.max(6, widthMeters * scale);\n\n      // bordo soft\n      ctx.strokeStyle = 'rgba(255,255,255,0.10)';\n      ctx.lineWidth = trackPx + 4;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      pts.forEach((p, i) => i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y));\n      ctx.closePath(); ctx.stroke();\n\n      // asfalto\n      ctx.strokeStyle = 'rgba(80, 84, 90, 0.95)';\n      ctx.lineWidth = trackPx;\n      ctx.beginPath();\n      pts.forEach((p, i) => i ? ctx.lineTo(p.x, p.y) : ctx.moveTo(p.x, p.y));\n      ctx.closePath(); ctx.stroke();\n\n      // start\n      if (pts.length > 1) {\n        const s0 = pts[0], s1 = pts[1];\n        const ang = Math.atan2(s1.y - s0.y, s1.x - s0.x);\n        ctx.save(); ctx.translate(s0.x, s0.y); ctx.rotate(ang);\n        ctx.strokeStyle = '#ffffff';\n        ctx.lineWidth = Math.max(2, trackPx * 0.12);\n        ctx.beginPath(); ctx.moveTo(0, -trackPx * 0.5); ctx.lineTo(0, trackPx * 0.5); ctx.stroke();\n        ctx.restore();\n      }\n\n      // piloti con dati dal ref\n      const sorted = Object.values(driversRef.current).sort((a, b) => {\n        if (a.lapCount !== b.lapCount) return a.lapCount - b.lapCount;\n        return a.sectorIdx - b.sectorIdx;\n      });\n\n      sorted.forEach((d, i) => {\n        const p = project(d.lat, d.lon);\n\n        if (d.trail?.length > 1) {\n          ctx.strokeStyle = d.color;\n          ctx.globalAlpha = 0.6;\n          ctx.lineWidth = Math.max(2, trackPx * 0.12);\n          ctx.beginPath();\n          d.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti ? ctx.lineTo(tp.x, tp.y) : ctx.moveTo(tp.x, tp.y);\n          });\n          ctx.stroke(); ctx.globalAlpha = 1;\n        }\n\n        const isLeader = i === sorted.length - 1;\n        const r = Math.max(5, trackPx * 0.18) + (isLeader ? 1 : 0);\n        ctx.shadowColor = 'rgba(0,0,0,0.5)'; ctx.shadowBlur = 4;\n        ctx.fillStyle = d.color; ctx.beginPath(); ctx.arc(p.x, p.y, r, 0, Math.PI * 2); ctx.fill();\n        ctx.shadowBlur = 0; ctx.strokeStyle = '#fff'; ctx.lineWidth = 2; ctx.stroke();\n\n        ctx.fillStyle = '#fff'; ctx.font = 'bold 10px Roboto, sans-serif'; ctx.textAlign = 'center';\n        ctx.fillText(d.tag, p.x, p.y - (r + 8));\n      });\n\n      animFrameRef.current = requestAnimationFrame(draw);\n    };\n\n    draw();\n\n    return () => {\n      window.removeEventListener('resize', onResize);\n      canvas.removeEventListener('wheel', wheel);\n      canvas.removeEventListener('mousedown', mousedown);\n      canvas.removeEventListener('mousemove', mousemove);\n      canvas.removeEventListener('mouseup', mouseup);\n      canvas.removeEventListener('mouseleave', mouseup);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData]); // solo al cambio circuito\n\n  /* ---------- Helpers UI ---------- */\n\n  const gapToLeader = (driver, leader) => {\n    if (!leader || !driver) return '';\n    if (driver.lapCount < leader.lapCount) return `+${leader.lapCount - driver.lapCount}L`;\n    const sectorDiff = leader.sectorIdx - driver.sectorIdx;\n    const est = Math.max(0, sectorDiff / 10);\n    return `+${est.toFixed(2)}`;\n  };\n  const formatLap = (s) => {\n    if (!s) return '—';\n    const m = Math.floor(s / 60);\n    const sec = (s % 60).toFixed(3);\n    return `${m}:${sec.padStart(6, '0')}`;\n  };\n\n  /* ---------- Render ---------- */\n\n  // battaglia “top” solo per overlay, per non allungare la card\n  const topBattle = useMemo(() => {\n    if (!activeBattles.length) return null;\n    return activeBattles.slice().sort((a, b) => a.distance - b.distance)[0];\n  }, [activeBattles]);\n\n  return (\n    <div className=\"main small-top\">\n      {/* Top bar */}\n      <div className=\"rs-live-topbar\">\n        <div className=\"rs-live-left\">\n          <span className=\"chip readonly\" style={{display:'flex',alignItems:'center',gap:8}}>\n            <span\n              aria-hidden\n              style={{\n                width: 10,\n                height: 10,\n                borderRadius: '50%',\n                background: '#ff4d4f',\n                boxShadow: '0 0 12px rgba(255,77,79,.8)',\n                opacity: blink ? 1 : .25,\n                transition: 'opacity .15s linear'\n              }}\n            />\n            LIVE\n          </span>\n          <span className=\"chip readonly\">{totalLaps} giri</span>\n          <span className=\"chip readonly\">{raceStatus}</span>\n        </div>\n        <div className=\"rs-live-right\">\n          <span className=\"chip readonly\">{circuitData?.name || 'Circuito'}</span>\n          {circuitData?.stats?.lengthMeters && <span className=\"chip readonly\">{circuitData.stats.lengthMeters.toFixed(0)} m</span>}\n          {circuitData?.params?.widthMeters && <span className=\"chip readonly\">{circuitData.params.widthMeters} m larghezza</span>}\n        </div>\n      </div>\n\n      {/* Griglia principale */}\n      <div className=\"rs-live-grid\">\n        <div className=\"track-card\">\n          <canvas ref={canvasRef} className=\"track-canvas\" />\n        </div>\n\n        <div className=\"leaderboard-card\">\n          <div className=\"lb-header\">\n            <div className=\"lb-title\">CLASSIFICA</div>\n            <div className=\"lb-sub\">{leaderboard.length} piloti</div>\n          </div>\n\n          {topBattle && (\n            <div className=\"lb-battle-overlay\">\n              <div className=\"battle-indicator\">\n                <div className=\"battle-line-left\"></div>\n                <div className=\"battle-content\">\n                  <div className=\"battle-label\">DUELLO</div>\n                  <div className=\"battle-gap\">{topBattle.distance.toFixed(1)} m</div>\n                </div>\n                <div className=\"battle-line-right\"></div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"lb-list\">\n            {leaderboard.length === 0 ? (\n              <div className=\"no-drivers\">\n                <p>Nessun dato GPS ancora disponibile…</p>\n                <small className=\"muted\">Appena arrivano i pacchetti la classifica si popola</small>\n              </div>\n            ) : (\n              leaderboard.map((d, idx) => {\n                const leader = leaderboard[0];\n                const isLeader = idx === 0;\n                const fastest = d.bestLapTime && globalBestLap && d.bestLapTime === globalBestLap;\n                const isOvertaking = overtakingPairs.find(p => p.overtaker === d.mac);\n                const isBeingOvertaken = overtakingPairs.find(p => p.overtaken === d.mac);\n\n                return (\n                  <div\n                    key={d.mac}\n                    className={`lb-row ${isLeader ? 'lb-leader' : ''} ${isOvertaking ? 'overtaking' : ''} ${isBeingOvertaken ? 'being-overtaken' : ''}`}\n                    title={d.fullName}\n                  >\n                    <div className=\"lb-pos\">{idx + 1}</div>\n\n                    <div className=\"lb-team\">\n                      {d.photoTeamUrl ? (\n                        <img src={`${API_BASE}${d.photoTeamUrl}`} alt={d.team} className=\"lb-team-logo\" />\n                      ) : (\n                        <div className=\"lb-team-color\" style={{ background: d.color }} />\n                      )}\n                    </div>\n\n                    <div className=\"lb-name\">{d.tag}</div>\n\n                    <div className=\"lb-gap\">{isLeader ? 'LEADER' : gapToLeader(d, leader)}</div>\n\n                    <div className=\"lb-icons\">\n                      {fastest && <span className=\"lb-icon purple\" title={`Best lap ${formatLap(d.bestLapTime)}`}>⏱</span>}\n                      {d.pit && <span className=\"lb-icon\" title=\"Pit\">🅿️</span>}\n                      {d.out && <span className=\"lb-icon\" title=\"Out\">⛔</span>}\n                    </div>\n\n                    <div className=\"lb-lap\"><span className=\"muted\">Lap</span>&nbsp;{d.lapCount}/{totalLaps}</div>\n                  </div>\n                );\n              })\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* ======= CLASSIFICA FULL-WIDTH con Ultimo/Best ======= */}\n      <div\n        className=\"leaderboard-card\"\n        style={{\n          marginTop: 12,\n          width: '100%',\n        }}\n      >\n        <div className=\"lb-header\" style={{display:'flex',justifyContent:'space-between',alignItems:'baseline'}}>\n          <div className=\"lb-title\">CLASSIFICA DETTAGLI</div>\n          <div className=\"lb-sub\">{leaderboard.length} piloti • tempi ultimo giro e miglior giro</div>\n        </div>\n\n        <div className=\"lb-list\">\n          {leaderboard.map((d, idx) => {\n            const leader = leaderboard[0];\n            const fastest = d.bestLapTime && globalBestLap && d.bestLapTime === globalBestLap;\n\n            return (\n              <div\n                key={`wide-${d.mac}`}\n                className=\"lb-row\"\n                style={{\n                  // layout wide: POS | TEAM | TAG | GAP | LAST | BEST | LAP\n                  gridTemplateColumns: '28px 28px 1fr 90px 110px 110px 90px',\n                }}\n                title={d.fullName}\n              >\n                <div className=\"lb-pos\">{idx + 1}</div>\n\n                <div className=\"lb-team\">\n                  {d.photoTeamUrl ? (\n                    <img src={`${API_BASE}${d.photoTeamUrl}`} alt={d.team} className=\"lb-team-logo\" />\n                  ) : (\n                    <div className=\"lb-team-color\" style={{ background: d.color }} />\n                  )}\n                </div>\n\n                <div className=\"lb-name\">{d.tag}</div>\n\n                <div className=\"lb-gap\" style={{textAlign:'right'}}>\n                  {idx === 0 ? 'LEADER' : gapToLeader(d, leader)}\n                </div>\n\n                <div className=\"lb-gap\" title=\"Ultimo giro\" style={{fontWeight:700, color:'#e9ffe0'}}>\n                  {formatLap(d.lastLapTime)}\n                </div>\n\n                <div className=\"lb-gap\" title=\"Miglior giro\" style={{fontWeight:700, color: fastest ? '#b085ff' : '#e9ffe0'}}>\n                  {formatLap(d.bestLapTime)}\n                  {fastest && <span className=\"lb-icon purple\" style={{marginLeft:6}}>⏱</span>}\n                </div>\n\n                <div className=\"lb-lap\" style={{textAlign:'right'}}>\n                  <span className=\"muted\">Lap</span>&nbsp;{d.lapCount}/{totalLaps}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* ======= MINI-DASHBOARD STATO GARA ======= */}\n      <div className=\"race-controls\" style={{ justifyContent: 'space-between', gap: 8, flexWrap: 'wrap' }}>\n        <div style={{display:'flex', alignItems:'center', gap:8, flexWrap:'wrap'}}>\n          <span className=\"muted\">Stato gara:</span>\n          {['IN CORSO','FINITA','RED FLAG','YELLOW FLAG'].map(s => (\n            <button\n              key={s}\n              className=\"btn-ghost\"\n              onClick={() => setRaceStatus(s)}\n              style={{\n                borderColor: raceStatus === s ? 'rgba(192,255,3,0.6)' : 'var(--line)',\n                boxShadow: raceStatus === s ? '0 0 0 2px rgba(192,255,3,0.12) inset' : 'none',\n                fontWeight: 700\n              }}\n            >\n              {s}\n            </button>\n          ))}\n        </div>\n\n        <button className=\"btn-danger\" onClick={onStopRace}>Termina gara</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}