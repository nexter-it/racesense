{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/racesense/racesense-frontend/src/pages/RaceLive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './Race.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n// Utility: calcola distanza Haversine (m)\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n// Trova il settore piÃ¹ vicino\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity;\n  let closestIdx = 0;\n  sectors.forEach((s, i) => {\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) {\n      minDist = d;\n      closestIdx = i;\n    }\n  });\n  return closestIdx;\n}\nexport default function RaceLive({\n  raceConfig,\n  onStopRace\n}) {\n  _s();\n  var _circuitData$stats, _circuitData$stats$le;\n  const {\n    circuitData,\n    totalLaps,\n    assignments,\n    pilots\n  } = raceConfig;\n  const [driversState, setDriversState] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeBattles, setActiveBattles] = useState([]);\n  const canvasRef = useRef(null);\n  const wsRef = useRef(null);\n  const animFrameRef = useRef(null);\n\n  // ========== WebSocket GPS ==========\n  useEffect(() => {\n    const ws = new WebSocket(WS_URL);\n    wsRef.current = ws;\n    ws.onopen = () => console.log('[RaceLive] WebSocket connesso');\n    ws.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n\n        // Formato: il backend invia { mac, lat, lon, speedKmh, ... }\n        if (data.mac && data.lat && data.lon) {\n          const mac = data.mac;\n\n          // Ignora device non assegnati\n          if (!assignments[mac]) return;\n          const gps = {\n            mac,\n            lat: data.lat,\n            lon: data.lon,\n            speed: data.speedKmh || 0,\n            ts: data.ts\n          };\n          handleGPSUpdate(gps);\n        }\n      } catch (e) {\n        console.error('[WS] Parse error:', e);\n      }\n    };\n    ws.onerror = err => console.error('[WS] Errore:', err);\n    ws.onclose = () => console.log('[WS] Chiuso');\n    return () => {\n      if (ws.readyState === WebSocket.OPEN) ws.close();\n    };\n  }, [assignments]);\n\n  // ========== Gestione GPS Update ==========\n  const handleGPSUpdate = useCallback(gps => {\n    if (!(circuitData !== null && circuitData !== void 0 && circuitData.sectors)) return;\n    const {\n      mac,\n      lat,\n      lon,\n      speed\n    } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n\n    // Trova pilota assegnato\n    const pilotId = assignments[mac];\n    const pilot = pilots.find(p => p.id === pilotId);\n    if (!pilot) return;\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        name: `${pilot.name} ${pilot.surname}`,\n        team: pilot.team,\n        color: pilot.color || `hsl(${Math.random() * 360}, 75%, 55%)`,\n        photoTeamUrl: pilot.photoTeamUrl,\n        photoDriverUrl: pilot.photoDriverUrl,\n        lat,\n        lon,\n        speed: 0,\n        sectorIdx,\n        lapCount: 0,\n        lastLapTime: null,\n        bestLapTime: null,\n        lastSectorIdx: sectorIdx,\n        lapStartTime: Date.now(),\n        trail: []\n      };\n\n      // Rilevamento completamento giro\n      let newLapCount = existing.lapCount;\n      let newLapTime = existing.lastLapTime;\n      let newBestLap = existing.bestLapTime;\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        const lapDuration = (Date.now() - existing.lapStartTime) / 1000;\n        if (lapDuration > 5) {\n          newLapCount = existing.lapCount + 1;\n          newLapTime = lapDuration;\n          if (!newBestLap || lapDuration < newBestLap) {\n            newBestLap = lapDuration;\n          }\n          console.log(`[LAP] ${existing.name} completato giro ${newLapCount} in ${lapDuration.toFixed(2)}s`);\n        }\n      }\n      const newTrail = [...existing.trail, {\n        lat,\n        lon\n      }].slice(-20);\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat,\n          lon,\n          speed,\n          sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount: newLapCount,\n          lastLapTime: newLapTime,\n          bestLapTime: newBestLap,\n          lapStartTime: newLapCount > existing.lapCount ? Date.now() : existing.lapStartTime,\n          trail: newTrail,\n          updatedAt: Date.now()\n        }\n      };\n    });\n  }, [circuitData, assignments, pilots]);\n\n  // ========== Aggiorna classifica e battaglie ==========\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n    setLeaderboard(sorted);\n\n    // Battaglie\n    const battles = [];\n    for (let i = 0; i < sorted.length - 1; i++) {\n      const driver1 = sorted[i];\n      const driver2 = sorted[i + 1];\n      if (driver1.lapCount === driver2.lapCount) {\n        const dist = haversine(driver1.lat, driver1.lon, driver2.lat, driver2.lon);\n        if (dist < 20) {\n          battles.push({\n            leader: driver1,\n            chaser: driver2,\n            distance: dist,\n            position: i + 1\n          });\n        }\n      }\n    }\n    setActiveBattles(battles);\n  }, [driversState]);\n\n  // ========== Rendering Canvas ==========\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const resize = () => {\n      const rect = canvas.parentElement.getBoundingClientRect();\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      canvas.style.width = `${rect.width}px`;\n      canvas.style.height = `${rect.height}px`;\n      ctx.scale(dpr, dpr);\n    };\n    resize();\n    window.addEventListener('resize', resize);\n\n    // Calcola bounds pista\n    const lats = circuitData.sectors.map(s => s.lat);\n    const lons = circuitData.sectors.map(s => s.lon);\n    const minLat = Math.min(...lats);\n    const maxLat = Math.max(...lats);\n    const minLon = Math.min(...lons);\n    const maxLon = Math.max(...lons);\n\n    // Centro del tracciato\n    const centerLat = (minLat + maxLat) / 2;\n    const centerLon = (minLon + maxLon) / 2;\n    const padding = 60;\n\n    // Proiezione ortografica perfettamente piatta (vista dall'alto)\n    const project = (lat, lon) => {\n      const rect = canvas.getBoundingClientRect();\n      const w = rect.width - padding * 2;\n      const h = rect.height - padding * 2;\n\n      // Converte lat/lon in metri dal centro usando proiezione equirettangolare corretta\n      const R = 6371000; // raggio terra in metri\n      const latRad = lat * Math.PI / 180;\n      const centerLatRad = centerLat * Math.PI / 180;\n\n      // Distanza in metri dal centro\n      const dx = (lon - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad);\n      const dy = (lat - centerLat) * Math.PI / 180 * R;\n\n      // Trova range massimo per scalare uniformemente\n      const allDx = lons.map(l => (l - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad));\n      const allDy = lats.map(l => (l - centerLat) * Math.PI / 180 * R);\n      const maxDx = Math.max(...allDx.map(Math.abs));\n      const maxDy = Math.max(...allDy.map(Math.abs));\n      const maxRange = Math.max(maxDx, maxDy) * 1.1; // 10% margin\n\n      // Scala mantenendo aspect ratio (vista dall'alto perfetta)\n      const scale = Math.min(w, h) / (maxRange * 2);\n      const x = rect.width / 2 + dx * scale;\n      const y = rect.height / 2 - dy * scale; // inverte Y (canvas ha origine in alto)\n\n      return {\n        x,\n        y\n      };\n    };\n    const draw = () => {\n      const rect = canvas.getBoundingClientRect();\n      ctx.clearRect(0, 0, rect.width, rect.height);\n\n      // Sfondo pulito\n      ctx.fillStyle = '#0f1419';\n      ctx.fillRect(0, 0, rect.width, rect.height);\n\n      // Tracciato - stile F1 minimale\n      ctx.strokeStyle = 'rgba(60, 65, 75, 0.8)';\n      ctx.lineWidth = 20;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n\n      // Bordo esterno tracciato\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.15)';\n      ctx.lineWidth = 22;\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n\n      // Bordo interno tracciato\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.1)';\n      ctx.lineWidth = 18;\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n\n      // Finish line - minimal\n      if (circuitData.sectors.length > 1) {\n        const s0 = project(circuitData.sectors[0].lat, circuitData.sectors[0].lon);\n        const s1 = project(circuitData.sectors[1].lat, circuitData.sectors[1].lon);\n        const angle = Math.atan2(s1.y - s0.y, s1.x - s0.x);\n        const perpAngle = angle + Math.PI / 2;\n        ctx.save();\n        ctx.translate(s0.x, s0.y);\n        ctx.rotate(perpAngle);\n\n        // Linea finish semplice\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(0, -12);\n        ctx.lineTo(0, 12);\n        ctx.stroke();\n\n        // Pattern a scacchi minimal\n        const squareSize = 4;\n        for (let i = -2; i <= 2; i++) {\n          for (let j = -1; j <= 1; j++) {\n            if ((i + j) % 2 === 0) {\n              ctx.fillStyle = '#fff';\n            } else {\n              ctx.fillStyle = '#000';\n            }\n            ctx.fillRect(i * squareSize - squareSize / 2, j * squareSize - squareSize / 2, squareSize, squareSize);\n          }\n        }\n        ctx.restore();\n      }\n\n      // Piloti\n      const sortedDrivers = Object.values(driversState).sort((a, b) => {\n        if (a.lapCount !== b.lapCount) return a.lapCount - b.lapCount;\n        return a.sectorIdx - b.sectorIdx;\n      });\n      sortedDrivers.forEach((driver, idx) => {\n        const pos = project(driver.lat, driver.lon);\n\n        // Trail - molto piÃ¹ visibile\n        if (driver.trail && driver.trail.length > 1) {\n          // Ombra esterna per profonditÃ \n          ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n          ctx.lineWidth = 6;\n          ctx.lineCap = 'round';\n          ctx.lineJoin = 'round';\n          ctx.globalAlpha = 0.7;\n          ctx.beginPath();\n          driver.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti === 0 ? ctx.moveTo(tp.x, tp.y) : ctx.lineTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n\n          // Linea principale colorata - piÃ¹ spessa e opaca\n          ctx.strokeStyle = driver.color;\n          ctx.lineWidth = 4;\n          ctx.globalAlpha = 0.85;\n          ctx.beginPath();\n          driver.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti === 0 ? ctx.moveTo(tp.x, tp.y) : ctx.lineTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n\n          // Linea interna piÃ¹ chiara per effetto glow\n          ctx.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n          ctx.lineWidth = 2;\n          ctx.globalAlpha = 0.9;\n          ctx.beginPath();\n          driver.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti === 0 ? ctx.moveTo(tp.x, tp.y) : ctx.lineTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n          ctx.globalAlpha = 1;\n        }\n\n        // Driver dot - clean e minimal\n        const isLeader = idx === sortedDrivers.length - 1;\n        const radius = isLeader ? 7 : 6;\n\n        // Dot colorato pulito\n        ctx.fillStyle = driver.color;\n        ctx.beginPath();\n        ctx.arc(pos.x, pos.y, radius, 0, Math.PI * 2);\n        ctx.fill();\n\n        // Bordo bianco sottile\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 1.5;\n        ctx.stroke();\n\n        // Nome minimal - solo cognome\n        const nameParts = driver.name.split(' ');\n        const lastName = nameParts[nameParts.length - 1];\n        ctx.fillStyle = '#fff';\n        ctx.font = 'bold 10px Roboto, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.9)';\n        ctx.shadowBlur = 3;\n        ctx.fillText(lastName.toUpperCase(), pos.x, pos.y - 12);\n        ctx.shadowBlur = 0;\n      });\n      animFrameRef.current = requestAnimationFrame(draw);\n    };\n    draw();\n    return () => {\n      window.removeEventListener('resize', resize);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData, driversState]);\n\n  // Formatta tempo\n  const formatLapTime = seconds => {\n    if (!seconds) return '--:--.---';\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(3);\n    return `${mins}:${secs.padStart(6, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"race-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"race-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"race-logo\",\n          children: \"\\uD83C\\uDFC1 RACESENSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"race-title\",\n          children: \"LIVE RACE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-header-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circuit-badge\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"circuit-icon\",\n            children: \"\\uD83D\\uDEE3\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"circuit-name\",\n            children: circuitData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"laps-badge\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"laps-icon\",\n            children: \"\\uD83C\\uDFC1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"laps-text\",\n            children: [totalLaps, \" GIRI\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"race-live\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"track-canvas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-overlay\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"live-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"live-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this), \"LIVE\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), circuitData && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"track-info\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-icon\",\n                  children: \"\\uD83D\\uDCCF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-text\",\n                  children: [(_circuitData$stats = circuitData.stats) === null || _circuitData$stats === void 0 ? void 0 : (_circuitData$stats$le = _circuitData$stats.lengthMeters) === null || _circuitData$stats$le === void 0 ? void 0 : _circuitData$stats$le.toFixed(0), \"m\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"leaderboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leaderboard-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83C\\uDFC6 CLASSIFICA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"leaderboard-subtitle\",\n              children: [leaderboard.length, \" Piloti\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leaderboard-list\",\n            children: leaderboard.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-drivers\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u23F3 In attesa di dati GPS...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this) : leaderboard.map((driver, pos) => {\n              const battle = activeBattles.find(b => b.leader.mac === driver.mac);\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `leaderboard-item ${pos === 0 ? 'leader' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"position\",\n                    children: pos + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"driver-color\",\n                    style: {\n                      background: driver.color\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"driver-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"driver-name\",\n                      children: [driver.name, pos === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"leader-badge\",\n                        children: \"\\uD83D\\uDC51\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 488,\n                        columnNumber: 43\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"driver-stats\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"lap-count\",\n                        children: [\"Lap \", driver.lapCount, \"/\", totalLaps]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 491,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 25\n                  }, this), driver.photoTeamUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `${API_BASE}${driver.photoTeamUrl}`,\n                    alt: driver.team,\n                    className: \"team-logo-small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"driver-times\",\n                    children: [pos === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"gap leader-gap\",\n                      children: \"LEADER\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 505,\n                      columnNumber: 29\n                    }, this) : (() => {\n                      const leader = leaderboard[0];\n                      let gapDisplay = '';\n                      if (driver.lapCount < leader.lapCount) {\n                        const lapDiff = leader.lapCount - driver.lapCount;\n                        gapDisplay = `+${lapDiff} ${lapDiff === 1 ? 'LAP' : 'LAPS'}`;\n                      } else {\n                        const sectorDiff = leader.sectorIdx - driver.sectorIdx;\n                        if (sectorDiff > 0) {\n                          const estimatedGap = (sectorDiff / 10).toFixed(1);\n                          gapDisplay = `+${estimatedGap}s`;\n                        } else {\n                          gapDisplay = '+0.0s';\n                        }\n                      }\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"gap\",\n                        children: gapDisplay\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 523,\n                        columnNumber: 36\n                      }, this);\n                    })(), driver.bestLapTime && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"best-lap\",\n                      children: [\"\\u23F1\\uFE0F \", formatLapTime(driver.bestLapTime)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 527,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 23\n                }, this), battle && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"battle-inline\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"battle-line\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"battle-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"battle-icon\",\n                      children: \"\\u2694\\uFE0F\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 538,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"battle-gap\",\n                      children: [battle.distance.toFixed(1), \"m\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 539,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"battle-speed\",\n                      children: battle.chaser.speed - battle.leader.speed > 0 ? 'â' : 'â'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 540,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"battle-line\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 25\n                }, this)]\n              }, driver.mac, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"stop-race-btn\",\n          onClick: onStopRace,\n          children: \"\\u23F9\\uFE0F Termina Gara\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 421,\n    columnNumber: 5\n  }, this);\n}\n_s(RaceLive, \"352nwb5QUe0mJ+kYvZMckvsyO4w=\");\n_c = RaceLive;\nvar _c;\n$RefreshReg$(_c, \"RaceLive\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","window","location","hostname","WS_URL","REACT_APP_WS_URL","haversine","lat1","lon1","lat2","lon2","R","toRad","d","Math","PI","dLat","dLon","a","sin","cos","atan2","sqrt","findClosestSector","lat","lon","sectors","minDist","Infinity","closestIdx","forEach","s","i","RaceLive","raceConfig","onStopRace","_s","_circuitData$stats","_circuitData$stats$le","circuitData","totalLaps","assignments","pilots","driversState","setDriversState","leaderboard","setLeaderboard","activeBattles","setActiveBattles","canvasRef","wsRef","animFrameRef","ws","WebSocket","current","onopen","console","log","onmessage","event","data","JSON","parse","mac","gps","speed","speedKmh","ts","handleGPSUpdate","e","error","onerror","err","onclose","readyState","OPEN","close","sectorIdx","totalSectors","length","pilotId","pilot","find","p","id","prev","existing","name","surname","team","color","random","photoTeamUrl","photoDriverUrl","lapCount","lastLapTime","bestLapTime","lastSectorIdx","lapStartTime","Date","now","trail","newLapCount","newLapTime","newBestLap","lapDuration","toFixed","newTrail","slice","updatedAt","sorted","Object","values","sort","b","battles","driver1","driver2","dist","push","leader","chaser","distance","position","canvas","ctx","getContext","dpr","devicePixelRatio","resize","rect","parentElement","getBoundingClientRect","width","height","style","scale","addEventListener","lats","map","lons","minLat","min","maxLat","max","minLon","maxLon","centerLat","centerLon","padding","project","w","h","latRad","centerLatRad","dx","dy","allDx","l","allDy","maxDx","abs","maxDy","maxRange","x","y","draw","clearRect","fillStyle","fillRect","strokeStyle","lineWidth","lineCap","lineJoin","beginPath","moveTo","lineTo","closePath","stroke","s0","s1","angle","perpAngle","save","translate","rotate","squareSize","j","restore","sortedDrivers","driver","idx","pos","globalAlpha","t","ti","tp","isLeader","radius","arc","fill","nameParts","split","lastName","font","textAlign","shadowColor","shadowBlur","fillText","toUpperCase","requestAnimationFrame","removeEventListener","cancelAnimationFrame","formatLapTime","seconds","mins","floor","secs","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","stats","lengthMeters","battle","Fragment","background","src","alt","gapDisplay","lapDiff","sectorDiff","estimatedGap","onClick","_c","$RefreshReg$"],"sources":["/home/ubuntu/racesense/racesense-frontend/src/pages/RaceLive.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './Race.css';\n\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n// Utility: calcola distanza Haversine (m)\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 + \n            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n// Trova il settore piÃ¹ vicino\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity;\n  let closestIdx = 0;\n  sectors.forEach((s, i) => {\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) {\n      minDist = d;\n      closestIdx = i;\n    }\n  });\n  return closestIdx;\n}\n\nexport default function RaceLive({ raceConfig, onStopRace }) {\n  const { circuitData, totalLaps, assignments, pilots } = raceConfig;\n  \n  const [driversState, setDriversState] = useState({});\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeBattles, setActiveBattles] = useState([]);\n  \n  const canvasRef = useRef(null);\n  const wsRef = useRef(null);\n  const animFrameRef = useRef(null);\n\n  // ========== WebSocket GPS ==========\n  useEffect(() => {\n    const ws = new WebSocket(WS_URL);\n    wsRef.current = ws;\n\n    ws.onopen = () => console.log('[RaceLive] WebSocket connesso');\n\n    ws.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        \n        // Formato: il backend invia { mac, lat, lon, speedKmh, ... }\n        if (data.mac && data.lat && data.lon) {\n          const mac = data.mac;\n          \n          // Ignora device non assegnati\n          if (!assignments[mac]) return;\n\n          const gps = {\n            mac,\n            lat: data.lat,\n            lon: data.lon,\n            speed: data.speedKmh || 0,\n            ts: data.ts\n          };\n          \n          handleGPSUpdate(gps);\n        }\n      } catch (e) {\n        console.error('[WS] Parse error:', e);\n      }\n    };\n\n    ws.onerror = (err) => console.error('[WS] Errore:', err);\n    ws.onclose = () => console.log('[WS] Chiuso');\n\n    return () => {\n      if (ws.readyState === WebSocket.OPEN) ws.close();\n    };\n  }, [assignments]);\n\n  // ========== Gestione GPS Update ==========\n  const handleGPSUpdate = useCallback((gps) => {\n    if (!circuitData?.sectors) return;\n\n    const { mac, lat, lon, speed } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n    \n    // Trova pilota assegnato\n    const pilotId = assignments[mac];\n    const pilot = pilots.find(p => p.id === pilotId);\n    if (!pilot) return;\n\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        name: `${pilot.name} ${pilot.surname}`,\n        team: pilot.team,\n        color: pilot.color || `hsl(${Math.random() * 360}, 75%, 55%)`,\n        photoTeamUrl: pilot.photoTeamUrl,\n        photoDriverUrl: pilot.photoDriverUrl,\n        lat,\n        lon,\n        speed: 0,\n        sectorIdx,\n        lapCount: 0,\n        lastLapTime: null,\n        bestLapTime: null,\n        lastSectorIdx: sectorIdx,\n        lapStartTime: Date.now(),\n        trail: [],\n      };\n\n      // Rilevamento completamento giro\n      let newLapCount = existing.lapCount;\n      let newLapTime = existing.lastLapTime;\n      let newBestLap = existing.bestLapTime;\n\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        const lapDuration = (Date.now() - existing.lapStartTime) / 1000;\n        if (lapDuration > 5) {\n          newLapCount = existing.lapCount + 1;\n          newLapTime = lapDuration;\n          if (!newBestLap || lapDuration < newBestLap) {\n            newBestLap = lapDuration;\n          }\n          console.log(`[LAP] ${existing.name} completato giro ${newLapCount} in ${lapDuration.toFixed(2)}s`);\n        }\n      }\n\n      const newTrail = [...existing.trail, { lat, lon }].slice(-20);\n\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat,\n          lon,\n          speed,\n          sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount: newLapCount,\n          lastLapTime: newLapTime,\n          bestLapTime: newBestLap,\n          lapStartTime: newLapCount > existing.lapCount ? Date.now() : existing.lapStartTime,\n          trail: newTrail,\n          updatedAt: Date.now(),\n        }\n      };\n    });\n  }, [circuitData, assignments, pilots]);\n\n  // ========== Aggiorna classifica e battaglie ==========\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n    setLeaderboard(sorted);\n    \n    // Battaglie\n    const battles = [];\n    for (let i = 0; i < sorted.length - 1; i++) {\n      const driver1 = sorted[i];\n      const driver2 = sorted[i + 1];\n      \n      if (driver1.lapCount === driver2.lapCount) {\n        const dist = haversine(driver1.lat, driver1.lon, driver2.lat, driver2.lon);\n        if (dist < 20) {\n          battles.push({\n            leader: driver1,\n            chaser: driver2,\n            distance: dist,\n            position: i + 1\n          });\n        }\n      }\n    }\n    setActiveBattles(battles);\n  }, [driversState]);\n\n  // ========== Rendering Canvas ==========\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n\n    const resize = () => {\n      const rect = canvas.parentElement.getBoundingClientRect();\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      canvas.style.width = `${rect.width}px`;\n      canvas.style.height = `${rect.height}px`;\n      ctx.scale(dpr, dpr);\n    };\n    resize();\n    window.addEventListener('resize', resize);\n\n    // Calcola bounds pista\n    const lats = circuitData.sectors.map(s => s.lat);\n    const lons = circuitData.sectors.map(s => s.lon);\n    const minLat = Math.min(...lats);\n    const maxLat = Math.max(...lats);\n    const minLon = Math.min(...lons);\n    const maxLon = Math.max(...lons);\n    \n    // Centro del tracciato\n    const centerLat = (minLat + maxLat) / 2;\n    const centerLon = (minLon + maxLon) / 2;\n    \n    const padding = 60;\n\n    // Proiezione ortografica perfettamente piatta (vista dall'alto)\n    const project = (lat, lon) => {\n      const rect = canvas.getBoundingClientRect();\n      const w = rect.width - padding * 2;\n      const h = rect.height - padding * 2;\n      \n      // Converte lat/lon in metri dal centro usando proiezione equirettangolare corretta\n      const R = 6371000; // raggio terra in metri\n      const latRad = lat * Math.PI / 180;\n      const centerLatRad = centerLat * Math.PI / 180;\n      \n      // Distanza in metri dal centro\n      const dx = (lon - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad);\n      const dy = (lat - centerLat) * Math.PI / 180 * R;\n      \n      // Trova range massimo per scalare uniformemente\n      const allDx = lons.map(l => (l - centerLon) * Math.PI / 180 * R * Math.cos(centerLatRad));\n      const allDy = lats.map(l => (l - centerLat) * Math.PI / 180 * R);\n      const maxDx = Math.max(...allDx.map(Math.abs));\n      const maxDy = Math.max(...allDy.map(Math.abs));\n      const maxRange = Math.max(maxDx, maxDy) * 1.1; // 10% margin\n      \n      // Scala mantenendo aspect ratio (vista dall'alto perfetta)\n      const scale = Math.min(w, h) / (maxRange * 2);\n      const x = rect.width / 2 + dx * scale;\n      const y = rect.height / 2 - dy * scale; // inverte Y (canvas ha origine in alto)\n      \n      return { x, y };\n    };\n\n    const draw = () => {\n      const rect = canvas.getBoundingClientRect();\n      ctx.clearRect(0, 0, rect.width, rect.height);\n\n      // Sfondo pulito\n      ctx.fillStyle = '#0f1419';\n      ctx.fillRect(0, 0, rect.width, rect.height);\n\n      // Tracciato - stile F1 minimale\n      ctx.strokeStyle = 'rgba(60, 65, 75, 0.8)';\n      ctx.lineWidth = 20;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n\n      // Bordo esterno tracciato\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.15)';\n      ctx.lineWidth = 22;\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n\n      // Bordo interno tracciato\n      ctx.strokeStyle = 'rgba(255, 255, 255, 0.1)';\n      ctx.lineWidth = 18;\n      ctx.beginPath();\n      circuitData.sectors.forEach((s, i) => {\n        const p = project(s.lat, s.lon);\n        i === 0 ? ctx.moveTo(p.x, p.y) : ctx.lineTo(p.x, p.y);\n      });\n      ctx.closePath();\n      ctx.stroke();\n\n      // Finish line - minimal\n      if (circuitData.sectors.length > 1) {\n        const s0 = project(circuitData.sectors[0].lat, circuitData.sectors[0].lon);\n        const s1 = project(circuitData.sectors[1].lat, circuitData.sectors[1].lon);\n        const angle = Math.atan2(s1.y - s0.y, s1.x - s0.x);\n        const perpAngle = angle + Math.PI / 2;\n        \n        ctx.save();\n        ctx.translate(s0.x, s0.y);\n        ctx.rotate(perpAngle);\n        \n        // Linea finish semplice\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 3;\n        ctx.beginPath();\n        ctx.moveTo(0, -12);\n        ctx.lineTo(0, 12);\n        ctx.stroke();\n        \n        // Pattern a scacchi minimal\n        const squareSize = 4;\n        for (let i = -2; i <= 2; i++) {\n          for (let j = -1; j <= 1; j++) {\n            if ((i + j) % 2 === 0) {\n              ctx.fillStyle = '#fff';\n            } else {\n              ctx.fillStyle = '#000';\n            }\n            ctx.fillRect(i * squareSize - squareSize/2, j * squareSize - squareSize/2, squareSize, squareSize);\n          }\n        }\n        ctx.restore();\n      }\n\n      // Piloti\n      const sortedDrivers = Object.values(driversState).sort((a, b) => {\n        if (a.lapCount !== b.lapCount) return a.lapCount - b.lapCount;\n        return a.sectorIdx - b.sectorIdx;\n      });\n\n      sortedDrivers.forEach((driver, idx) => {\n        const pos = project(driver.lat, driver.lon);\n\n        // Trail - molto piÃ¹ visibile\n        if (driver.trail && driver.trail.length > 1) {\n          // Ombra esterna per profonditÃ \n          ctx.strokeStyle = 'rgba(0, 0, 0, 0.5)';\n          ctx.lineWidth = 6;\n          ctx.lineCap = 'round';\n          ctx.lineJoin = 'round';\n          ctx.globalAlpha = 0.7;\n          ctx.beginPath();\n          driver.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti === 0 ? ctx.moveTo(tp.x, tp.y) : ctx.lineTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n          \n          // Linea principale colorata - piÃ¹ spessa e opaca\n          ctx.strokeStyle = driver.color;\n          ctx.lineWidth = 4;\n          ctx.globalAlpha = 0.85;\n          ctx.beginPath();\n          driver.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti === 0 ? ctx.moveTo(tp.x, tp.y) : ctx.lineTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n          \n          // Linea interna piÃ¹ chiara per effetto glow\n          ctx.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n          ctx.lineWidth = 2;\n          ctx.globalAlpha = 0.9;\n          ctx.beginPath();\n          driver.trail.forEach((t, ti) => {\n            const tp = project(t.lat, t.lon);\n            ti === 0 ? ctx.moveTo(tp.x, tp.y) : ctx.lineTo(tp.x, tp.y);\n          });\n          ctx.stroke();\n          \n          ctx.globalAlpha = 1;\n        }\n\n        // Driver dot - clean e minimal\n        const isLeader = idx === sortedDrivers.length - 1;\n        const radius = isLeader ? 7 : 6;\n        \n        // Dot colorato pulito\n        ctx.fillStyle = driver.color;\n        ctx.beginPath();\n        ctx.arc(pos.x, pos.y, radius, 0, Math.PI * 2);\n        ctx.fill();\n        \n        // Bordo bianco sottile\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 1.5;\n        ctx.stroke();\n\n        // Nome minimal - solo cognome\n        const nameParts = driver.name.split(' ');\n        const lastName = nameParts[nameParts.length - 1];\n        ctx.fillStyle = '#fff';\n        ctx.font = 'bold 10px Roboto, sans-serif';\n        ctx.textAlign = 'center';\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.9)';\n        ctx.shadowBlur = 3;\n        ctx.fillText(lastName.toUpperCase(), pos.x, pos.y - 12);\n        ctx.shadowBlur = 0;\n      });\n\n      animFrameRef.current = requestAnimationFrame(draw);\n    };\n\n    draw();\n\n    return () => {\n      window.removeEventListener('resize', resize);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData, driversState]);\n\n  // Formatta tempo\n  const formatLapTime = (seconds) => {\n    if (!seconds) return '--:--.---';\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(3);\n    return `${mins}:${secs.padStart(6, '0')}`;\n  };\n\n  return (\n    <div className=\"race-page\">\n      <header className=\"race-header\">\n        <div className=\"race-header-left\">\n          <div className=\"race-logo\">ð RACESENSE</div>\n          <div className=\"race-title\">LIVE RACE</div>\n        </div>\n        <div className=\"race-header-right\">\n          <div className=\"circuit-badge\">\n            <span className=\"circuit-icon\">ð£ï¸</span>\n            <span className=\"circuit-name\">{circuitData.name}</span>\n          </div>\n          <div className=\"laps-badge\">\n            <span className=\"laps-icon\">ð</span>\n            <span className=\"laps-text\">{totalLaps} GIRI</span>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"race-live\">\n        <div className=\"race-main\">\n          <div className=\"track-container\">\n            <canvas ref={canvasRef} className=\"track-canvas\" />\n            \n            <div className=\"track-overlay\">\n              <div className=\"live-indicator\">\n                <span className=\"live-dot\"></span>\n                LIVE\n              </div>\n              \n              {circuitData && (\n                <div className=\"track-info\">\n                  <div className=\"track-stat\">\n                    <span className=\"stat-icon\">ð</span>\n                    <span className=\"stat-text\">{circuitData.stats?.lengthMeters?.toFixed(0)}m</span>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          <aside className=\"leaderboard\">\n            <div className=\"leaderboard-header\">\n              <h3>ð CLASSIFICA</h3>\n              <div className=\"leaderboard-subtitle\">\n                {leaderboard.length} Piloti\n              </div>\n            </div>\n            \n            <div className=\"leaderboard-list\">\n              {leaderboard.length === 0 ? (\n                <div className=\"no-drivers\">\n                  <p>â³ In attesa di dati GPS...</p>\n                </div>\n              ) : (\n                leaderboard.map((driver, pos) => {\n                  const battle = activeBattles.find(b => b.leader.mac === driver.mac);\n                  \n                  return (\n                    <React.Fragment key={driver.mac}>\n                      <div className={`leaderboard-item ${pos === 0 ? 'leader' : ''}`}>\n                        <div className=\"position\">{pos + 1}</div>\n                        \n                        <div className=\"driver-color\" style={{ background: driver.color }}></div>\n                        \n                        <div className=\"driver-info\">\n                          <div className=\"driver-name\">\n                            {driver.name}\n                            {pos === 0 && <span className=\"leader-badge\">ð</span>}\n                          </div>\n                          <div className=\"driver-stats\">\n                            <span className=\"lap-count\">Lap {driver.lapCount}/{totalLaps}</span>\n                          </div>\n                        </div>\n                        \n                        {driver.photoTeamUrl && (\n                          <img \n                            src={`${API_BASE}${driver.photoTeamUrl}`}\n                            alt={driver.team}\n                            className=\"team-logo-small\"\n                          />\n                        )}\n                        \n                        <div className=\"driver-times\">\n                          {pos === 0 ? (\n                            <div className=\"gap leader-gap\">LEADER</div>\n                          ) : (() => {\n                            const leader = leaderboard[0];\n                            let gapDisplay = '';\n                            \n                            if (driver.lapCount < leader.lapCount) {\n                              const lapDiff = leader.lapCount - driver.lapCount;\n                              gapDisplay = `+${lapDiff} ${lapDiff === 1 ? 'LAP' : 'LAPS'}`;\n                            } else {\n                              const sectorDiff = leader.sectorIdx - driver.sectorIdx;\n                              if (sectorDiff > 0) {\n                                const estimatedGap = (sectorDiff / 10).toFixed(1);\n                                gapDisplay = `+${estimatedGap}s`;\n                              } else {\n                                gapDisplay = '+0.0s';\n                              }\n                            }\n                            \n                            return <div className=\"gap\">{gapDisplay}</div>;\n                          })()}\n                          \n                          {driver.bestLapTime && (\n                            <div className=\"best-lap\">\n                              â±ï¸ {formatLapTime(driver.bestLapTime)}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      \n                      {battle && (\n                        <div className=\"battle-inline\">\n                          <div className=\"battle-line\"></div>\n                          <div className=\"battle-info\">\n                            <span className=\"battle-icon\">âï¸</span>\n                            <span className=\"battle-gap\">{battle.distance.toFixed(1)}m</span>\n                            <span className=\"battle-speed\">\n                              {(battle.chaser.speed - battle.leader.speed) > 0 ? 'â' : 'â'}\n                            </span>\n                          </div>\n                          <div className=\"battle-line\"></div>\n                        </div>\n                      )}\n                    </React.Fragment>\n                  );\n                })\n              )}\n            </div>\n          </aside>\n        </div>\n\n        <div className=\"race-controls\">\n          <button className=\"stop-race-btn\" onClick={onStopRace}>\n            â¹ï¸ Termina Gara\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}