{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/racesense/racesense-frontend/src/pages/Race.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './Race.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n// Utility: calcola distanza Haversine (m)\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n// Trova il settore piÃ¹ vicino al punto GPS\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity;\n  let closestIdx = 0;\n  sectors.forEach((s, i) => {\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) {\n      minDist = d;\n      closestIdx = i;\n    }\n  });\n  return closestIdx;\n}\nexport default function RacePage() {\n  _s();\n  var _circuitData$stats, _circuitData$stats$le, _circuitData$params2, _circuitData$sectors;\n  const [circuits, setCircuits] = useState([]);\n  const [selectedCircuit, setSelectedCircuit] = useState(null);\n  const [circuitData, setCircuitData] = useState(null);\n  const [pilots, setPilots] = useState([]); // Piloti da backend\n  const [raceActive, setRaceActive] = useState(false);\n  const [driversState, setDriversState] = useState({}); // { MAC: { lat, lon, speed, sectorIdx, lapCount, lastLapTime, ... } }\n  const [leaderboard, setLeaderboard] = useState([]); // Classifica ordinata\n\n  const canvasRef = useRef(null);\n  const wsRef = useRef(null);\n  const animFrameRef = useRef(null);\n\n  // ========== Carica circuiti disponibili ==========\n  useEffect(() => {\n    fetch(`${API_BASE}/api/circuits`).then(r => r.json()).then(data => setCircuits(data)).catch(e => console.error('Errore caricamento circuiti:', e));\n  }, []);\n\n  // ========== Carica piloti ==========\n  useEffect(() => {\n    fetch(`${API_BASE}/api/pilots`).then(r => r.json()).then(data => setPilots(data)).catch(e => console.error('Errore caricamento piloti:', e));\n  }, []);\n\n  // ========== Carica dettaglio circuito selezionato ==========\n  useEffect(() => {\n    if (!selectedCircuit) {\n      setCircuitData(null);\n      return;\n    }\n    fetch(`${API_BASE}/api/circuits/${selectedCircuit}`).then(r => r.json()).then(data => {\n      var _data$sectors;\n      setCircuitData(data);\n      console.log(`Circuito caricato: ${data.name}, settori: ${((_data$sectors = data.sectors) === null || _data$sectors === void 0 ? void 0 : _data$sectors.length) || 0}`);\n    }).catch(e => console.error('Errore caricamento circuito:', e));\n  }, [selectedCircuit]);\n\n  // ========== WebSocket GPS Live ==========\n  useEffect(() => {\n    if (!raceActive) {\n      if (wsRef.current) {\n        wsRef.current.close();\n        wsRef.current = null;\n      }\n      return;\n    }\n    const ws = new WebSocket(WS_URL);\n    wsRef.current = ws;\n    ws.onopen = () => console.log('[WS] Connesso al feed GPS');\n    ws.onclose = () => console.log('[WS] Disconnesso');\n    ws.onerror = e => console.error('[WS] Errore:', e);\n    ws.onmessage = event => {\n      try {\n        const gps = JSON.parse(event.data);\n        handleGPSUpdate(gps);\n      } catch (e) {\n        console.error('[WS] Parse error:', e);\n      }\n    };\n    return () => {\n      if (ws.readyState === WebSocket.OPEN) ws.close();\n    };\n  }, [raceActive]);\n\n  // ========== Gestione aggiornamenti GPS ==========\n  const handleGPSUpdate = useCallback(gps => {\n    if (!(circuitData !== null && circuitData !== void 0 && circuitData.sectors)) return;\n    const {\n      mac,\n      lat,\n      lon,\n      speedKmh,\n      ts\n    } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        name: `Driver ${mac.slice(-4)}`,\n        lat,\n        lon,\n        speedKmh: 0,\n        sectorIdx: sectorIdx,\n        lapCount: 0,\n        lastLapTime: null,\n        bestLapTime: null,\n        lastSectorIdx: sectorIdx,\n        lapStartTime: Date.now(),\n        trail: [],\n        // ultimi N punti per scia\n        color: `hsl(${Math.random() * 360}, 80%, 60%)`\n      };\n\n      // Rileva crossing linea traguardo (settore 0)\n      let newLapCount = existing.lapCount;\n      let newLapTime = existing.lastLapTime;\n      let newBestLap = existing.bestLapTime;\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        // Probabile completamento giro\n        const lapDuration = (Date.now() - existing.lapStartTime) / 1000; // secondi\n        if (lapDuration > 5) {\n          // Evita falsi positivi\n          newLapCount = existing.lapCount + 1;\n          newLapTime = lapDuration;\n          if (!newBestLap || lapDuration < newBestLap) {\n            newBestLap = lapDuration;\n          }\n          console.log(`[LAP] ${mac} completato giro ${newLapCount} in ${lapDuration.toFixed(2)}s`);\n        }\n      }\n\n      // Aggiorna trail (max 20 punti)\n      const newTrail = [...existing.trail, {\n        lat,\n        lon\n      }].slice(-20);\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat,\n          lon,\n          speedKmh,\n          sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount: newLapCount,\n          lastLapTime: newLapTime,\n          bestLapTime: newBestLap,\n          lapStartTime: newLapCount > existing.lapCount ? Date.now() : existing.lapStartTime,\n          trail: newTrail,\n          updatedAt: Date.now()\n        }\n      };\n    });\n  }, [circuitData]);\n\n  // ========== Aggiorna classifica ==========\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n    setLeaderboard(sorted);\n  }, [driversState]);\n\n  // ========== Rendering Canvas ==========\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n    const resizeCanvas = () => {\n      const rect = canvas.getBoundingClientRect();\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      ctx.scale(dpr, dpr);\n      canvas.style.width = `${rect.width}px`;\n      canvas.style.height = `${rect.height}px`;\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    const animate = () => {\n      var _circuitData$params;\n      const w = canvas.width / dpr;\n      const h = canvas.height / dpr;\n\n      // Clear\n      ctx.fillStyle = '#0a0e1a';\n      ctx.fillRect(0, 0, w, h);\n      if (!circuitData.pathPoints || circuitData.pathPoints.length === 0) {\n        animFrameRef.current = requestAnimationFrame(animate);\n        return;\n      }\n\n      // ========== Calcola bounds per fitting ==========\n      const lats = circuitData.pathPoints.map(p => p.lat);\n      const lons = circuitData.pathPoints.map(p => p.lon);\n      const minLat = Math.min(...lats);\n      const maxLat = Math.max(...lats);\n      const minLon = Math.min(...lons);\n      const maxLon = Math.max(...lons);\n      const latRange = maxLat - minLat || 1e-5;\n      const lonRange = maxLon - minLon || 1e-5;\n      const padding = 40;\n      const aspectTrack = lonRange / latRange;\n      const aspectCanvas = w / h;\n      let scale, offsetX, offsetY;\n      if (aspectTrack > aspectCanvas) {\n        // Limita larghezza\n        scale = (w - 2 * padding) / lonRange;\n        offsetX = padding;\n        offsetY = (h - latRange * scale) / 2;\n      } else {\n        // Limita altezza\n        scale = (h - 2 * padding) / latRange;\n        offsetY = padding;\n        offsetX = (w - lonRange * scale) / 2;\n      }\n      const project = (lat, lon) => {\n        const x = offsetX + (lon - minLon) * scale;\n        const y = offsetY + (maxLat - lat) * scale; // flip Y\n        return {\n          x,\n          y\n        };\n      };\n\n      // ========== Disegna tracciato (pista) ==========\n      ctx.strokeStyle = '#2a3f5f';\n      ctx.lineWidth = Math.max(2, (((_circuitData$params = circuitData.params) === null || _circuitData$params === void 0 ? void 0 : _circuitData$params.widthMeters) || 6) * scale * 0.0001 * 100);\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.beginPath();\n      circuitData.pathPoints.forEach((p, i) => {\n        const {\n          x,\n          y\n        } = project(p.lat, p.lon);\n        if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n      });\n      ctx.stroke();\n\n      // Bordi pista (effetto 3D)\n      ctx.strokeStyle = '#1a2332';\n      ctx.lineWidth = ctx.lineWidth + 4;\n      ctx.globalAlpha = 0.4;\n      ctx.stroke();\n      ctx.globalAlpha = 1;\n\n      // ========== Linea traguardo ==========\n      if (circuitData.sectors && circuitData.sectors.length > 0) {\n        const start = circuitData.sectors[0];\n        const {\n          x,\n          y\n        } = project(start.lat, start.lon);\n\n        // Casella a scacchi animata\n        ctx.save();\n        ctx.translate(x, y);\n        const checkSize = 6;\n        const offset = Date.now() / 100 % (checkSize * 2);\n        for (let i = -3; i < 3; i++) {\n          for (let j = -1; j < 2; j++) {\n            if ((i + j) % 2 === 0) ctx.fillStyle = '#fff';else ctx.fillStyle = '#000';\n            ctx.fillRect(i * checkSize - offset, j * checkSize, checkSize, checkSize);\n          }\n        }\n        ctx.restore();\n      }\n\n      // ========== Disegna piloti e scie ==========\n      Object.values(driversState).forEach(driver => {\n        const {\n          lat,\n          lon,\n          trail,\n          color,\n          speedKmh\n        } = driver;\n\n        // Scia (trail)\n        if (trail && trail.length > 1) {\n          ctx.strokeStyle = color;\n          ctx.lineWidth = 2;\n          ctx.globalAlpha = 0.3;\n          ctx.beginPath();\n          trail.forEach((pt, i) => {\n            const {\n              x,\n              y\n            } = project(pt.lat, pt.lon);\n            if (i === 0) ctx.moveTo(x, y);else ctx.lineTo(x, y);\n          });\n          ctx.stroke();\n          ctx.globalAlpha = 1;\n        }\n\n        // Pallino pilota\n        const {\n          x,\n          y\n        } = project(lat, lon);\n\n        // Alone esterno (pulsante)\n        const pulse = 1 + 0.2 * Math.sin(Date.now() / 200);\n        ctx.fillStyle = color;\n        ctx.globalAlpha = 0.3;\n        ctx.beginPath();\n        ctx.arc(x, y, 12 * pulse, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.globalAlpha = 1;\n\n        // Cerchio pilota\n        ctx.fillStyle = color;\n        ctx.beginPath();\n        ctx.arc(x, y, 8, 0, Math.PI * 2);\n        ctx.fill();\n\n        // Bordo bianco\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // VelocitÃ  sopra il pilota\n        ctx.fillStyle = '#fff';\n        ctx.font = 'bold 11px \"Formula1\", \"Roboto Mono\", monospace';\n        ctx.textAlign = 'center';\n        ctx.fillText(`${Math.round(speedKmh)}`, x, y - 16);\n      });\n      animFrameRef.current = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData, driversState]);\n\n  // ========== Formatta tempo giro (s â mm:ss.ms) ==========\n  const formatLapTime = seconds => {\n    if (!seconds) return '--:--.---';\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(3);\n    return `${mins}:${secs.padStart(6, '0')}`;\n  };\n\n  // ========== UI ==========\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"race-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"race-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"race-logo\",\n          children: \"\\uD83C\\uDFC1 RACESENSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"race-title\",\n          children: \"LIVE RACE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-header-right\",\n        children: raceActive && circuitData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circuit-badge\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"circuit-icon\",\n            children: \"\\uD83D\\uDEE3\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"circuit-name\",\n            children: circuitData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), !raceActive ?\n    /*#__PURE__*/\n    // ========== Setup gara ==========\n    _jsxDEV(\"div\", {\n      className: \"race-setup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setup-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u2699\\uFE0F Configura Gara\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Seleziona Circuito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedCircuit || '',\n            onChange: e => setSelectedCircuit(e.target.value),\n            className: \"circuit-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Scegli un tracciato --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this), circuits.map(c => {\n              var _c$lengthMeters;\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: c.id,\n                children: [c.name, \" (\", (_c$lengthMeters = c.lengthMeters) === null || _c$lengthMeters === void 0 ? void 0 : _c$lengthMeters.toFixed(0), \"m, \", c.points, \" punti)\"]\n              }, c.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), circuitData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circuit-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCCA Info Circuito\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"circuit-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Lunghezza\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [(_circuitData$stats = circuitData.stats) === null || _circuitData$stats === void 0 ? void 0 : (_circuitData$stats$le = _circuitData$stats.lengthMeters) === null || _circuitData$stats$le === void 0 ? void 0 : _circuitData$stats$le.toFixed(0), \" m\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Larghezza\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [((_circuitData$params2 = circuitData.params) === null || _circuitData$params2 === void 0 ? void 0 : _circuitData$params2.widthMeters) || 6, \" m\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Settori\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: ((_circuitData$sectors = circuitData.sectors) === null || _circuitData$sectors === void 0 ? void 0 : _circuitData$sectors.length) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-race-btn\",\n          disabled: !selectedCircuit,\n          onClick: () => setRaceActive(true),\n          children: \"\\uD83D\\uDEA6 AVVIA GARA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // ========== Vista gara live ==========\n    _jsxDEV(\"div\", {\n      className: \"race-live\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            className: \"track-canvas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-overlay\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"live-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"live-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this), \"LIVE\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"leaderboard\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leaderboard-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83C\\uDFC6 CLASSIFICA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"leaderboard-subtitle\",\n              children: [leaderboard.length, \" Piloti in pista\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"leaderboard-list\",\n            children: leaderboard.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-drivers\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u23F3 In attesa di dati GPS...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Avvia il simulatore o connetti dispositivi GPS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 19\n            }, this) : leaderboard.map((driver, pos) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `leaderboard-item ${pos === 0 ? 'leader' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"position\",\n                children: pos + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"driver-color\",\n                style: {\n                  background: driver.color\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"driver-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"driver-name\",\n                  children: [driver.name, pos === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"leader-badge\",\n                    children: \"\\uD83D\\uDC51\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"driver-stats\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"lap-count\",\n                    children: [\"Giro \", driver.lapCount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sector\",\n                    children: [\"S\", driver.sectorIdx]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"driver-times\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"speed\",\n                  children: [Math.round(driver.speedKmh), \" km/h\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 25\n                }, this), driver.bestLapTime && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"best-lap\",\n                  children: [\"\\u23F1\\uFE0F \", formatLapTime(driver.bestLapTime)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 23\n              }, this)]\n            }, driver.mac, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"race-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"stop-race-btn\",\n          onClick: () => {\n            setRaceActive(false);\n            setDriversState({});\n            setLeaderboard([]);\n          },\n          children: \"\\u23F9\\uFE0F Termina Gara\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n}\n_s(RacePage, \"LKjxvzX2deNhvaLoTQG7hmZyFBI=\");\n_c = RacePage;\nvar _c;\n$RefreshReg$(_c, \"RacePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","window","location","hostname","WS_URL","REACT_APP_WS_URL","haversine","lat1","lon1","lat2","lon2","R","toRad","d","Math","PI","dLat","dLon","a","sin","cos","atan2","sqrt","findClosestSector","lat","lon","sectors","minDist","Infinity","closestIdx","forEach","s","i","RacePage","_s","_circuitData$stats","_circuitData$stats$le","_circuitData$params2","_circuitData$sectors","circuits","setCircuits","selectedCircuit","setSelectedCircuit","circuitData","setCircuitData","pilots","setPilots","raceActive","setRaceActive","driversState","setDriversState","leaderboard","setLeaderboard","canvasRef","wsRef","animFrameRef","fetch","then","r","json","data","catch","e","console","error","_data$sectors","log","name","length","current","close","ws","WebSocket","onopen","onclose","onerror","onmessage","event","gps","JSON","parse","handleGPSUpdate","readyState","OPEN","mac","speedKmh","ts","sectorIdx","totalSectors","prev","existing","slice","lapCount","lastLapTime","bestLapTime","lastSectorIdx","lapStartTime","Date","now","trail","color","random","newLapCount","newLapTime","newBestLap","lapDuration","toFixed","newTrail","updatedAt","sorted","Object","values","sort","b","canvas","ctx","getContext","dpr","devicePixelRatio","resizeCanvas","rect","getBoundingClientRect","width","height","scale","style","addEventListener","animate","_circuitData$params","w","h","fillStyle","fillRect","pathPoints","requestAnimationFrame","lats","map","p","lons","minLat","min","maxLat","max","minLon","maxLon","latRange","lonRange","padding","aspectTrack","aspectCanvas","offsetX","offsetY","project","x","y","strokeStyle","lineWidth","params","widthMeters","lineCap","lineJoin","beginPath","moveTo","lineTo","stroke","globalAlpha","start","save","translate","checkSize","offset","j","restore","driver","pt","pulse","arc","fill","font","textAlign","fillText","round","removeEventListener","cancelAnimationFrame","formatLapTime","seconds","mins","floor","secs","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","c","_c$lengthMeters","id","lengthMeters","points","stats","disabled","onClick","ref","pos","background","_c","$RefreshReg$"],"sources":["/home/ubuntu/racesense/racesense-frontend/src/pages/Race.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './Race.css';\n\nconst API_BASE = process.env.REACT_APP_API_BASE || `http://${window.location.hostname}:5000`;\nconst WS_URL = process.env.REACT_APP_WS_URL || `ws://${window.location.hostname}:5001`;\n\n// Utility: calcola distanza Haversine (m)\nfunction haversine(lat1, lon1, lat2, lon2) {\n  const R = 6371000;\n  const toRad = d => d * Math.PI / 180;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 + \n            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n// Trova il settore piÃ¹ vicino al punto GPS\nfunction findClosestSector(lat, lon, sectors) {\n  let minDist = Infinity;\n  let closestIdx = 0;\n  sectors.forEach((s, i) => {\n    const d = haversine(lat, lon, s.lat, s.lon);\n    if (d < minDist) {\n      minDist = d;\n      closestIdx = i;\n    }\n  });\n  return closestIdx;\n}\n\nexport default function RacePage() {\n  const [circuits, setCircuits] = useState([]);\n  const [selectedCircuit, setSelectedCircuit] = useState(null);\n  const [circuitData, setCircuitData] = useState(null);\n  const [pilots, setPilots] = useState([]); // Piloti da backend\n  const [raceActive, setRaceActive] = useState(false);\n  const [driversState, setDriversState] = useState({}); // { MAC: { lat, lon, speed, sectorIdx, lapCount, lastLapTime, ... } }\n  const [leaderboard, setLeaderboard] = useState([]); // Classifica ordinata\n  \n  const canvasRef = useRef(null);\n  const wsRef = useRef(null);\n  const animFrameRef = useRef(null);\n\n  // ========== Carica circuiti disponibili ==========\n  useEffect(() => {\n    fetch(`${API_BASE}/api/circuits`)\n      .then(r => r.json())\n      .then(data => setCircuits(data))\n      .catch(e => console.error('Errore caricamento circuiti:', e));\n  }, []);\n\n  // ========== Carica piloti ==========\n  useEffect(() => {\n    fetch(`${API_BASE}/api/pilots`)\n      .then(r => r.json())\n      .then(data => setPilots(data))\n      .catch(e => console.error('Errore caricamento piloti:', e));\n  }, []);\n\n  // ========== Carica dettaglio circuito selezionato ==========\n  useEffect(() => {\n    if (!selectedCircuit) {\n      setCircuitData(null);\n      return;\n    }\n    fetch(`${API_BASE}/api/circuits/${selectedCircuit}`)\n      .then(r => r.json())\n      .then(data => {\n        setCircuitData(data);\n        console.log(`Circuito caricato: ${data.name}, settori: ${data.sectors?.length || 0}`);\n      })\n      .catch(e => console.error('Errore caricamento circuito:', e));\n  }, [selectedCircuit]);\n\n  // ========== WebSocket GPS Live ==========\n  useEffect(() => {\n    if (!raceActive) {\n      if (wsRef.current) {\n        wsRef.current.close();\n        wsRef.current = null;\n      }\n      return;\n    }\n\n    const ws = new WebSocket(WS_URL);\n    wsRef.current = ws;\n\n    ws.onopen = () => console.log('[WS] Connesso al feed GPS');\n    ws.onclose = () => console.log('[WS] Disconnesso');\n    ws.onerror = (e) => console.error('[WS] Errore:', e);\n    \n    ws.onmessage = (event) => {\n      try {\n        const gps = JSON.parse(event.data);\n        handleGPSUpdate(gps);\n      } catch (e) {\n        console.error('[WS] Parse error:', e);\n      }\n    };\n\n    return () => {\n      if (ws.readyState === WebSocket.OPEN) ws.close();\n    };\n  }, [raceActive]);\n\n  // ========== Gestione aggiornamenti GPS ==========\n  const handleGPSUpdate = useCallback((gps) => {\n    if (!circuitData?.sectors) return;\n\n    const { mac, lat, lon, speedKmh, ts } = gps;\n    const sectorIdx = findClosestSector(lat, lon, circuitData.sectors);\n    const totalSectors = circuitData.sectors.length;\n\n    setDriversState(prev => {\n      const existing = prev[mac] || {\n        mac,\n        name: `Driver ${mac.slice(-4)}`,\n        lat,\n        lon,\n        speedKmh: 0,\n        sectorIdx: sectorIdx,\n        lapCount: 0,\n        lastLapTime: null,\n        bestLapTime: null,\n        lastSectorIdx: sectorIdx,\n        lapStartTime: Date.now(),\n        trail: [], // ultimi N punti per scia\n        color: `hsl(${Math.random() * 360}, 80%, 60%)`,\n      };\n\n      // Rileva crossing linea traguardo (settore 0)\n      let newLapCount = existing.lapCount;\n      let newLapTime = existing.lastLapTime;\n      let newBestLap = existing.bestLapTime;\n\n      if (existing.lastSectorIdx > totalSectors - 10 && sectorIdx < 10) {\n        // Probabile completamento giro\n        const lapDuration = (Date.now() - existing.lapStartTime) / 1000; // secondi\n        if (lapDuration > 5) { // Evita falsi positivi\n          newLapCount = existing.lapCount + 1;\n          newLapTime = lapDuration;\n          if (!newBestLap || lapDuration < newBestLap) {\n            newBestLap = lapDuration;\n          }\n          console.log(`[LAP] ${mac} completato giro ${newLapCount} in ${lapDuration.toFixed(2)}s`);\n        }\n      }\n\n      // Aggiorna trail (max 20 punti)\n      const newTrail = [...existing.trail, { lat, lon }].slice(-20);\n\n      return {\n        ...prev,\n        [mac]: {\n          ...existing,\n          lat,\n          lon,\n          speedKmh,\n          sectorIdx,\n          lastSectorIdx: sectorIdx,\n          lapCount: newLapCount,\n          lastLapTime: newLapTime,\n          bestLapTime: newBestLap,\n          lapStartTime: newLapCount > existing.lapCount ? Date.now() : existing.lapStartTime,\n          trail: newTrail,\n          updatedAt: Date.now(),\n        }\n      };\n    });\n  }, [circuitData]);\n\n  // ========== Aggiorna classifica ==========\n  useEffect(() => {\n    const sorted = Object.values(driversState).sort((a, b) => {\n      if (a.lapCount !== b.lapCount) return b.lapCount - a.lapCount;\n      return b.sectorIdx - a.sectorIdx;\n    });\n    setLeaderboard(sorted);\n  }, [driversState]);\n\n  // ========== Rendering Canvas ==========\n  useEffect(() => {\n    if (!circuitData || !canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const dpr = window.devicePixelRatio || 1;\n\n    const resizeCanvas = () => {\n      const rect = canvas.getBoundingClientRect();\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      ctx.scale(dpr, dpr);\n      canvas.style.width = `${rect.width}px`;\n      canvas.style.height = `${rect.height}px`;\n    };\n\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    const animate = () => {\n      const w = canvas.width / dpr;\n      const h = canvas.height / dpr;\n\n      // Clear\n      ctx.fillStyle = '#0a0e1a';\n      ctx.fillRect(0, 0, w, h);\n\n      if (!circuitData.pathPoints || circuitData.pathPoints.length === 0) {\n        animFrameRef.current = requestAnimationFrame(animate);\n        return;\n      }\n\n      // ========== Calcola bounds per fitting ==========\n      const lats = circuitData.pathPoints.map(p => p.lat);\n      const lons = circuitData.pathPoints.map(p => p.lon);\n      const minLat = Math.min(...lats);\n      const maxLat = Math.max(...lats);\n      const minLon = Math.min(...lons);\n      const maxLon = Math.max(...lons);\n\n      const latRange = maxLat - minLat || 1e-5;\n      const lonRange = maxLon - minLon || 1e-5;\n\n      const padding = 40;\n      const aspectTrack = lonRange / latRange;\n      const aspectCanvas = w / h;\n\n      let scale, offsetX, offsetY;\n      if (aspectTrack > aspectCanvas) {\n        // Limita larghezza\n        scale = (w - 2 * padding) / lonRange;\n        offsetX = padding;\n        offsetY = (h - latRange * scale) / 2;\n      } else {\n        // Limita altezza\n        scale = (h - 2 * padding) / latRange;\n        offsetY = padding;\n        offsetX = (w - lonRange * scale) / 2;\n      }\n\n      const project = (lat, lon) => {\n        const x = offsetX + (lon - minLon) * scale;\n        const y = offsetY + (maxLat - lat) * scale; // flip Y\n        return { x, y };\n      };\n\n      // ========== Disegna tracciato (pista) ==========\n      ctx.strokeStyle = '#2a3f5f';\n      ctx.lineWidth = Math.max(2, (circuitData.params?.widthMeters || 6) * scale * 0.0001 * 100);\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n\n      ctx.beginPath();\n      circuitData.pathPoints.forEach((p, i) => {\n        const { x, y } = project(p.lat, p.lon);\n        if (i === 0) ctx.moveTo(x, y);\n        else ctx.lineTo(x, y);\n      });\n      ctx.stroke();\n\n      // Bordi pista (effetto 3D)\n      ctx.strokeStyle = '#1a2332';\n      ctx.lineWidth = ctx.lineWidth + 4;\n      ctx.globalAlpha = 0.4;\n      ctx.stroke();\n      ctx.globalAlpha = 1;\n\n      // ========== Linea traguardo ==========\n      if (circuitData.sectors && circuitData.sectors.length > 0) {\n        const start = circuitData.sectors[0];\n        const { x, y } = project(start.lat, start.lon);\n        \n        // Casella a scacchi animata\n        ctx.save();\n        ctx.translate(x, y);\n        const checkSize = 6;\n        const offset = (Date.now() / 100) % (checkSize * 2);\n        for (let i = -3; i < 3; i++) {\n          for (let j = -1; j < 2; j++) {\n            if ((i + j) % 2 === 0) ctx.fillStyle = '#fff';\n            else ctx.fillStyle = '#000';\n            ctx.fillRect(i * checkSize - offset, j * checkSize, checkSize, checkSize);\n          }\n        }\n        ctx.restore();\n      }\n\n      // ========== Disegna piloti e scie ==========\n      Object.values(driversState).forEach(driver => {\n        const { lat, lon, trail, color, speedKmh } = driver;\n\n        // Scia (trail)\n        if (trail && trail.length > 1) {\n          ctx.strokeStyle = color;\n          ctx.lineWidth = 2;\n          ctx.globalAlpha = 0.3;\n          ctx.beginPath();\n          trail.forEach((pt, i) => {\n            const { x, y } = project(pt.lat, pt.lon);\n            if (i === 0) ctx.moveTo(x, y);\n            else ctx.lineTo(x, y);\n          });\n          ctx.stroke();\n          ctx.globalAlpha = 1;\n        }\n\n        // Pallino pilota\n        const { x, y } = project(lat, lon);\n        \n        // Alone esterno (pulsante)\n        const pulse = 1 + 0.2 * Math.sin(Date.now() / 200);\n        ctx.fillStyle = color;\n        ctx.globalAlpha = 0.3;\n        ctx.beginPath();\n        ctx.arc(x, y, 12 * pulse, 0, Math.PI * 2);\n        ctx.fill();\n        ctx.globalAlpha = 1;\n\n        // Cerchio pilota\n        ctx.fillStyle = color;\n        ctx.beginPath();\n        ctx.arc(x, y, 8, 0, Math.PI * 2);\n        ctx.fill();\n\n        // Bordo bianco\n        ctx.strokeStyle = '#fff';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n\n        // VelocitÃ  sopra il pilota\n        ctx.fillStyle = '#fff';\n        ctx.font = 'bold 11px \"Formula1\", \"Roboto Mono\", monospace';\n        ctx.textAlign = 'center';\n        ctx.fillText(`${Math.round(speedKmh)}`, x, y - 16);\n      });\n\n      animFrameRef.current = requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      if (animFrameRef.current) cancelAnimationFrame(animFrameRef.current);\n    };\n  }, [circuitData, driversState]);\n\n  // ========== Formatta tempo giro (s â mm:ss.ms) ==========\n  const formatLapTime = (seconds) => {\n    if (!seconds) return '--:--.---';\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(3);\n    return `${mins}:${secs.padStart(6, '0')}`;\n  };\n\n  // ========== UI ==========\n  return (\n    <div className=\"race-page\">\n      {/* Header con logo stile F1 */}\n      <header className=\"race-header\">\n        <div className=\"race-header-left\">\n          <div className=\"race-logo\">ð RACESENSE</div>\n          <div className=\"race-title\">LIVE RACE</div>\n        </div>\n        <div className=\"race-header-right\">\n          {raceActive && circuitData && (\n            <div className=\"circuit-badge\">\n              <span className=\"circuit-icon\">ð£ï¸</span>\n              <span className=\"circuit-name\">{circuitData.name}</span>\n            </div>\n          )}\n        </div>\n      </header>\n\n      {!raceActive ? (\n        // ========== Setup gara ==========\n        <div className=\"race-setup\">\n          <div className=\"setup-card\">\n            <h2>âï¸ Configura Gara</h2>\n            \n            <div className=\"form-group\">\n              <label>Seleziona Circuito</label>\n              <select \n                value={selectedCircuit || ''} \n                onChange={e => setSelectedCircuit(e.target.value)}\n                className=\"circuit-select\"\n              >\n                <option value=\"\">-- Scegli un tracciato --</option>\n                {circuits.map(c => (\n                  <option key={c.id} value={c.id}>\n                    {c.name} ({c.lengthMeters?.toFixed(0)}m, {c.points} punti)\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {circuitData && (\n              <div className=\"circuit-preview\">\n                <h3>ð Info Circuito</h3>\n                <div className=\"circuit-stats\">\n                  <div className=\"stat\">\n                    <span className=\"stat-label\">Lunghezza</span>\n                    <span className=\"stat-value\">{circuitData.stats?.lengthMeters?.toFixed(0)} m</span>\n                  </div>\n                  <div className=\"stat\">\n                    <span className=\"stat-label\">Larghezza</span>\n                    <span className=\"stat-value\">{circuitData.params?.widthMeters || 6} m</span>\n                  </div>\n                  <div className=\"stat\">\n                    <span className=\"stat-label\">Settori</span>\n                    <span className=\"stat-value\">{circuitData.sectors?.length || 0}</span>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <button \n              className=\"start-race-btn\"\n              disabled={!selectedCircuit}\n              onClick={() => setRaceActive(true)}\n            >\n              ð¦ AVVIA GARA\n            </button>\n          </div>\n        </div>\n      ) : (\n        // ========== Vista gara live ==========\n        <div className=\"race-live\">\n          <div className=\"race-main\">\n            {/* Canvas pista */}\n            <div className=\"track-container\">\n              <canvas ref={canvasRef} className=\"track-canvas\" />\n              \n              {/* Overlay info */}\n              <div className=\"track-overlay\">\n                <div className=\"live-indicator\">\n                  <span className=\"live-dot\"></span>\n                  LIVE\n                </div>\n              </div>\n            </div>\n\n            {/* Classifica laterale stile F1 */}\n            <aside className=\"leaderboard\">\n              <div className=\"leaderboard-header\">\n                <h3>ð CLASSIFICA</h3>\n                <div className=\"leaderboard-subtitle\">\n                  {leaderboard.length} Piloti in pista\n                </div>\n              </div>\n              \n              <div className=\"leaderboard-list\">\n                {leaderboard.length === 0 ? (\n                  <div className=\"no-drivers\">\n                    <p>â³ In attesa di dati GPS...</p>\n                    <small>Avvia il simulatore o connetti dispositivi GPS</small>\n                  </div>\n                ) : (\n                  leaderboard.map((driver, pos) => (\n                    <div \n                      key={driver.mac} \n                      className={`leaderboard-item ${pos === 0 ? 'leader' : ''}`}\n                    >\n                      <div className=\"position\">{pos + 1}</div>\n                      \n                      <div className=\"driver-color\" style={{ background: driver.color }}></div>\n                      \n                      <div className=\"driver-info\">\n                        <div className=\"driver-name\">\n                          {driver.name}\n                          {pos === 0 && <span className=\"leader-badge\">ð</span>}\n                        </div>\n                        <div className=\"driver-stats\">\n                          <span className=\"lap-count\">Giro {driver.lapCount}</span>\n                          <span className=\"sector\">S{driver.sectorIdx}</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"driver-times\">\n                        <div className=\"speed\">{Math.round(driver.speedKmh)} km/h</div>\n                        {driver.bestLapTime && (\n                          <div className=\"best-lap\">\n                            â±ï¸ {formatLapTime(driver.bestLapTime)}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </aside>\n          </div>\n\n          {/* Controlli gara */}\n          <div className=\"race-controls\">\n            <button \n              className=\"stop-race-btn\"\n              onClick={() => {\n                setRaceActive(false);\n                setDriversState({});\n                setLeaderboard([]);\n              }}\n            >\n              â¹ï¸ Termina Gara\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}